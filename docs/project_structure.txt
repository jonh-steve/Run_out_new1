--- Folder Structure ---
[.github]
    └── [workflows]
        ├── ci.yml
        └── deploy.yml
.gitignore
[.qodo]
README.md
cautructhumuc.md
[client]
    ├── .eslintrc.js
    ├── .prettierrc
    ├── README.md
    ├── jsconfig.json
    ├── package.json
    ├── [public]
        └── index.html
    ├── [src]
        ├── App.js
        ├── [assets]
            └── [css]
                └── index.css
        ├── [components]
            ├── [common]
                ├── [Button]
                    └── Button.js
                ├── [Card]
                    └── Card.js
                ├── [Input]
                    └── Input.js
                └── [LoadingSpiner]
                    └── index.js
            └── [layout]
                ├── [AuthLayout]
                    └── index.js
                ├── [Footer]
                    └── index.js
                ├── [Header]
                    └── index.js
                └── [MainLayout]
                    └── index.js
        ├── [hooks]
            ├── useDebounce.js
            ├── useForm.js
            ├── useLocalStorage.js
            └── useOutsideClick.js
        ├── index.js
        ├── [pages]
            ├── [Auth]
                └── [Login]
                    └── index.js
            ├── [Home]
                ├── [NotFound]
                └── index.js
            └── [NotFound]
                └── index.js
        ├── [routes]
            ├── PrivateRoute.js
            ├── PublicRoute.js
            ├── index.js
            └── paths.js
        ├── [services]
            ├── api.js
            ├── authService.js
            ├── cartService.js
            └── productService.js
        ├── [store]
            ├── hooks.js
            ├── index.js
            └── [slices]
                ├── authSlice.js
                ├── cartSlice.js
                ├── productSlice.js
                └── uiSlice.js
        └── [utils]
            ├── authToken.js
            └── formatters.js
    └── tailwind.config.js
[docker]
    ├── Dockerfile.client
    ├── Dockerfile.server
    └── docker-compose.yml
docker-compose.prod.yml
[docs]
    └── CI-CD-Guide.md
init-structure.sh
[nginx]
    └── [conf.d]
        └── default.conf
[prometheus]
    └── prometheus.yml
[scripts]
    └── mongodb-backup.sh
[server]
    ├── .eslintrc.js
    ├── .prettierrc
    ├── README.md
    ├── jest.config.js
    ├── jsconfig.json
    ├── [logs]
    ├── [node_modules]
        ├── [.bin]
            ├── acorn
            ├── browserslist
            ├── color-support
            ├── create-jest
            ├── eslint
            ├── eslint-config-prettier
            ├── esparse
            ├── esvalidate
            ├── husky
            ├── import-local-fixture
            ├── jest
            ├── js-yaml
            ├── jsesc
            ├── json5
            ├── lint-staged
            ├── mime
            ├── mkdirp
            ├── node-pre-gyp
            ├── node-which
            ├── nodemon
            ├── nodetouch
            ├── nopt
            ├── parser
            ├── pidtree
            ├── prettier
            ├── resolve
            ├── rimraf
            ├── semver
            ├── tsc
            ├── tsserver
            ├── update-browserslist-db
            └── yaml
        ├── [@ampproject]
            └── [remapping]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── remapping.mjs
                    ├── remapping.mjs.map
                    ├── remapping.umd.js
                    ├── remapping.umd.js.map
                    └── [types]
                        ├── build-source-map-tree.d.ts
                        ├── remapping.d.ts
                        ├── source-map-tree.d.ts
                        ├── source-map.d.ts
                        └── types.d.ts
                └── package.json
        ├── [@babel]
            ├── [code-frame]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [compat-data]
                ├── LICENSE
                ├── README.md
                ├── corejs2-built-ins.js
                ├── corejs3-shipped-proposals.js
                ├── [data]
                    ├── corejs2-built-ins.json
                    ├── corejs3-shipped-proposals.json
                    ├── native-modules.json
                    ├── overlapping-plugins.json
                    ├── plugin-bugfixes.json
                    └── plugins.json
                ├── native-modules.js
                ├── overlapping-plugins.js
                ├── package.json
                ├── plugin-bugfixes.js
                └── plugins.js
            ├── [core]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── [config]
                        ├── cache-contexts.js
                        ├── cache-contexts.js.map
                        ├── caching.js
                        ├── caching.js.map
                        ├── config-chain.js
                        ├── config-chain.js.map
                        ├── config-descriptors.js
                        ├── config-descriptors.js.map
                        ├── [files]
                            ├── configuration.js
                            ├── configuration.js.map
                            ├── import.cjs
                            ├── import.cjs.map
                            ├── index-browser.js
                            ├── index-browser.js.map
                            ├── index.js
                            ├── index.js.map
                            ├── module-types.js
                            ├── module-types.js.map
                            ├── package.js
                            ├── package.js.map
                            ├── plugins.js
                            ├── plugins.js.map
                            ├── types.js
                            ├── types.js.map
                            ├── utils.js
                            └── utils.js.map
                        ├── full.js
                        ├── full.js.map
                        ├── [helpers]
                            ├── config-api.js
                            ├── config-api.js.map
                            ├── deep-array.js
                            ├── deep-array.js.map
                            ├── environment.js
                            └── environment.js.map
                        ├── index.js
                        ├── index.js.map
                        ├── item.js
                        ├── item.js.map
                        ├── partial.js
                        ├── partial.js.map
                        ├── pattern-to-regex.js
                        ├── pattern-to-regex.js.map
                        ├── plugin.js
                        ├── plugin.js.map
                        ├── printer.js
                        ├── printer.js.map
                        ├── resolve-targets-browser.js
                        ├── resolve-targets-browser.js.map
                        ├── resolve-targets.js
                        ├── resolve-targets.js.map
                        ├── util.js
                        ├── util.js.map
                        └── [validation]
                            ├── option-assertions.js
                            ├── option-assertions.js.map
                            ├── options.js
                            ├── options.js.map
                            ├── plugins.js
                            ├── plugins.js.map
                            ├── removed.js
                            └── removed.js.map
                    ├── [errors]
                        ├── config-error.js
                        ├── config-error.js.map
                        ├── rewrite-stack-trace.js
                        └── rewrite-stack-trace.js.map
                    ├── [gensync-utils]
                        ├── async.js
                        ├── async.js.map
                        ├── fs.js
                        ├── fs.js.map
                        ├── functional.js
                        └── functional.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── parse.js
                    ├── parse.js.map
                    ├── [parser]
                        ├── index.js
                        ├── index.js.map
                        └── [util]
                            ├── missing-plugin-helper.js
                            └── missing-plugin-helper.js.map
                    ├── [tools]
                        ├── build-external-helpers.js
                        └── build-external-helpers.js.map
                    ├── transform-ast.js
                    ├── transform-ast.js.map
                    ├── transform-file-browser.js
                    ├── transform-file-browser.js.map
                    ├── transform-file.js
                    ├── transform-file.js.map
                    ├── transform.js
                    ├── transform.js.map
                    ├── [transformation]
                        ├── block-hoist-plugin.js
                        ├── block-hoist-plugin.js.map
                        ├── [file]
                            ├── babel-7-helpers.cjs
                            ├── babel-7-helpers.cjs.map
                            ├── file.js
                            ├── file.js.map
                            ├── generate.js
                            ├── generate.js.map
                            ├── merge-map.js
                            └── merge-map.js.map
                        ├── index.js
                        ├── index.js.map
                        ├── normalize-file.js
                        ├── normalize-file.js.map
                        ├── normalize-opts.js
                        ├── normalize-opts.js.map
                        ├── plugin-pass.js
                        ├── plugin-pass.js.map
                        └── [util]
                            ├── clone-deep.js
                            └── clone-deep.js.map
                    └── [vendor]
                        ├── import-meta-resolve.js
                        └── import-meta-resolve.js.map
                ├── [node_modules]
                    ├── [.bin]
                        └── semver
                    ├── [debug]
                        ├── LICENSE
                        ├── README.md
                        ├── package.json
                        └── [src]
                            ├── browser.js
                            ├── common.js
                            ├── index.js
                            └── node.js
                    ├── [ms]
                        ├── index.js
                        ├── license.md
                        ├── package.json
                        └── readme.md
                    └── [semver]
                        ├── LICENSE
                        ├── README.md
                        ├── [bin]
                            └── semver.js
                        ├── package.json
                        ├── range.bnf
                        └── semver.js
                ├── package.json
                └── [src]
                    ├── [config]
                        ├── [files]
                            ├── index-browser.ts
                            └── index.ts
                        ├── resolve-targets-browser.ts
                        └── resolve-targets.ts
                    ├── transform-file-browser.ts
                    └── transform-file.ts
            ├── [generator]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── buffer.js
                    ├── buffer.js.map
                    ├── [generators]
                        ├── base.js
                        ├── base.js.map
                        ├── classes.js
                        ├── classes.js.map
                        ├── deprecated.js
                        ├── deprecated.js.map
                        ├── expressions.js
                        ├── expressions.js.map
                        ├── flow.js
                        ├── flow.js.map
                        ├── index.js
                        ├── index.js.map
                        ├── jsx.js
                        ├── jsx.js.map
                        ├── methods.js
                        ├── methods.js.map
                        ├── modules.js
                        ├── modules.js.map
                        ├── statements.js
                        ├── statements.js.map
                        ├── template-literals.js
                        ├── template-literals.js.map
                        ├── types.js
                        ├── types.js.map
                        ├── typescript.js
                        └── typescript.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── [node]
                        ├── index.js
                        ├── index.js.map
                        ├── parentheses.js
                        ├── parentheses.js.map
                        ├── whitespace.js
                        └── whitespace.js.map
                    ├── printer.js
                    ├── printer.js.map
                    ├── source-map.js
                    ├── source-map.js.map
                    ├── token-map.js
                    └── token-map.js.map
                └── package.json
            ├── [helper-compilation-targets]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── debug.js
                    ├── debug.js.map
                    ├── filter-items.js
                    ├── filter-items.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── options.js
                    ├── options.js.map
                    ├── pretty.js
                    ├── pretty.js.map
                    ├── targets.js
                    ├── targets.js.map
                    ├── utils.js
                    └── utils.js.map
                ├── [node_modules]
                    ├── [.bin]
                        └── semver
                    └── [semver]
                        ├── LICENSE
                        ├── README.md
                        ├── [bin]
                            └── semver.js
                        ├── package.json
                        ├── range.bnf
                        └── semver.js
                └── package.json
            ├── [helper-module-imports]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── import-builder.js
                    ├── import-builder.js.map
                    ├── import-injector.js
                    ├── import-injector.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── is-module.js
                    └── is-module.js.map
                └── package.json
            ├── [helper-module-transforms]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── dynamic-import.js
                    ├── dynamic-import.js.map
                    ├── get-module-name.js
                    ├── get-module-name.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── lazy-modules.js
                    ├── lazy-modules.js.map
                    ├── normalize-and-load-metadata.js
                    ├── normalize-and-load-metadata.js.map
                    ├── rewrite-live-references.js
                    ├── rewrite-live-references.js.map
                    ├── rewrite-this.js
                    └── rewrite-this.js.map
                └── package.json
            ├── [helper-plugin-utils]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [helper-string-parser]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [helper-validator-identifier]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── identifier.js
                    ├── identifier.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── keyword.js
                    └── keyword.js.map
                └── package.json
            ├── [helper-validator-option]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── find-suggestion.js
                    ├── find-suggestion.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── validator.js
                    └── validator.js.map
                └── package.json
            ├── [helpers]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── [helpers]
                        ├── AwaitValue.js
                        ├── AwaitValue.js.map
                        ├── OverloadYield.js
                        ├── OverloadYield.js.map
                        ├── applyDecoratedDescriptor.js
                        ├── applyDecoratedDescriptor.js.map
                        ├── applyDecs.js
                        ├── applyDecs.js.map
                        ├── applyDecs2203.js
                        ├── applyDecs2203.js.map
                        ├── applyDecs2203R.js
                        ├── applyDecs2203R.js.map
                        ├── applyDecs2301.js
                        ├── applyDecs2301.js.map
                        ├── applyDecs2305.js
                        ├── applyDecs2305.js.map
                        ├── applyDecs2311.js
                        ├── applyDecs2311.js.map
                        ├── arrayLikeToArray.js
                        ├── arrayLikeToArray.js.map
                        ├── arrayWithHoles.js
                        ├── arrayWithHoles.js.map
                        ├── arrayWithoutHoles.js
                        ├── arrayWithoutHoles.js.map
                        ├── assertClassBrand.js
                        ├── assertClassBrand.js.map
                        ├── assertThisInitialized.js
                        ├── assertThisInitialized.js.map
                        ├── asyncGeneratorDelegate.js
                        ├── asyncGeneratorDelegate.js.map
                        ├── asyncIterator.js
                        ├── asyncIterator.js.map
                        ├── asyncToGenerator.js
                        ├── asyncToGenerator.js.map
                        ├── awaitAsyncGenerator.js
                        ├── awaitAsyncGenerator.js.map
                        ├── callSuper.js
                        ├── callSuper.js.map
                        ├── checkInRHS.js
                        ├── checkInRHS.js.map
                        ├── checkPrivateRedeclaration.js
                        ├── checkPrivateRedeclaration.js.map
                        ├── classApplyDescriptorDestructureSet.js
                        ├── classApplyDescriptorDestructureSet.js.map
                        ├── classApplyDescriptorGet.js
                        ├── classApplyDescriptorGet.js.map
                        ├── classApplyDescriptorSet.js
                        ├── classApplyDescriptorSet.js.map
                        ├── classCallCheck.js
                        ├── classCallCheck.js.map
                        ├── classCheckPrivateStaticAccess.js
                        ├── classCheckPrivateStaticAccess.js.map
                        ├── classCheckPrivateStaticFieldDescriptor.js
                        ├── classCheckPrivateStaticFieldDescriptor.js.map
                        ├── classExtractFieldDescriptor.js
                        ├── classExtractFieldDescriptor.js.map
                        ├── classNameTDZError.js
                        ├── classNameTDZError.js.map
                        ├── classPrivateFieldDestructureSet.js
                        ├── classPrivateFieldDestructureSet.js.map
                        ├── classPrivateFieldGet.js
                        ├── classPrivateFieldGet.js.map
                        ├── classPrivateFieldGet2.js
                        ├── classPrivateFieldGet2.js.map
                        ├── classPrivateFieldInitSpec.js
                        ├── classPrivateFieldInitSpec.js.map
                        ├── classPrivateFieldLooseBase.js
                        ├── classPrivateFieldLooseBase.js.map
                        ├── classPrivateFieldLooseKey.js
                        ├── classPrivateFieldLooseKey.js.map
                        ├── classPrivateFieldSet.js
                        ├── classPrivateFieldSet.js.map
                        ├── classPrivateFieldSet2.js
                        ├── classPrivateFieldSet2.js.map
                        ├── classPrivateGetter.js
                        ├── classPrivateGetter.js.map
                        ├── classPrivateMethodGet.js
                        ├── classPrivateMethodGet.js.map
                        ├── classPrivateMethodInitSpec.js
                        ├── classPrivateMethodInitSpec.js.map
                        ├── classPrivateMethodSet.js
                        ├── classPrivateMethodSet.js.map
                        ├── classPrivateSetter.js
                        ├── classPrivateSetter.js.map
                        ├── classStaticPrivateFieldDestructureSet.js
                        ├── classStaticPrivateFieldDestructureSet.js.map
                        ├── classStaticPrivateFieldSpecGet.js
                        ├── classStaticPrivateFieldSpecGet.js.map
                        ├── classStaticPrivateFieldSpecSet.js
                        ├── classStaticPrivateFieldSpecSet.js.map
                        ├── classStaticPrivateMethodGet.js
                        ├── classStaticPrivateMethodGet.js.map
                        ├── classStaticPrivateMethodSet.js
                        ├── classStaticPrivateMethodSet.js.map
                        ├── construct.js
                        ├── construct.js.map
                        ├── createClass.js
                        ├── createClass.js.map
                        ├── createForOfIteratorHelper.js
                        ├── createForOfIteratorHelper.js.map
                        ├── createForOfIteratorHelperLoose.js
                        ├── createForOfIteratorHelperLoose.js.map
                        ├── createSuper.js
                        ├── createSuper.js.map
                        ├── decorate.js
                        ├── decorate.js.map
                        ├── defaults.js
                        ├── defaults.js.map
                        ├── defineAccessor.js
                        ├── defineAccessor.js.map
                        ├── defineEnumerableProperties.js
                        ├── defineEnumerableProperties.js.map
                        ├── defineProperty.js
                        ├── defineProperty.js.map
                        ├── dispose.js
                        ├── dispose.js.map
                        ├── extends.js
                        ├── extends.js.map
                        ├── get.js
                        ├── get.js.map
                        ├── getPrototypeOf.js
                        ├── getPrototypeOf.js.map
                        ├── identity.js
                        ├── identity.js.map
                        ├── importDeferProxy.js
                        ├── importDeferProxy.js.map
                        ├── inherits.js
                        ├── inherits.js.map
                        ├── inheritsLoose.js
                        ├── inheritsLoose.js.map
                        ├── initializerDefineProperty.js
                        ├── initializerDefineProperty.js.map
                        ├── initializerWarningHelper.js
                        ├── initializerWarningHelper.js.map
                        ├── instanceof.js
                        ├── instanceof.js.map
                        ├── interopRequireDefault.js
                        ├── interopRequireDefault.js.map
                        ├── interopRequireWildcard.js
                        ├── interopRequireWildcard.js.map
                        ├── isNativeFunction.js
                        ├── isNativeFunction.js.map
                        ├── isNativeReflectConstruct.js
                        ├── isNativeReflectConstruct.js.map
                        ├── iterableToArray.js
                        ├── iterableToArray.js.map
                        ├── iterableToArrayLimit.js
                        ├── iterableToArrayLimit.js.map
                        ├── jsx.js
                        ├── jsx.js.map
                        ├── maybeArrayLike.js
                        ├── maybeArrayLike.js.map
                        ├── newArrowCheck.js
                        ├── newArrowCheck.js.map
                        ├── nonIterableRest.js
                        ├── nonIterableRest.js.map
                        ├── nonIterableSpread.js
                        ├── nonIterableSpread.js.map
                        ├── nullishReceiverError.js
                        ├── nullishReceiverError.js.map
                        ├── objectDestructuringEmpty.js
                        ├── objectDestructuringEmpty.js.map
                        ├── objectSpread.js
                        ├── objectSpread.js.map
                        ├── objectSpread2.js
                        ├── objectSpread2.js.map
                        ├── objectWithoutProperties.js
                        ├── objectWithoutProperties.js.map
                        ├── objectWithoutPropertiesLoose.js
                        ├── objectWithoutPropertiesLoose.js.map
                        ├── possibleConstructorReturn.js
                        ├── possibleConstructorReturn.js.map
                        ├── readOnlyError.js
                        ├── readOnlyError.js.map
                        ├── regeneratorRuntime.js
                        ├── regeneratorRuntime.js.map
                        ├── set.js
                        ├── set.js.map
                        ├── setFunctionName.js
                        ├── setFunctionName.js.map
                        ├── setPrototypeOf.js
                        ├── setPrototypeOf.js.map
                        ├── skipFirstGeneratorNext.js
                        ├── skipFirstGeneratorNext.js.map
                        ├── slicedToArray.js
                        ├── slicedToArray.js.map
                        ├── superPropBase.js
                        ├── superPropBase.js.map
                        ├── superPropGet.js
                        ├── superPropGet.js.map
                        ├── superPropSet.js
                        ├── superPropSet.js.map
                        ├── taggedTemplateLiteral.js
                        ├── taggedTemplateLiteral.js.map
                        ├── taggedTemplateLiteralLoose.js
                        ├── taggedTemplateLiteralLoose.js.map
                        ├── tdz.js
                        ├── tdz.js.map
                        ├── temporalRef.js
                        ├── temporalRef.js.map
                        ├── temporalUndefined.js
                        ├── temporalUndefined.js.map
                        ├── toArray.js
                        ├── toArray.js.map
                        ├── toConsumableArray.js
                        ├── toConsumableArray.js.map
                        ├── toPrimitive.js
                        ├── toPrimitive.js.map
                        ├── toPropertyKey.js
                        ├── toPropertyKey.js.map
                        ├── toSetter.js
                        ├── toSetter.js.map
                        ├── tsRewriteRelativeImportExtensions.js
                        ├── tsRewriteRelativeImportExtensions.js.map
                        ├── typeof.js
                        ├── typeof.js.map
                        ├── unsupportedIterableToArray.js
                        ├── unsupportedIterableToArray.js.map
                        ├── using.js
                        ├── using.js.map
                        ├── usingCtx.js
                        ├── usingCtx.js.map
                        ├── wrapAsyncGenerator.js
                        ├── wrapAsyncGenerator.js.map
                        ├── wrapNativeSuper.js
                        ├── wrapNativeSuper.js.map
                        ├── wrapRegExp.js
                        ├── wrapRegExp.js.map
                        ├── writeOnlyError.js
                        └── writeOnlyError.js.map
                    ├── helpers-generated.js
                    ├── helpers-generated.js.map
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [parser]
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── [bin]
                    └── babel-parser.js
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                ├── package.json
                └── [typings]
                    └── babel-parser.d.ts
            ├── [plugin-syntax-async-generators]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-bigint]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-class-properties]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-class-static-block]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-import-attributes]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [plugin-syntax-import-meta]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-json-strings]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-jsx]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [plugin-syntax-logical-assignment-operators]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-nullish-coalescing-operator]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-numeric-separator]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-object-rest-spread]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-optional-catch-binding]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-optional-chaining]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-private-property-in-object]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-top-level-await]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    └── index.js
                └── package.json
            ├── [plugin-syntax-typescript]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── index.js
                    └── index.js.map
                └── package.json
            ├── [template]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── builder.js
                    ├── builder.js.map
                    ├── formatters.js
                    ├── formatters.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── literal.js
                    ├── literal.js.map
                    ├── options.js
                    ├── options.js.map
                    ├── parse.js
                    ├── parse.js.map
                    ├── populate.js
                    ├── populate.js.map
                    ├── string.js
                    └── string.js.map
                └── package.json
            ├── [traverse]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── cache.js
                    ├── cache.js.map
                    ├── context.js
                    ├── context.js.map
                    ├── hub.js
                    ├── hub.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── [path]
                        ├── ancestry.js
                        ├── ancestry.js.map
                        ├── comments.js
                        ├── comments.js.map
                        ├── context.js
                        ├── context.js.map
                        ├── conversion.js
                        ├── conversion.js.map
                        ├── evaluation.js
                        ├── evaluation.js.map
                        ├── family.js
                        ├── family.js.map
                        ├── index.js
                        ├── index.js.map
                        ├── [inference]
                            ├── index.js
                            ├── index.js.map
                            ├── inferer-reference.js
                            ├── inferer-reference.js.map
                            ├── inferers.js
                            ├── inferers.js.map
                            ├── util.js
                            └── util.js.map
                        ├── introspection.js
                        ├── introspection.js.map
                        ├── [lib]
                            ├── hoister.js
                            ├── hoister.js.map
                            ├── removal-hooks.js
                            ├── removal-hooks.js.map
                            ├── virtual-types-validator.js
                            ├── virtual-types-validator.js.map
                            ├── virtual-types.js
                            └── virtual-types.js.map
                        ├── modification.js
                        ├── modification.js.map
                        ├── removal.js
                        ├── removal.js.map
                        ├── replacement.js
                        └── replacement.js.map
                    ├── [scope]
                        ├── binding.js
                        ├── binding.js.map
                        ├── index.js
                        ├── index.js.map
                        └── [lib]
                            ├── renamer.js
                            └── renamer.js.map
                    ├── traverse-node.js
                    ├── traverse-node.js.map
                    ├── types.js
                    ├── types.js.map
                    ├── visitors.js
                    └── visitors.js.map
                ├── [node_modules]
                    ├── [debug]
                        ├── LICENSE
                        ├── README.md
                        ├── package.json
                        └── [src]
                            ├── browser.js
                            ├── common.js
                            ├── index.js
                            └── node.js
                    ├── [globals]
                        ├── globals.json
                        ├── index.js
                        ├── license
                        ├── package.json
                        └── readme.md
                    └── [ms]
                        ├── index.js
                        ├── license.md
                        ├── package.json
                        └── readme.md
                └── package.json
            └── [types]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── [asserts]
                        ├── assertNode.js
                        ├── assertNode.js.map
                        └── [generated]
                            ├── index.js
                            └── index.js.map
                    ├── [ast-types]
                        └── [generated]
                            ├── index.js
                            └── index.js.map
                    ├── [builders]
                        ├── [flow]
                            ├── createFlowUnionType.js
                            ├── createFlowUnionType.js.map
                            ├── createTypeAnnotationBasedOnTypeof.js
                            └── createTypeAnnotationBasedOnTypeof.js.map
                        ├── [generated]
                            ├── index.js
                            ├── index.js.map
                            ├── lowercase.js
                            ├── lowercase.js.map
                            ├── uppercase.js
                            └── uppercase.js.map
                        ├── productions.js
                        ├── productions.js.map
                        ├── [react]
                            ├── buildChildren.js
                            └── buildChildren.js.map
                        ├── [typescript]
                            ├── createTSUnionType.js
                            └── createTSUnionType.js.map
                        ├── validateNode.js
                        └── validateNode.js.map
                    ├── [clone]
                        ├── clone.js
                        ├── clone.js.map
                        ├── cloneDeep.js
                        ├── cloneDeep.js.map
                        ├── cloneDeepWithoutLoc.js
                        ├── cloneDeepWithoutLoc.js.map
                        ├── cloneNode.js
                        ├── cloneNode.js.map
                        ├── cloneWithoutLoc.js
                        └── cloneWithoutLoc.js.map
                    ├── [comments]
                        ├── addComment.js
                        ├── addComment.js.map
                        ├── addComments.js
                        ├── addComments.js.map
                        ├── inheritInnerComments.js
                        ├── inheritInnerComments.js.map
                        ├── inheritLeadingComments.js
                        ├── inheritLeadingComments.js.map
                        ├── inheritTrailingComments.js
                        ├── inheritTrailingComments.js.map
                        ├── inheritsComments.js
                        ├── inheritsComments.js.map
                        ├── removeComments.js
                        └── removeComments.js.map
                    ├── [constants]
                        ├── [generated]
                            ├── index.js
                            └── index.js.map
                        ├── index.js
                        └── index.js.map
                    ├── [converters]
                        ├── ensureBlock.js
                        ├── ensureBlock.js.map
                        ├── gatherSequenceExpressions.js
                        ├── gatherSequenceExpressions.js.map
                        ├── toBindingIdentifierName.js
                        ├── toBindingIdentifierName.js.map
                        ├── toBlock.js
                        ├── toBlock.js.map
                        ├── toComputedKey.js
                        ├── toComputedKey.js.map
                        ├── toExpression.js
                        ├── toExpression.js.map
                        ├── toIdentifier.js
                        ├── toIdentifier.js.map
                        ├── toKeyAlias.js
                        ├── toKeyAlias.js.map
                        ├── toSequenceExpression.js
                        ├── toSequenceExpression.js.map
                        ├── toStatement.js
                        ├── toStatement.js.map
                        ├── valueToNode.js
                        └── valueToNode.js.map
                    ├── [definitions]
                        ├── core.js
                        ├── core.js.map
                        ├── deprecated-aliases.js
                        ├── deprecated-aliases.js.map
                        ├── experimental.js
                        ├── experimental.js.map
                        ├── flow.js
                        ├── flow.js.map
                        ├── index.js
                        ├── index.js.map
                        ├── jsx.js
                        ├── jsx.js.map
                        ├── misc.js
                        ├── misc.js.map
                        ├── placeholders.js
                        ├── placeholders.js.map
                        ├── typescript.js
                        ├── typescript.js.map
                        ├── utils.js
                        └── utils.js.map
                    ├── index-legacy.d.ts
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.flow
                    ├── index.js.map
                    ├── [modifications]
                        ├── appendToMemberExpression.js
                        ├── appendToMemberExpression.js.map
                        ├── [flow]
                            ├── removeTypeDuplicates.js
                            └── removeTypeDuplicates.js.map
                        ├── inherits.js
                        ├── inherits.js.map
                        ├── prependToMemberExpression.js
                        ├── prependToMemberExpression.js.map
                        ├── removeProperties.js
                        ├── removeProperties.js.map
                        ├── removePropertiesDeep.js
                        ├── removePropertiesDeep.js.map
                        └── [typescript]
                            ├── removeTypeDuplicates.js
                            └── removeTypeDuplicates.js.map
                    ├── [retrievers]
                        ├── getAssignmentIdentifiers.js
                        ├── getAssignmentIdentifiers.js.map
                        ├── getBindingIdentifiers.js
                        ├── getBindingIdentifiers.js.map
                        ├── getFunctionName.js
                        ├── getFunctionName.js.map
                        ├── getOuterBindingIdentifiers.js
                        └── getOuterBindingIdentifiers.js.map
                    ├── [traverse]
                        ├── traverse.js
                        ├── traverse.js.map
                        ├── traverseFast.js
                        └── traverseFast.js.map
                    ├── [utils]
                        ├── deprecationWarning.js
                        ├── deprecationWarning.js.map
                        ├── inherit.js
                        ├── inherit.js.map
                        ├── [react]
                            ├── cleanJSXElementLiteralChild.js
                            └── cleanJSXElementLiteralChild.js.map
                        ├── shallowEqual.js
                        └── shallowEqual.js.map
                    └── [validators]
                        ├── buildMatchMemberExpression.js
                        ├── buildMatchMemberExpression.js.map
                        ├── [generated]
                            ├── index.js
                            └── index.js.map
                        ├── is.js
                        ├── is.js.map
                        ├── isBinding.js
                        ├── isBinding.js.map
                        ├── isBlockScoped.js
                        ├── isBlockScoped.js.map
                        ├── isImmutable.js
                        ├── isImmutable.js.map
                        ├── isLet.js
                        ├── isLet.js.map
                        ├── isNode.js
                        ├── isNode.js.map
                        ├── isNodesEquivalent.js
                        ├── isNodesEquivalent.js.map
                        ├── isPlaceholderType.js
                        ├── isPlaceholderType.js.map
                        ├── isReferenced.js
                        ├── isReferenced.js.map
                        ├── isScope.js
                        ├── isScope.js.map
                        ├── isSpecifierDefault.js
                        ├── isSpecifierDefault.js.map
                        ├── isType.js
                        ├── isType.js.map
                        ├── isValidES3Identifier.js
                        ├── isValidES3Identifier.js.map
                        ├── isValidIdentifier.js
                        ├── isValidIdentifier.js.map
                        ├── isVar.js
                        ├── isVar.js.map
                        ├── matchesPattern.js
                        ├── matchesPattern.js.map
                        ├── [react]
                            ├── isCompatTag.js
                            ├── isCompatTag.js.map
                            ├── isReactComponent.js
                            └── isReactComponent.js.map
                        ├── validate.js
                        └── validate.js.map
                └── package.json
        ├── [@bcoe]
            └── [v8-coverage]
                ├── .editorconfig
                ├── .gitattributes
                ├── CHANGELOG.md
                ├── LICENSE.md
                ├── LICENSE.txt
                ├── README.md
                ├── [dist]
                    └── [lib]
                        ├── CHANGELOG.md
                        ├── LICENSE.md
                        ├── README.md
                        ├── [_src]
                            ├── ascii.ts
                            ├── clone.ts
                            ├── compare.ts
                            ├── index.ts
                            ├── merge.ts
                            ├── normalize.ts
                            ├── range-tree.ts
                            └── types.ts
                        ├── ascii.d.ts
                        ├── ascii.js
                        ├── ascii.mjs
                        ├── clone.d.ts
                        ├── clone.js
                        ├── clone.mjs
                        ├── compare.d.ts
                        ├── compare.js
                        ├── compare.mjs
                        ├── index.d.ts
                        ├── index.js
                        ├── index.mjs
                        ├── merge.d.ts
                        ├── merge.js
                        ├── merge.mjs
                        ├── normalize.d.ts
                        ├── normalize.js
                        ├── normalize.mjs
                        ├── package.json
                        ├── range-tree.d.ts
                        ├── range-tree.js
                        ├── range-tree.mjs
                        ├── tsconfig.json
                        ├── types.d.ts
                        ├── types.js
                        └── types.mjs
                ├── gulpfile.ts
                ├── package.json
                ├── [src]
                    ├── [lib]
                        ├── ascii.ts
                        ├── clone.ts
                        ├── compare.ts
                        ├── index.ts
                        ├── merge.ts
                        ├── normalize.ts
                        ├── range-tree.ts
                        └── types.ts
                    └── [test]
                        └── merge.spec.ts
                └── tsconfig.json
        ├── [@colors]
            └── [colors]
                ├── LICENSE
                ├── README.md
                ├── [examples]
                    ├── normal-usage.js
                    └── safe-string.js
                ├── index.d.ts
                ├── [lib]
                    ├── colors.js
                    ├── [custom]
                        ├── trap.js
                        └── zalgo.js
                    ├── extendStringPrototype.js
                    ├── index.js
                    ├── [maps]
                        ├── america.js
                        ├── rainbow.js
                        ├── random.js
                        └── zebra.js
                    ├── styles.js
                    └── [system]
                        ├── has-flag.js
                        └── supports-colors.js
                ├── package.json
                ├── safe.d.ts
                ├── safe.js
                └── [themes]
                    └── generic-logging.js
        ├── [@dabh]
            └── [diagnostics]
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── [adapters]
                    ├── hash.js
                    ├── index.js
                    ├── localstorage.js
                ├── [browser]
                    ├── development.js
                    ├── index.js
                    ├── override.js
                    └── production.js
                ├── diagnostics.js
                ├── [logger]
                    └── console.js
                ├── [modifiers]
                    ├── namespace-ansi.js
                    └── namespace.js
                ├── [node]
                    ├── development.js
                    ├── index.js
                    ├── override.js
                    └── production.js
                └── package.json
        ├── [@eslint]
            ├── [eslintrc]
                ├── LICENSE
                ├── README.md
                ├── [conf]
                    ├── config-schema.js
                    └── environments.js
                ├── [dist]
                    ├── eslintrc-universal.cjs
                    ├── eslintrc-universal.cjs.map
                    ├── eslintrc.cjs
                    └── eslintrc.cjs.map
                ├── [lib]
                    ├── cascading-config-array-factory.js
                    ├── [config-array]
                        ├── config-array.js
                        ├── config-dependency.js
                        ├── extracted-config.js
                        ├── ignore-pattern.js
                        ├── index.js
                        └── override-tester.js
                    ├── config-array-factory.js
                    ├── flat-compat.js
                    ├── index-universal.js
                    ├── index.js
                    └── [shared]
                        ├── ajv.js
                        ├── config-ops.js
                        ├── config-validator.js
                        ├── deprecation-warnings.js
                        ├── naming.js
                        ├── relative-module-resolver.js
                        └── types.js
                ├── [node_modules]
                    ├── [debug]
                        ├── LICENSE
                        ├── README.md
                        ├── package.json
                        └── [src]
                            ├── browser.js
                            ├── common.js
                            ├── index.js
                            └── node.js
                    └── [ms]
                        ├── index.js
                        ├── license.md
                        ├── package.json
                        └── readme.md
                ├── package.json
                └── universal.js
            └── [js]
                ├── LICENSE
                ├── README.md
                ├── package.json
                └── [src]
                    ├── [configs]
                        ├── eslint-all.js
                        └── eslint-recommended.js
                    └── index.js
        ├── [@eslint-community]
            ├── [eslint-utils]
                ├── LICENSE
                ├── README.md
                ├── index.d.mts
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── index.mjs
                ├── index.mjs.map
                └── package.json
            └── [regexpp]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── index.mjs
                ├── index.mjs.map
                └── package.json
        ├── [@hapi]
            ├── [hoek]
                ├── LICENSE.md
                ├── README.md
                ├── [lib]
                    ├── applyToDefaults.js
                    ├── assert.js
                    ├── bench.js
                    ├── block.js
                    ├── clone.js
                    ├── contain.js
                    ├── deepEqual.js
                    ├── error.js
                    ├── escapeHeaderAttribute.js
                    ├── escapeHtml.js
                    ├── escapeJson.js
                    ├── escapeRegex.js
                    ├── flatten.js
                    ├── ignore.js
                    ├── index.d.ts
                    ├── index.js
                    ├── intersect.js
                    ├── isPromise.js
                    ├── merge.js
                    ├── once.js
                    ├── reach.js
                    ├── reachTemplate.js
                    ├── stringify.js
                    ├── types.js
                    ├── utils.js
                    └── wait.js
                └── package.json
            └── [topo]
                ├── LICENSE.md
                ├── README.md
                ├── [lib]
                    ├── index.d.ts
                    └── index.js
                └── package.json
        ├── [@humanwhocodes]
            ├── [config-array]
                ├── LICENSE
                ├── README.md
                ├── api.js
                ├── [node_modules]
                    ├── [debug]
                        ├── LICENSE
                        ├── README.md
                        ├── package.json
                        └── [src]
                            ├── browser.js
                            ├── common.js
                            ├── index.js
                            └── node.js
                    └── [ms]
                        ├── index.js
                        ├── license.md
                        ├── package.json
                        └── readme.md
                └── package.json
            ├── [module-importer]
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── module-importer.cjs
                    ├── module-importer.d.cts
                    ├── module-importer.d.ts
                    └── module-importer.js
                ├── package.json
                └── [src]
                    ├── module-importer.cjs
                    └── module-importer.js
            └── [object-schema]
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── package.json
                └── [src]
                    ├── index.js
                    ├── merge-strategy.js
                    ├── object-schema.js
                    └── validation-strategy.js
        ├── [@istanbuljs]
            ├── [load-nyc-config]
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── index.js
                ├── load-esm.js
                ├── [node_modules]
                    ├── [.bin]
                        └── js-yaml
                    ├── [argparse]
                        ├── CHANGELOG.md
                        ├── LICENSE
                        ├── README.md
                        ├── index.js
                        ├── [lib]
                            ├── [action]
                                ├── [append]
                                    └── constant.js
                                ├── append.js
                                ├── count.js
                                ├── help.js
                                ├── [store]
                                    ├── constant.js
                                    ├── false.js
                                    └── true.js
                                ├── store.js
                                ├── subparsers.js
                                └── version.js
                            ├── action.js
                            ├── action_container.js
                            ├── argparse.js
                            ├── [argument]
                                ├── error.js
                                ├── exclusive.js
                                └── group.js
                            ├── argument_parser.js
                            ├── const.js
                            ├── [help]
                                ├── added_formatters.js
                                └── formatter.js
                            ├── namespace.js
                            └── utils.js
                        └── package.json
                    ├── [find-up]
                        ├── index.d.ts
                        ├── index.js
                        ├── license
                        ├── package.json
                        └── readme.md
                    ├── [js-yaml]
                        ├── CHANGELOG.md
                        ├── LICENSE
                        ├── README.md
                        ├── [bin]
                            └── js-yaml.js
                        ├── [dist]
                            ├── js-yaml.js
                            └── js-yaml.min.js
                        ├── index.js
                        ├── [lib]
                            ├── [js-yaml]
                                ├── common.js
                                ├── dumper.js
                                ├── exception.js
                                ├── loader.js
                                ├── mark.js
                                ├── [schema]
                                    ├── core.js
                                    ├── default_full.js
                                    ├── default_safe.js
                                    ├── failsafe.js
                                    └── json.js
                                ├── schema.js
                                ├── [type]
                                    ├── binary.js
                                    ├── bool.js
                                    ├── float.js
                                    ├── int.js
                                    ├── [js]
                                        ├── function.js
                                        ├── regexp.js
                                        └── undefined.js
                                    ├── map.js
                                    ├── merge.js
                                    ├── null.js
                                    ├── omap.js
                                    ├── pairs.js
                                    ├── seq.js
                                    ├── set.js
                                    ├── str.js
                                    └── timestamp.js
                                └── type.js
                            └── js-yaml.js
                        └── package.json
                    ├── [locate-path]
                        ├── index.d.ts
                        ├── index.js
                        ├── license
                        ├── package.json
                        └── readme.md
                    ├── [p-limit]
                        ├── index.d.ts
                        ├── index.js
                        ├── license
                        ├── package.json
                        └── readme.md
                    ├── [p-locate]
                        ├── index.d.ts
                        ├── index.js
                        ├── license
                        ├── package.json
                        └── readme.md
                    └── [resolve-from]
                        ├── index.d.ts
                        ├── index.js
                        ├── license
                        ├── package.json
                        └── readme.md
                └── package.json
            └── [schema]
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── default-exclude.js
                ├── default-extension.js
                ├── index.js
                └── package.json
        ├── [@jest]
            ├── [console]
                ├── LICENSE
                ├── [build]
                    ├── BufferedConsole.js
                    ├── CustomConsole.js
                    ├── NullConsole.js
                    ├── getConsoleOutput.js
                    ├── index.d.ts
                    ├── index.js
                    └── types.js
                └── package.json
            ├── [core]
                ├── LICENSE
                ├── README.md
                ├── [build]
                    ├── FailedTestsCache.js
                    ├── FailedTestsInteractiveMode.js
                    ├── ReporterDispatcher.js
                    ├── SearchSource.js
                    ├── SnapshotInteractiveMode.js
                    ├── TestNamePatternPrompt.js
                    ├── TestPathPatternPrompt.js
                    ├── TestScheduler.js
                    ├── [cli]
                        └── index.js
                    ├── collectHandles.js
                    ├── getChangedFilesPromise.js
                    ├── getConfigsOfProjectsToRun.js
                    ├── getNoTestFound.js
                    ├── getNoTestFoundFailed.js
                    ├── getNoTestFoundPassWithNoTests.js
                    ├── getNoTestFoundRelatedToChangedFiles.js
                    ├── getNoTestFoundVerbose.js
                    ├── getNoTestsFoundMessage.js
                    ├── getProjectDisplayName.js
                    ├── getProjectNamesMissingWarning.js
                    ├── getSelectProjectsMessage.js
                    ├── index.d.ts
                    ├── index.js
                    ├── [lib]
                        ├── activeFiltersMessage.js
                        ├── createContext.js
                        ├── handleDeprecationWarnings.js
                        ├── isValidPath.js
                        ├── logDebugMessages.js
                        ├── updateGlobalConfig.js
                        └── watchPluginsHelpers.js
                    ├── [plugins]
                        ├── FailedTestsInteractive.js
                        ├── Quit.js
                        ├── TestNamePattern.js
                        ├── TestPathPattern.js
                        ├── UpdateSnapshots.js
                        └── UpdateSnapshotsInteractive.js
                    ├── runGlobalHook.js
                    ├── runJest.js
                    ├── testSchedulerHelper.js
                    ├── types.js
                    ├── version.js
                    └── watch.js
                └── package.json
            ├── [environment]
                ├── LICENSE
                ├── [build]
                    ├── index.d.ts
                    └── index.js
                └── package.json
            ├── [expect]
                ├── LICENSE
                ├── README.md
                ├── [build]
                    ├── index.d.ts
                    ├── index.js
                    └── types.js
                └── package.json
            ├── [expect-utils]
                ├── LICENSE
                ├── README.md
                ├── [build]
                    ├── immutableUtils.js
                    ├── index.d.ts
                    ├── index.js
                    ├── jasmineUtils.js
                    ├── types.js
                    └── utils.js
                └── package.json
            ├── [fake-timers]
                ├── LICENSE
                ├── [build]
                    ├── index.d.ts
                    ├── index.js
                    ├── legacyFakeTimers.js
                    └── modernFakeTimers.js
                └── package.json
            ├── [globals]
                ├── LICENSE
                ├── [build]
                    ├── index.d.ts
                    └── index.js
                └── package.json
            ├── [reporters]
                ├── LICENSE
                ├── [assets]
                    └── jest_logo.png
                ├── [build]
                    ├── BaseReporter.js
                    ├── CoverageReporter.js
                    ├── CoverageWorker.js
                    ├── DefaultReporter.js
                    ├── GitHubActionsReporter.js
                    ├── NotifyReporter.js
                    ├── Status.js
                    ├── SummaryReporter.js
                    ├── VerboseReporter.js
                    ├── formatTestPath.js
                    ├── generateEmptyCoverage.js
                    ├── getResultHeader.js
                    ├── getSnapshotStatus.js
                    ├── getSnapshotSummary.js
                    ├── getSummary.js
                    ├── getWatermarks.js
                    ├── index.d.ts
                    ├── index.js
                    ├── printDisplayName.js
                    ├── relativePath.js
                    ├── trimAndFormatPath.js
                    ├── types.js
                    └── wrapAnsiString.js
                └── package.json
            ├── [schemas]
                ├── LICENSE
                ├── README.md
                ├── [build]
                    ├── index.d.ts
                    └── index.js
                └── package.json
            ├── [source-map]
                ├── LICENSE
                ├── [build]
                    ├── getCallsite.js
                    ├── index.d.ts
                    ├── index.js
                    └── types.js
                └── package.json
            ├── [test-result]
                ├── LICENSE
                ├── [build]
                    ├── formatTestResults.js
                    ├── helpers.js
                    ├── index.d.ts
                    ├── index.js
                    └── types.js
                └── package.json
            ├── [test-sequencer]
                ├── LICENSE
                ├── [build]
                    ├── index.d.ts
                    └── index.js
                └── package.json
            ├── [transform]
                ├── LICENSE
                ├── [build]
                    ├── ScriptTransformer.js
                    ├── enhanceUnexpectedTokenMessage.js
                    ├── index.d.ts
                    ├── index.js
                    ├── runtimeErrorsAndWarnings.js
                    ├── shouldInstrument.js
                    └── types.js
                └── package.json
            └── [types]
                ├── LICENSE
                ├── README.md
                ├── [build]
                    ├── Circus.js
                    ├── Config.js
                    ├── Global.js
                    ├── TestResult.js
                    ├── Transform.js
                    ├── index.d.ts
                    └── index.js
                └── package.json
        ├── [@jridgewell]
            ├── [gen-mapping]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── gen-mapping.mjs
                    ├── gen-mapping.mjs.map
                    ├── gen-mapping.umd.js
                    ├── gen-mapping.umd.js.map
                    └── [types]
                        ├── gen-mapping.d.ts
                        ├── sourcemap-segment.d.ts
                        └── types.d.ts
                └── package.json
            ├── [resolve-uri]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── resolve-uri.mjs
                    ├── resolve-uri.mjs.map
                    ├── resolve-uri.umd.js
                    ├── resolve-uri.umd.js.map
                    └── [types]
                        └── resolve-uri.d.ts
                └── package.json
            ├── [set-array]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── set-array.mjs
                    ├── set-array.mjs.map
                    ├── set-array.umd.js
                    ├── set-array.umd.js.map
                    └── [types]
                        └── set-array.d.ts
                └── package.json
            ├── [sourcemap-codec]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── sourcemap-codec.mjs
                    ├── sourcemap-codec.mjs.map
                    ├── sourcemap-codec.umd.js
                    ├── sourcemap-codec.umd.js.map
                    └── [types]
                        ├── scopes.d.ts
                        ├── sourcemap-codec.d.ts
                        ├── strings.d.ts
                        └── vlq.d.ts
                └── package.json
            └── [trace-mapping]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── trace-mapping.mjs
                    ├── trace-mapping.mjs.map
                    ├── trace-mapping.umd.js
                    ├── trace-mapping.umd.js.map
                    └── [types]
                        ├── any-map.d.ts
                        ├── binary-search.d.ts
                        ├── by-source.d.ts
                        ├── resolve.d.ts
                        ├── sort.d.ts
                        ├── sourcemap-segment.d.ts
                        ├── strip-filename.d.ts
                        ├── trace-mapping.d.ts
                        └── types.d.ts
                └── package.json
        ├── [@mapbox]
            └── [node-pre-gyp]
                ├── [.github]
                    └── [workflows]
                        └── codeql.yml
                ├── CHANGELOG.md
                ├── LICENSE
                ├── README.md
                ├── [bin]
                    ├── node-pre-gyp
                    └── node-pre-gyp.cmd
                ├── contributing.md
                ├── [lib]
                    ├── build.js
                    ├── clean.js
                    ├── configure.js
                    ├── info.js
                    ├── install.js
                    ├── main.js
                    ├── node-pre-gyp.js
                    ├── package.js
                    ├── pre-binding.js
                    ├── publish.js
                    ├── rebuild.js
                    ├── reinstall.js
                    ├── reveal.js
                    ├── testbinary.js
                    ├── testpackage.js
                    ├── unpublish.js
                    └── [util]
                        ├── abi_crosswalk.json
                        ├── compile.js
                        ├── handle_gyp_opts.js
                        ├── napi.js
                        ├── [nw-pre-gyp]
                            ├── index.html
                            └── package.json
                        ├── s3_setup.js
                        └── versioning.js
                └── package.json
        ├── [@mongodb-js]
            └── [saslprep]
                ├── LICENSE
                ├── [dist]
                    ├── .esm-wrapper.mjs
                    ├── browser.d.ts
                    ├── browser.d.ts.map
                    ├── browser.js
                    ├── browser.js.map
                    ├── code-points-data-browser.d.ts
                    ├── code-points-data-browser.d.ts.map
                    ├── code-points-data-browser.js
                    ├── code-points-data-browser.js.map
                    ├── code-points-data.d.ts
                    ├── code-points-data.d.ts.map
                    ├── code-points-data.js
                    ├── code-points-data.js.map
                    ├── code-points-src.d.ts
                    ├── code-points-src.d.ts.map
                    ├── code-points-src.js
                    ├── code-points-src.js.map
                    ├── generate-code-points.d.ts
                    ├── generate-code-points.d.ts.map
                    ├── generate-code-points.js
                    ├── generate-code-points.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── memory-code-points.d.ts
                    ├── memory-code-points.d.ts.map
                    ├── memory-code-points.js
                    ├── memory-code-points.js.map
                    ├── node.d.ts
                    ├── node.d.ts.map
                    ├── node.js
                    ├── node.js.map
                    ├── util.d.ts
                    ├── util.d.ts.map
                    ├── util.js
                    └── util.js.map
                ├── package.json
                └── readme.md
        ├── [@noble]
            └── [hashes]
                ├── LICENSE
                ├── README.md
                ├── _assert.d.ts
                ├── _assert.d.ts.map
                ├── _assert.js
                ├── _assert.js.map
                ├── _blake.d.ts
                ├── _blake.d.ts.map
                ├── _blake.js
                ├── _blake.js.map
                ├── _md.d.ts
                ├── _md.d.ts.map
                ├── _md.js
                ├── _md.js.map
                ├── _u64.d.ts
                ├── _u64.d.ts.map
                ├── _u64.js
                ├── _u64.js.map
                ├── argon2.d.ts
                ├── argon2.d.ts.map
                ├── argon2.js
                ├── argon2.js.map
                ├── blake1.d.ts
                ├── blake1.d.ts.map
                ├── blake1.js
                ├── blake1.js.map
                ├── blake2.d.ts
                ├── blake2.d.ts.map
                ├── blake2.js
                ├── blake2.js.map
                ├── blake2b.d.ts
                ├── blake2b.d.ts.map
                ├── blake2b.js
                ├── blake2b.js.map
                ├── blake2s.d.ts
                ├── blake2s.d.ts.map
                ├── blake2s.js
                ├── blake2s.js.map
                ├── blake3.d.ts
                ├── blake3.d.ts.map
                ├── blake3.js
                ├── blake3.js.map
                ├── crypto.d.ts
                ├── crypto.d.ts.map
                ├── crypto.js
                ├── crypto.js.map
                ├── cryptoNode.d.ts
                ├── cryptoNode.d.ts.map
                ├── cryptoNode.js
                ├── cryptoNode.js.map
                ├── eskdf.d.ts
                ├── eskdf.d.ts.map
                ├── eskdf.js
                ├── eskdf.js.map
                ├── [esm]
                    ├── _assert.d.ts
                    ├── _assert.d.ts.map
                    ├── _assert.js
                    ├── _assert.js.map
                    ├── _blake.d.ts
                    ├── _blake.d.ts.map
                    ├── _blake.js
                    ├── _blake.js.map
                    ├── _md.d.ts
                    ├── _md.d.ts.map
                    ├── _md.js
                    ├── _md.js.map
                    ├── _u64.d.ts
                    ├── _u64.d.ts.map
                    ├── _u64.js
                    ├── _u64.js.map
                    ├── argon2.d.ts
                    ├── argon2.d.ts.map
                    ├── argon2.js
                    ├── argon2.js.map
                    ├── blake1.d.ts
                    ├── blake1.d.ts.map
                    ├── blake1.js
                    ├── blake1.js.map
                    ├── blake2.d.ts
                    ├── blake2.d.ts.map
                    ├── blake2.js
                    ├── blake2.js.map
                    ├── blake2b.d.ts
                    ├── blake2b.d.ts.map
                    ├── blake2b.js
                    ├── blake2b.js.map
                    ├── blake2s.d.ts
                    ├── blake2s.d.ts.map
                    ├── blake2s.js
                    ├── blake2s.js.map
                    ├── blake3.d.ts
                    ├── blake3.d.ts.map
                    ├── blake3.js
                    ├── blake3.js.map
                    ├── crypto.d.ts
                    ├── crypto.d.ts.map
                    ├── crypto.js
                    ├── crypto.js.map
                    ├── cryptoNode.d.ts
                    ├── cryptoNode.d.ts.map
                    ├── cryptoNode.js
                    ├── cryptoNode.js.map
                    ├── eskdf.d.ts
                    ├── eskdf.d.ts.map
                    ├── eskdf.js
                    ├── eskdf.js.map
                    ├── hkdf.d.ts
                    ├── hkdf.d.ts.map
                    ├── hkdf.js
                    ├── hkdf.js.map
                    ├── hmac.d.ts
                    ├── hmac.d.ts.map
                    ├── hmac.js
                    ├── hmac.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── legacy.d.ts
                    ├── legacy.d.ts.map
                    ├── legacy.js
                    ├── legacy.js.map
                    ├── package.json
                    ├── pbkdf2.d.ts
                    ├── pbkdf2.d.ts.map
                    ├── pbkdf2.js
                    ├── pbkdf2.js.map
                    ├── ripemd160.d.ts
                    ├── ripemd160.d.ts.map
                    ├── ripemd160.js
                    ├── ripemd160.js.map
                    ├── scrypt.d.ts
                    ├── scrypt.d.ts.map
                    ├── scrypt.js
                    ├── scrypt.js.map
                    ├── sha1.d.ts
                    ├── sha1.d.ts.map
                    ├── sha1.js
                    ├── sha1.js.map
                    ├── sha2.d.ts
                    ├── sha2.d.ts.map
                    ├── sha2.js
                    ├── sha2.js.map
                    ├── sha256.d.ts
                    ├── sha256.d.ts.map
                    ├── sha256.js
                    ├── sha256.js.map
                    ├── sha3-addons.d.ts
                    ├── sha3-addons.d.ts.map
                    ├── sha3-addons.js
                    ├── sha3-addons.js.map
                    ├── sha3.d.ts
                    ├── sha3.d.ts.map
                    ├── sha3.js
                    ├── sha3.js.map
                    ├── sha512.d.ts
                    ├── sha512.d.ts.map
                    ├── sha512.js
                    ├── sha512.js.map
                    ├── utils.d.ts
                    ├── utils.d.ts.map
                    ├── utils.js
                    └── utils.js.map
                ├── hkdf.d.ts
                ├── hkdf.d.ts.map
                ├── hkdf.js
                ├── hkdf.js.map
                ├── hmac.d.ts
                ├── hmac.d.ts.map
                ├── hmac.js
                ├── hmac.js.map
                ├── index.d.ts
                ├── index.d.ts.map
                ├── index.js
                ├── index.js.map
                ├── legacy.d.ts
                ├── legacy.d.ts.map
                ├── legacy.js
                ├── legacy.js.map
                ├── package.json
                ├── pbkdf2.d.ts
                ├── pbkdf2.d.ts.map
                ├── pbkdf2.js
                ├── pbkdf2.js.map
                ├── ripemd160.d.ts
                ├── ripemd160.d.ts.map
                ├── ripemd160.js
                ├── ripemd160.js.map
                ├── scrypt.d.ts
                ├── scrypt.d.ts.map
                ├── scrypt.js
                ├── scrypt.js.map
                ├── sha1.d.ts
                ├── sha1.d.ts.map
                ├── sha1.js
                ├── sha1.js.map
                ├── sha2.d.ts
                ├── sha2.d.ts.map
                ├── sha2.js
                ├── sha2.js.map
                ├── sha256.d.ts
                ├── sha256.d.ts.map
                ├── sha256.js
                ├── sha256.js.map
                ├── sha3-addons.d.ts
                ├── sha3-addons.d.ts.map
                ├── sha3-addons.js
                ├── sha3-addons.js.map
                ├── sha3.d.ts
                ├── sha3.d.ts.map
                ├── sha3.js
                ├── sha3.js.map
                ├── sha512.d.ts
                ├── sha512.d.ts.map
                ├── sha512.js
                ├── sha512.js.map
                ├── [src]
                    ├── _assert.ts
                    ├── _blake.ts
                    ├── _md.ts
                    ├── _u64.ts
                    ├── argon2.ts
                    ├── blake1.ts
                    ├── blake2.ts
                    ├── blake2b.ts
                    ├── blake2s.ts
                    ├── blake3.ts
                    ├── crypto.ts
                    ├── cryptoNode.ts
                    ├── eskdf.ts
                    ├── hkdf.ts
                    ├── hmac.ts
                    ├── index.ts
                    ├── legacy.ts
                    ├── pbkdf2.ts
                    ├── ripemd160.ts
                    ├── scrypt.ts
                    ├── sha1.ts
                    ├── sha2.ts
                    ├── sha256.ts
                    ├── sha3-addons.ts
                    ├── sha3.ts
                    ├── sha512.ts
                    └── utils.ts
                ├── utils.d.ts
                ├── utils.d.ts.map
                ├── utils.js
                └── utils.js.map
        ├── [@nodelib]
            ├── [fs.scandir]
                ├── LICENSE
                ├── README.md
                ├── [out]
                    ├── [adapters]
                        ├── fs.d.ts
                        └── fs.js
                    ├── constants.d.ts
                    ├── constants.js
                    ├── index.d.ts
                    ├── index.js
                    ├── [providers]
                        ├── async.d.ts
                        ├── async.js
                        ├── common.d.ts
                        ├── common.js
                        ├── sync.d.ts
                        └── sync.js
                    ├── settings.d.ts
                    ├── settings.js
                    ├── [types]
                        ├── index.d.ts
                        └── index.js
                    └── [utils]
                        ├── fs.d.ts
                        ├── fs.js
                        ├── index.d.ts
                        └── index.js
                └── package.json
            ├── [fs.stat]
                ├── LICENSE
                ├── README.md
                ├── [out]
                    ├── [adapters]
                        ├── fs.d.ts
                        └── fs.js
                    ├── index.d.ts
                    ├── index.js
                    ├── [providers]
                        ├── async.d.ts
                        ├── async.js
                        ├── sync.d.ts
                        └── sync.js
                    ├── settings.d.ts
                    ├── settings.js
                    └── [types]
                        ├── index.d.ts
                        └── index.js
                └── package.json
            └── [fs.walk]
                ├── LICENSE
                ├── README.md
                ├── [out]
                    ├── index.d.ts
                    ├── index.js
                    ├── [providers]
                        ├── async.d.ts
                        ├── async.js
                        ├── index.d.ts
                        ├── index.js
                        ├── stream.d.ts
                        ├── stream.js
                        ├── sync.d.ts
                        └── sync.js
                    ├── [readers]
                        ├── async.d.ts
                        ├── async.js
                        ├── common.d.ts
                        ├── common.js
                        ├── reader.d.ts
                        ├── reader.js
                        ├── sync.d.ts
                        └── sync.js
                    ├── settings.d.ts
                    ├── settings.js
                    └── [types]
                        ├── index.d.ts
                        └── index.js
                └── package.json
        ├── [@paralleldrive]
            └── [cuid2]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                ├── index.js
                ├── package.json
                └── [src]
                    └── index.js
        ├── [@pkgr]
            └── [core]
                ├── index.d.cts
                ├── [lib]
                    ├── constants.d.ts
                    ├── constants.js
                    ├── constants.js.map
                    ├── helpers.d.ts
                    ├── helpers.js
                    ├── helpers.js.map
                    ├── index.cjs
                    ├── index.d.ts
                    ├── index.js
                    └── index.js.map
                └── package.json
        ├── [@sideway]
            ├── [address]
                ├── LICENSE.md
                ├── README.md
                ├── [lib]
                    ├── decode.js
                    ├── domain.js
                    ├── email.js
                    ├── errors.js
                    ├── index.d.ts
                    ├── index.js
                    ├── ip.js
                    ├── tlds.js
                    └── uri.js
                └── package.json
            ├── [formula]
                ├── LICENSE.md
                ├── README.md
                ├── [lib]
                    ├── index.d.ts
                    └── index.js
                └── package.json
            └── [pinpoint]
                ├── LICENSE.md
                ├── README.md
                ├── [lib]
                    ├── index.d.ts
                    └── index.js
                └── package.json
        ├── [@sinclair]
            └── [typebox]
                ├── [compiler]
                    ├── compiler.d.ts
                    ├── compiler.js
                    ├── index.d.ts
                    └── index.js
                ├── [errors]
                    ├── errors.d.ts
                    ├── errors.js
                    ├── index.d.ts
                    └── index.js
                ├── license
                ├── package.json
                ├── readme.md
                ├── [system]
                    ├── index.d.ts
                    ├── index.js
                    ├── system.d.ts
                    └── system.js
                ├── typebox.d.ts
                ├── typebox.js
                └── [value]
                    ├── cast.d.ts
                    ├── cast.js
                    ├── check.d.ts
                    ├── check.js
                    ├── clone.d.ts
                    ├── clone.js
                    ├── convert.d.ts
                    ├── convert.js
                    ├── create.d.ts
                    ├── create.js
                    ├── delta.d.ts
                    ├── delta.js
                    ├── equal.d.ts
                    ├── equal.js
                    ├── hash.d.ts
                    ├── hash.js
                    ├── index.d.ts
                    ├── index.js
                    ├── is.d.ts
                    ├── is.js
                    ├── mutate.d.ts
                    ├── mutate.js
                    ├── pointer.d.ts
                    ├── pointer.js
                    ├── value.d.ts
                    └── value.js
        ├── [@sinonjs]
            ├── [commons]
                ├── LICENSE
                ├── README.md
                ├── [lib]
                    ├── called-in-order.js
                    ├── called-in-order.test.js
                    ├── class-name.js
                    ├── class-name.test.js
                    ├── deprecated.js
                    ├── deprecated.test.js
                    ├── every.js
                    ├── every.test.js
                    ├── function-name.js
                    ├── function-name.test.js
                    ├── global.js
                    ├── global.test.js
                    ├── index.js
                    ├── index.test.js
                    ├── order-by-first-call.js
                    ├── order-by-first-call.test.js
                    ├── [prototypes]
                        ├── README.md
                        ├── array.js
                        ├── copy-prototype-methods.js
                        ├── copy-prototype-methods.test.js
                        ├── function.js
                        ├── index.js
                        ├── index.test.js
                        ├── map.js
                        ├── object.js
                        ├── set.js
                        ├── string.js
                        └── throws-on-proto.js
                    ├── type-of.js
                    ├── type-of.test.js
                    ├── value-to-string.js
                    └── value-to-string.test.js
                ├── package.json
                └── [types]
                    ├── called-in-order.d.ts
                    ├── class-name.d.ts
                    ├── deprecated.d.ts
                    ├── every.d.ts
                    ├── function-name.d.ts
                    ├── global.d.ts
                    ├── index.d.ts
                    ├── order-by-first-call.d.ts
                    ├── [prototypes]
                        ├── array.d.ts
                        ├── copy-prototype-methods.d.ts
                        ├── function.d.ts
                        ├── index.d.ts
                        ├── map.d.ts
                        ├── object.d.ts
                        ├── set.d.ts
                        ├── string.d.ts
                        └── throws-on-proto.d.ts
                    ├── type-of.d.ts
                    └── value-to-string.d.ts
            └── [fake-timers]
                ├── LICENSE
                ├── README.md
                ├── package.json
                └── [src]
                    └── fake-timers-src.js
        ├── [@types]
            ├── [babel__core]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [babel__generator]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [babel__template]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [babel__traverse]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [graceful-fs]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [istanbul-lib-coverage]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [istanbul-lib-report]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [istanbul-reports]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [json-schema]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [node]
                ├── LICENSE
                ├── README.md
                ├── [assert]
                    └── strict.d.ts
                ├── assert.d.ts
                ├── async_hooks.d.ts
                ├── buffer.buffer.d.ts
                ├── buffer.d.ts
                ├── child_process.d.ts
                ├── cluster.d.ts
                ├── [compatibility]
                    ├── disposable.d.ts
                    ├── index.d.ts
                    ├── indexable.d.ts
                    └── iterators.d.ts
                ├── console.d.ts
                ├── constants.d.ts
                ├── crypto.d.ts
                ├── dgram.d.ts
                ├── diagnostics_channel.d.ts
                ├── [dns]
                    └── promises.d.ts
                ├── dns.d.ts
                ├── dom-events.d.ts
                ├── domain.d.ts
                ├── events.d.ts
                ├── [fs]
                    └── promises.d.ts
                ├── fs.d.ts
                ├── globals.d.ts
                ├── globals.typedarray.d.ts
                ├── http.d.ts
                ├── http2.d.ts
                ├── https.d.ts
                ├── index.d.ts
                ├── inspector.d.ts
                ├── module.d.ts
                ├── net.d.ts
                ├── os.d.ts
                ├── package.json
                ├── path.d.ts
                ├── perf_hooks.d.ts
                ├── process.d.ts
                ├── punycode.d.ts
                ├── querystring.d.ts
                ├── [readline]
                    └── promises.d.ts
                ├── readline.d.ts
                ├── repl.d.ts
                ├── sea.d.ts
                ├── sqlite.d.ts
                ├── [stream]
                    ├── consumers.d.ts
                    ├── promises.d.ts
                    └── web.d.ts
                ├── stream.d.ts
                ├── string_decoder.d.ts
                ├── test.d.ts
                ├── [timers]
                    └── promises.d.ts
                ├── timers.d.ts
                ├── tls.d.ts
                ├── trace_events.d.ts
                ├── [ts5.6]
                    ├── buffer.buffer.d.ts
                    ├── globals.typedarray.d.ts
                    └── index.d.ts
                ├── tty.d.ts
                ├── url.d.ts
                ├── util.d.ts
                ├── v8.d.ts
                ├── vm.d.ts
                ├── wasi.d.ts
                ├── worker_threads.d.ts
                └── zlib.d.ts
            ├── [semver]
                ├── LICENSE
                ├── README.md
                ├── [classes]
                    ├── comparator.d.ts
                    ├── range.d.ts
                    └── semver.d.ts
                ├── [functions]
                    ├── clean.d.ts
                    ├── cmp.d.ts
                    ├── coerce.d.ts
                    ├── compare-build.d.ts
                    ├── compare-loose.d.ts
                    ├── compare.d.ts
                    ├── diff.d.ts
                    ├── eq.d.ts
                    ├── gt.d.ts
                    ├── gte.d.ts
                    ├── inc.d.ts
                    ├── lt.d.ts
                    ├── lte.d.ts
                    ├── major.d.ts
                    ├── minor.d.ts
                    ├── neq.d.ts
                    ├── parse.d.ts
                    ├── patch.d.ts
                    ├── prerelease.d.ts
                    ├── rcompare.d.ts
                    ├── rsort.d.ts
                    ├── satisfies.d.ts
                    ├── sort.d.ts
                    └── valid.d.ts
                ├── index.d.ts
                ├── [internals]
                    └── identifiers.d.ts
                ├── package.json
                ├── preload.d.ts
                └── [ranges]
                    ├── gtr.d.ts
                    ├── intersects.d.ts
                    ├── ltr.d.ts
                    ├── max-satisfying.d.ts
                    ├── min-satisfying.d.ts
                    ├── min-version.d.ts
                    ├── outside.d.ts
                    ├── simplify.d.ts
                    ├── subset.d.ts
                    ├── to-comparators.d.ts
                    └── valid.d.ts
            ├── [stack-utils]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [triple-beam]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [webidl-conversions]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
            ├── [whatwg-url]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                ├── [lib]
                    ├── URL-impl.d.ts
                    ├── URL.d.ts
                    ├── URLSearchParams-impl.d.ts
                    └── URLSearchParams.d.ts
                ├── package.json
                └── webidl2js-wrapper.d.ts
            ├── [yargs]
                ├── LICENSE
                ├── README.md
                ├── helpers.d.mts
                ├── helpers.d.ts
                ├── index.d.mts
                ├── index.d.ts
                ├── package.json
                └── yargs.d.ts
            └── [yargs-parser]
                ├── LICENSE
                ├── README.md
                ├── index.d.ts
                └── package.json
        ├── [@typescript-eslint]
            ├── [scope-manager]
                ├── LICENSE
                ├── README.md
                ├── [dist]
                    ├── ID.d.ts
                    ├── ID.d.ts.map
                    ├── ID.js
                    ├── ID.js.map
                    ├── ScopeManager.d.ts
                    ├── ScopeManager.d.ts.map
                    ├── ScopeManager.js
                    ├── ScopeManager.js.map
                    ├── analyze.d.ts
                    ├── analyze.d.ts.map
                    ├── analyze.js
                    ├── analyze.js.map
                    ├── assert.d.ts
                    ├── assert.d.ts.map
                    ├── assert.js
                    ├── assert.js.map
                    ├── [definition]
                        ├── CatchClauseDefinition.d.ts
                        ├── CatchClauseDefinition.d.ts.map
                        ├── CatchClauseDefinition.js
                        ├── CatchClauseDefinition.js.map
                        ├── ClassNameDefinition.d.ts
                        ├── ClassNameDefinition.d.ts.map
                        ├── ClassNameDefinition.js
                        ├── ClassNameDefinition.js.map
                        ├── Definition.d.ts
                        ├── Definition.d.ts.map
                        ├── Definition.js
                        ├── Definition.js.map
                        ├── DefinitionBase.d.ts
                        ├── DefinitionBase.d.ts.map
                        ├── DefinitionBase.js
                        ├── DefinitionBase.js.map
                        ├── DefinitionType.d.ts
                        ├── DefinitionType.d.ts.map
                        ├── DefinitionType.js
                        ├── DefinitionType.js.map
                        ├── FunctionNameDefinition.d.ts
                        ├── FunctionNameDefinition.d.ts.map
                        ├── FunctionNameDefinition.js
                        ├── FunctionNameDefinition.js.map
                        ├── ImplicitGlobalVariableDefinition.d.ts
                        ├── ImplicitGlobalVariableDefinition.d.ts.map
                        ├── ImplicitGlobalVariableDefinition.js
                        ├── ImplicitGlobalVariableDefinition.js.map
                        ├── ImportBindingDefinition.d.ts
                        ├── ImportBindingDefinition.d.ts.map
                        ├── ImportBindingDefinition.js
                        ├── ImportBindingDefinition.js.map
                        ├── ParameterDefinition.d.ts
                        ├── ParameterDefinition.d.ts.map
                        ├── ParameterDefinition.js
                        ├── ParameterDefinition.js.map
                        ├── TSEnumMemberDefinition.d.ts
                        ├── TSEnumMemberDefinition.d.ts.map
                        ├── TSEnumMemberDefinition.js
                        ├── TSEnumMemberDefinition.js.map
                        ├── TSEnumNameDefinition.d.ts
                        ├── TSEnumNameDefinition.d.ts.map
                        ├── TSEnumNameDefinition.js
                        ├── TSEnumNameDefinition.js.map
                        ├── TSModuleNameDefinition.d.ts
                        ├── TSModuleNameDefinition.d.ts.map
                        ├── TSModuleNameDefinition.js
                        ├── TSModuleNameDefinition.js.map
                        ├── TypeDefinition.d.ts
                        ├── TypeDefinition.d.ts.map
                        ├── TypeDefinition.js
                        ├── TypeDefinition.js.map
                        ├── VariableDefinition.d.ts
                        ├── VariableDefinition.d.ts.map
                        ├── VariableDefinition.js
                        ├── VariableDefinition.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        └── index.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── [lib]
                        ├── base-config.d.ts
                        ├── base-config.d.ts.map
                        ├── base-config.js
                        ├── base-config.js.map
                        ├── decorators.d.ts
                        ├── decorators.d.ts.map
                        ├── decorators.js
                        ├── decorators.js.map
                        ├── decorators.legacy.d.ts
                        ├── decorators.legacy.d.ts.map
                        ├── decorators.legacy.js
                        ├── decorators.legacy.js.map
                        ├── dom.d.ts
                        ├── dom.d.ts.map
                        ├── dom.iterable.d.ts
                        ├── dom.iterable.d.ts.map
                        ├── dom.iterable.js
                        ├── dom.iterable.js.map
                        ├── dom.js
                        ├── dom.js.map
                        ├── es2015.collection.d.ts
                        ├── es2015.collection.d.ts.map
                        ├── es2015.collection.js
                        ├── es2015.collection.js.map
                        ├── es2015.core.d.ts
                        ├── es2015.core.d.ts.map
                        ├── es2015.core.js
                        ├── es2015.core.js.map
                        ├── es2015.d.ts
                        ├── es2015.d.ts.map
                        ├── es2015.generator.d.ts
                        ├── es2015.generator.d.ts.map
                        ├── es2015.generator.js
                        ├── es2015.generator.js.map
                        ├── es2015.iterable.d.ts
                        ├── es2015.iterable.d.ts.map
                        ├── es2015.iterable.js
                        ├── es2015.iterable.js.map
                        ├── es2015.js
                        ├── es2015.js.map
                        ├── es2015.promise.d.ts
                        ├── es2015.promise.d.ts.map
                        ├── es2015.promise.js
                        ├── es2015.promise.js.map
                        ├── es2015.proxy.d.ts
                        ├── es2015.proxy.d.ts.map
                        ├── es2015.proxy.js
                        ├── es2015.proxy.js.map
                        ├── es2015.reflect.d.ts
                        ├── es2015.reflect.d.ts.map
                        ├── es2015.reflect.js
                        ├── es2015.reflect.js.map
                        ├── es2015.symbol.d.ts
                        ├── es2015.symbol.d.ts.map
                        ├── es2015.symbol.js
                        ├── es2015.symbol.js.map
                        ├── es2015.symbol.wellknown.d.ts
                        ├── es2015.symbol.wellknown.d.ts.map
                        ├── es2015.symbol.wellknown.js
                        ├── es2015.symbol.wellknown.js.map
                        ├── es2016.array.include.d.ts
                        ├── es2016.array.include.d.ts.map
                        ├── es2016.array.include.js
                        ├── es2016.array.include.js.map
                        ├── es2016.d.ts
                        ├── es2016.d.ts.map
                        ├── es2016.full.d.ts
                        ├── es2016.full.d.ts.map
                        ├── es2016.full.js
                        ├── es2016.full.js.map
                        ├── es2016.js
                        ├── es2016.js.map
                        ├── es2017.d.ts
                        ├── es2017.d.ts.map
                        ├── es2017.full.d.ts
                        ├── es2017.full.d.ts.map
                        ├── es2017.full.js
                        ├── es2017.full.js.map
                        ├── es2017.intl.d.ts
                        ├── es2017.intl.d.ts.map
                        ├── es2017.intl.js
                        ├── es2017.intl.js.map
                        ├── es2017.js
                        ├── es2017.js.map
                        ├── es2017.object.d.ts
                        ├── es2017.object.d.ts.map
                        ├── es2017.object.js
                        ├── es2017.object.js.map
                        ├── es2017.sharedmemory.d.ts
                        ├── es2017.sharedmemory.d.ts.map
                        ├── es2017.sharedmemory.js
                        ├── es2017.sharedmemory.js.map
                        ├── es2017.string.d.ts
                        ├── es2017.string.d.ts.map
                        ├── es2017.string.js
                        ├── es2017.string.js.map
                        ├── es2017.typedarrays.d.ts
                        ├── es2017.typedarrays.d.ts.map
                        ├── es2017.typedarrays.js
                        ├── es2017.typedarrays.js.map
                        ├── es2018.asyncgenerator.d.ts
                        ├── es2018.asyncgenerator.d.ts.map
                        ├── es2018.asyncgenerator.js
                        ├── es2018.asyncgenerator.js.map
                        ├── es2018.asynciterable.d.ts
                        ├── es2018.asynciterable.d.ts.map
                        ├── es2018.asynciterable.js
                        ├── es2018.asynciterable.js.map
                        ├── es2018.d.ts
                        ├── es2018.d.ts.map
                        ├── es2018.full.d.ts
                        ├── es2018.full.d.ts.map
                        ├── es2018.full.js
                        ├── es2018.full.js.map
                        ├── es2018.intl.d.ts
                        ├── es2018.intl.d.ts.map
                        ├── es2018.intl.js
                        ├── es2018.intl.js.map
                        ├── es2018.js
                        ├── es2018.js.map
                        ├── es2018.promise.d.ts
                        ├── es2018.promise.d.ts.map
                        ├── es2018.promise.js
                        ├── es2018.promise.js.map
                        ├── es2018.regexp.d.ts
                        ├── es2018.regexp.d.ts.map
                        ├── es2018.regexp.js
                        ├── es2018.regexp.js.map
                        ├── es2019.array.d.ts
                        ├── es2019.array.d.ts.map
                        ├── es2019.array.js
                        ├── es2019.array.js.map
                        ├── es2019.d.ts
                        ├── es2019.d.ts.map
                        ├── es2019.full.d.ts
                        ├── es2019.full.d.ts.map
                        ├── es2019.full.js
                        ├── es2019.full.js.map
                        ├── es2019.intl.d.ts
                        ├── es2019.intl.d.ts.map
                        ├── es2019.intl.js
                        ├── es2019.intl.js.map
                        ├── es2019.js
                        ├── es2019.js.map
                        ├── es2019.object.d.ts
                        ├── es2019.object.d.ts.map
                        ├── es2019.object.js
                        ├── es2019.object.js.map
                        ├── es2019.string.d.ts
                        ├── es2019.string.d.ts.map
                        ├── es2019.string.js
                        ├── es2019.string.js.map
                        ├── es2019.symbol.d.ts
                        ├── es2019.symbol.d.ts.map
                        ├── es2019.symbol.js
                        ├── es2019.symbol.js.map
                        ├── es2020.bigint.d.ts
                        ├── es2020.bigint.d.ts.map
                        ├── es2020.bigint.js
                        ├── es2020.bigint.js.map
                        ├── es2020.d.ts
                        ├── es2020.d.ts.map
                        ├── es2020.date.d.ts
                        ├── es2020.date.d.ts.map
                        ├── es2020.date.js
                        ├── es2020.date.js.map
                        ├── es2020.full.d.ts
                        ├── es2020.full.d.ts.map
                        ├── es2020.full.js
                        ├── es2020.full.js.map
                        ├── es2020.intl.d.ts
                        ├── es2020.intl.d.ts.map
                        ├── es2020.intl.js
                        ├── es2020.intl.js.map
                        ├── es2020.js
                        ├── es2020.js.map
                        ├── es2020.number.d.ts
                        ├── es2020.number.d.ts.map
                        ├── es2020.number.js
                        ├── es2020.number.js.map
                        ├── es2020.promise.d.ts
                        ├── es2020.promise.d.ts.map
                        ├── es2020.promise.js
                        ├── es2020.promise.js.map
                        ├── es2020.sharedmemory.d.ts
                        ├── es2020.sharedmemory.d.ts.map
                        ├── es2020.sharedmemory.js
                        ├── es2020.sharedmemory.js.map
                        ├── es2020.string.d.ts
                        ├── es2020.string.d.ts.map
                        ├── es2020.string.js
                        ├── es2020.string.js.map
                        ├── es2020.symbol.wellknown.d.ts
                        ├── es2020.symbol.wellknown.d.ts.map
                        ├── es2020.symbol.wellknown.js
                        ├── es2020.symbol.wellknown.js.map
                        ├── es2021.d.ts
                        ├── es2021.d.ts.map
                        ├── es2021.full.d.ts
                        ├── es2021.full.d.ts.map
                        ├── es2021.full.js
                        ├── es2021.full.js.map
                        ├── es2021.intl.d.ts
                        ├── es2021.intl.d.ts.map
                        ├── es2021.intl.js
                        ├── es2021.intl.js.map
                        ├── es2021.js
                        ├── es2021.js.map
                        ├── es2021.promise.d.ts
                        ├── es2021.promise.d.ts.map
                        ├── es2021.promise.js
                        ├── es2021.promise.js.map
                        ├── es2021.string.d.ts
                        ├── es2021.string.d.ts.map
                        ├── es2021.string.js
                        ├── es2021.string.js.map
                        ├── es2021.weakref.d.ts
                        ├── es2021.weakref.d.ts.map
                        ├── es2021.weakref.js
                        ├── es2021.weakref.js.map
                        ├── es2022.array.d.ts
                        ├── es2022.array.d.ts.map
                        ├── es2022.array.js
                        ├── es2022.array.js.map
                        ├── es2022.d.ts
                        ├── es2022.d.ts.map
                        ├── es2022.error.d.ts
                        ├── es2022.error.d.ts.map
                        ├── es2022.error.js
                        ├── es2022.error.js.map
                        ├── es2022.full.d.ts
                        ├── es2022.full.d.ts.map
                        ├── es2022.full.js
                        ├── es2022.full.js.map
                        ├── es2022.intl.d.ts
                        ├── es2022.intl.d.ts.map
                        ├── es2022.intl.js
                        ├── es2022.intl.js.map
                        ├── es2022.js
                        ├── es2022.js.map
                        ├── es2022.object.d.ts
                        ├── es2022.object.d.ts.map
                        ├── es2022.object.js
                        ├── es2022.object.js.map
                        ├── es2022.regexp.d.ts
                        ├── es2022.regexp.d.ts.map
                        ├── es2022.regexp.js
                        ├── es2022.regexp.js.map
                        ├── es2022.sharedmemory.d.ts
                        ├── es2022.sharedmemory.d.ts.map
                        ├── es2022.sharedmemory.js
                        ├── es2022.sharedmemory.js.map
                        ├── es2022.string.d.ts
                        ├── es2022.string.d.ts.map
                        ├── es2022.string.js
                        ├── es2022.string.js.map
                        ├── es2023.array.d.ts
                        ├── es2023.array.d.ts.map
                        ├── es2023.array.js
                        ├── es2023.array.js.map
                        ├── es2023.d.ts
                        ├── es2023.d.ts.map
                        ├── es2023.full.d.ts
                        ├── es2023.full.d.ts.map
                        ├── es2023.full.js
                        ├── es2023.full.js.map
                        ├── es2023.js
                        ├── es2023.js.map
                        ├── es5.d.ts
                        ├── es5.d.ts.map
                        ├── es5.js
                        ├── es5.js.map
                        ├── es6.d.ts
                        ├── es6.d.ts.map
                        ├── es6.js
                        ├── es6.js.map
                        ├── es7.d.ts
                        ├── es7.d.ts.map
                        ├── es7.js
                        ├── es7.js.map
                        ├── esnext.array.d.ts
                        ├── esnext.array.d.ts.map
                        ├── esnext.array.js
                        ├── esnext.array.js.map
                        ├── esnext.asynciterable.d.ts
                        ├── esnext.asynciterable.d.ts.map
                        ├── esnext.asynciterable.js
                        ├── esnext.asynciterable.js.map
                        ├── esnext.bigint.d.ts
                        ├── esnext.bigint.d.ts.map
                        ├── esnext.bigint.js
                        ├── esnext.bigint.js.map
                        ├── esnext.d.ts
                        ├── esnext.d.ts.map
                        ├── esnext.full.d.ts
                        ├── esnext.full.d.ts.map
                        ├── esnext.full.js
                        ├── esnext.full.js.map
                        ├── esnext.intl.d.ts
                        ├── esnext.intl.d.ts.map
                        ├── esnext.intl.js
                        ├── esnext.intl.js.map
                        ├── esnext.js
                        ├── esnext.js.map
                        ├── esnext.promise.d.ts
                        ├── esnext.promise.d.ts.map
                        ├── esnext.promise.js
                        ├── esnext.promise.js.map
                        ├── esnext.string.d.ts
                        ├── esnext.string.d.ts.map
                        ├── esnext.string.js
                        ├── esnext.string.js.map
                        ├── esnext.symbol.d.ts
                        ├── esnext.symbol.d.ts.map
                        ├── esnext.symbol.js
                        ├── esnext.symbol.js.map
                        ├── esnext.weakref.d.ts
                        ├── esnext.weakref.d.ts.map
                        ├── esnext.weakref.js
                        ├── esnext.weakref.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        ├── index.js.map
                        ├── lib.d.ts
                        ├── lib.d.ts.map
                        ├── lib.js
                        ├── lib.js.map
                        ├── scripthost.d.ts
                        ├── scripthost.d.ts.map
                        ├── scripthost.js
                        ├── scripthost.js.map
                        ├── webworker.d.ts
                        ├── webworker.d.ts.map
                        ├── webworker.importscripts.d.ts
                        ├── webworker.importscripts.d.ts.map
                        ├── webworker.importscripts.js
                        ├── webworker.importscripts.js.map
                        ├── webworker.iterable.d.ts
                        ├── webworker.iterable.d.ts.map
                        ├── webworker.iterable.js
                        ├── webworker.iterable.js.map
                        ├── webworker.js
                        └── webworker.js.map
                    ├── [referencer]
                        ├── ClassVisitor.d.ts
                        ├── ClassVisitor.d.ts.map
                        ├── ClassVisitor.js
                        ├── ClassVisitor.js.map
                        ├── ExportVisitor.d.ts
                        ├── ExportVisitor.d.ts.map
                        ├── ExportVisitor.js
                        ├── ExportVisitor.js.map
                        ├── ImportVisitor.d.ts
                        ├── ImportVisitor.d.ts.map
                        ├── ImportVisitor.js
                        ├── ImportVisitor.js.map
                        ├── PatternVisitor.d.ts
                        ├── PatternVisitor.d.ts.map
                        ├── PatternVisitor.js
                        ├── PatternVisitor.js.map
                        ├── Reference.d.ts
                        ├── Reference.d.ts.map
                        ├── Reference.js
                        ├── Reference.js.map
                        ├── Referencer.d.ts
                        ├── Referencer.d.ts.map
                        ├── Referencer.js
                        ├── Referencer.js.map
                        ├── TypeVisitor.d.ts
                        ├── TypeVisitor.d.ts.map
                        ├── TypeVisitor.js
                        ├── TypeVisitor.js.map
                        ├── Visitor.d.ts
                        ├── Visitor.d.ts.map
                        ├── Visitor.js
                        ├── Visitor.js.map
                        ├── VisitorBase.d.ts
                        ├── VisitorBase.d.ts.map
                        ├── VisitorBase.js
                        ├── VisitorBase.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        └── index.js.map
                    ├── [scope]
                        ├── BlockScope.d.ts
                        ├── BlockScope.d.ts.map
                        ├── BlockScope.js
                        ├── BlockScope.js.map
                        ├── CatchScope.d.ts
                        ├── CatchScope.d.ts.map
                        ├── CatchScope.js
                        ├── CatchScope.js.map
                        ├── ClassFieldInitializerScope.d.ts
                        ├── ClassFieldInitializerScope.d.ts.map
                        ├── ClassFieldInitializerScope.js
                        ├── ClassFieldInitializerScope.js.map
                        ├── ClassScope.d.ts
                        ├── ClassScope.d.ts.map
                        ├── ClassScope.js
                        ├── ClassScope.js.map
                        ├── ClassStaticBlockScope.d.ts
                        ├── ClassStaticBlockScope.d.ts.map
                        ├── ClassStaticBlockScope.js
                        ├── ClassStaticBlockScope.js.map
                        ├── ConditionalTypeScope.d.ts
                        ├── ConditionalTypeScope.d.ts.map
                        ├── ConditionalTypeScope.js
                        ├── ConditionalTypeScope.js.map
                        ├── ForScope.d.ts
                        ├── ForScope.d.ts.map
                        ├── ForScope.js
                        ├── ForScope.js.map
                        ├── FunctionExpressionNameScope.d.ts
                        ├── FunctionExpressionNameScope.d.ts.map
                        ├── FunctionExpressionNameScope.js
                        ├── FunctionExpressionNameScope.js.map
                        ├── FunctionScope.d.ts
                        ├── FunctionScope.d.ts.map
                        ├── FunctionScope.js
                        ├── FunctionScope.js.map
                        ├── FunctionTypeScope.d.ts
                        ├── FunctionTypeScope.d.ts.map
                        ├── FunctionTypeScope.js
                        ├── FunctionTypeScope.js.map
                        ├── GlobalScope.d.ts
                        ├── GlobalScope.d.ts.map
                        ├── GlobalScope.js
                        ├── GlobalScope.js.map
                        ├── MappedTypeScope.d.ts
                        ├── MappedTypeScope.d.ts.map
                        ├── MappedTypeScope.js
                        ├── MappedTypeScope.js.map
                        ├── ModuleScope.d.ts
                        ├── ModuleScope.d.ts.map
                        ├── ModuleScope.js
                        ├── ModuleScope.js.map
                        ├── Scope.d.ts
                        ├── Scope.d.ts.map
                        ├── Scope.js
                        ├── Scope.js.map
                        ├── ScopeBase.d.ts
                        ├── ScopeBase.d.ts.map
                        ├── ScopeBase.js
                        ├── ScopeBase.js.map
                        ├── ScopeType.d.ts
                        ├── ScopeType.d.ts.map
                        ├── ScopeType.js
                        ├── ScopeType.js.map
                        ├── SwitchScope.d.ts
                        ├── SwitchScope.d.ts.map
                        ├── SwitchScope.js
                        ├── SwitchScope.js.map
                        ├── TSEnumScope.d.ts
                        ├── TSEnumScope.d.ts.map
                        ├── TSEnumScope.js
                        ├── TSEnumScope.js.map
                        ├── TSModuleScope.d.ts
                        ├── TSModuleScope.d.ts.map
                        ├── TSModuleScope.js
                        ├── TSModuleScope.js.map
                        ├── TypeScope.d.ts
                        ├── TypeScope.d.ts.map
                        ├── TypeScope.js
                        ├── TypeScope.js.map
                        ├── WithScope.d.ts
                        ├── WithScope.d.ts.map
                        ├── WithScope.js
                        ├── WithScope.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        └── index.js.map
                    └── [variable]
                        ├── ESLintScopeVariable.d.ts
                        ├── ESLintScopeVariable.d.ts.map
                        ├── ESLintScopeVariable.js
                        ├── ESLintScopeVariable.js.map
                        ├── ImplicitLibVariable.d.ts
                        ├── ImplicitLibVariable.d.ts.map
                        ├── ImplicitLibVariable.js
                        ├── ImplicitLibVariable.js.map
                        ├── Variable.d.ts
                        ├── Variable.d.ts.map
                        ├── Variable.js
                        ├── Variable.js.map
                        ├── VariableBase.d.ts
                        ├── VariableBase.d.ts.map
                        ├── VariableBase.js
                        ├── VariableBase.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        └── index.js.map
                └── package.json
            ├── [types]
                ├── LICENSE
                ├── README.md
                ├── [_ts3.4]
                    └── [dist]
                        ├── [generated]
                            └── ast-spec.d.ts
                        ├── index.d.ts
                        ├── lib.d.ts
                        ├── parser-options.d.ts
                        └── ts-estree.d.ts
                ├── [dist]
                    ├── [generated]
                        ├── ast-spec.d.ts
                        ├── ast-spec.d.ts.map
                        ├── ast-spec.js
                        └── ast-spec.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── lib.d.ts
                    ├── lib.d.ts.map
                    ├── lib.js
                    ├── lib.js.map
                    ├── parser-options.d.ts
                    ├── parser-options.d.ts.map
                    ├── parser-options.js
                    ├── parser-options.js.map
                    ├── ts-estree.d.ts
                    ├── ts-estree.d.ts.map
                    ├── ts-estree.js
                    └── ts-estree.js.map
                └── package.json
            ├── [typescript-estree]
                ├── LICENSE
                ├── README.md
                ├── [_ts3.4]
                    └── [dist]
                        ├── ast-converter.d.ts
                        ├── clear-caches.d.ts
                        ├── convert-comments.d.ts
                        ├── convert.d.ts
                        ├── [create-program]
                            ├── WatchCompilerHostOfConfigFile.d.ts
                            ├── createDefaultProgram.d.ts
                            ├── createIsolatedProgram.d.ts
                            ├── createProjectProgram.d.ts
                            ├── createSourceFile.d.ts
                            ├── describeFilePath.d.ts
                            ├── getScriptKind.d.ts
                            ├── getWatchProgramsForProjects.d.ts
                            ├── shared.d.ts
                            └── useProvidedPrograms.d.ts
                        ├── getModifiers.d.ts
                        ├── index.d.ts
                        ├── [jsx]
                            └── xhtml-entities.d.ts
                        ├── node-utils.d.ts
                        ├── [parseSettings]
                            ├── ExpiringCache.d.ts
                            ├── createParseSettings.d.ts
                            ├── getProjectConfigFiles.d.ts
                            ├── index.d.ts
                            ├── inferSingleRun.d.ts
                            ├── resolveProjectList.d.ts
                            └── warnAboutTSVersion.d.ts
                        ├── parser-options.d.ts
                        ├── parser.d.ts
                        ├── semantic-or-syntactic-errors.d.ts
                        ├── simple-traverse.d.ts
                        ├── [ts-estree]
                            ├── estree-to-ts-node-types.d.ts
                            ├── index.d.ts
                            └── ts-nodes.d.ts
                        └── version-check.d.ts
                ├── [dist]
                    ├── ast-converter.d.ts
                    ├── ast-converter.d.ts.map
                    ├── ast-converter.js
                    ├── ast-converter.js.map
                    ├── clear-caches.d.ts
                    ├── clear-caches.d.ts.map
                    ├── clear-caches.js
                    ├── clear-caches.js.map
                    ├── convert-comments.d.ts
                    ├── convert-comments.d.ts.map
                    ├── convert-comments.js
                    ├── convert-comments.js.map
                    ├── convert.d.ts
                    ├── convert.d.ts.map
                    ├── convert.js
                    ├── convert.js.map
                    ├── [create-program]
                        ├── WatchCompilerHostOfConfigFile.d.ts
                        ├── WatchCompilerHostOfConfigFile.d.ts.map
                        ├── WatchCompilerHostOfConfigFile.js
                        ├── WatchCompilerHostOfConfigFile.js.map
                        ├── createDefaultProgram.d.ts
                        ├── createDefaultProgram.d.ts.map
                        ├── createDefaultProgram.js
                        ├── createDefaultProgram.js.map
                        ├── createIsolatedProgram.d.ts
                        ├── createIsolatedProgram.d.ts.map
                        ├── createIsolatedProgram.js
                        ├── createIsolatedProgram.js.map
                        ├── createProjectProgram.d.ts
                        ├── createProjectProgram.d.ts.map
                        ├── createProjectProgram.js
                        ├── createProjectProgram.js.map
                        ├── createSourceFile.d.ts
                        ├── createSourceFile.d.ts.map
                        ├── createSourceFile.js
                        ├── createSourceFile.js.map
                        ├── describeFilePath.d.ts
                        ├── describeFilePath.d.ts.map
                        ├── describeFilePath.js
                        ├── describeFilePath.js.map
                        ├── getScriptKind.d.ts
                        ├── getScriptKind.d.ts.map
                        ├── getScriptKind.js
                        ├── getScriptKind.js.map
                        ├── getWatchProgramsForProjects.d.ts
                        ├── getWatchProgramsForProjects.d.ts.map
                        ├── getWatchProgramsForProjects.js
                        ├── getWatchProgramsForProjects.js.map
                        ├── shared.d.ts
                        ├── shared.d.ts.map
                        ├── shared.js
                        ├── shared.js.map
                        ├── useProvidedPrograms.d.ts
                        ├── useProvidedPrograms.d.ts.map
                        ├── useProvidedPrograms.js
                        └── useProvidedPrograms.js.map
                    ├── getModifiers.d.ts
                    ├── getModifiers.d.ts.map
                    ├── getModifiers.js
                    ├── getModifiers.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── [jsx]
                        ├── xhtml-entities.d.ts
                        ├── xhtml-entities.d.ts.map
                        ├── xhtml-entities.js
                        └── xhtml-entities.js.map
                    ├── node-utils.d.ts
                    ├── node-utils.d.ts.map
                    ├── node-utils.js
                    ├── node-utils.js.map
                    ├── [parseSettings]
                        ├── ExpiringCache.d.ts
                        ├── ExpiringCache.d.ts.map
                        ├── ExpiringCache.js
                        ├── ExpiringCache.js.map
                        ├── createParseSettings.d.ts
                        ├── createParseSettings.d.ts.map
                        ├── createParseSettings.js
                        ├── createParseSettings.js.map
                        ├── getProjectConfigFiles.d.ts
                        ├── getProjectConfigFiles.d.ts.map
                        ├── getProjectConfigFiles.js
                        ├── getProjectConfigFiles.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        ├── index.js.map
                        ├── inferSingleRun.d.ts
                        ├── inferSingleRun.d.ts.map
                        ├── inferSingleRun.js
                        ├── inferSingleRun.js.map
                        ├── resolveProjectList.d.ts
                        ├── resolveProjectList.d.ts.map
                        ├── resolveProjectList.js
                        ├── resolveProjectList.js.map
                        ├── warnAboutTSVersion.d.ts
                        ├── warnAboutTSVersion.d.ts.map
                        ├── warnAboutTSVersion.js
                        └── warnAboutTSVersion.js.map
                    ├── parser-options.d.ts
                    ├── parser-options.d.ts.map
                    ├── parser-options.js
                    ├── parser-options.js.map
                    ├── parser.d.ts
                    ├── parser.d.ts.map
                    ├── parser.js
                    ├── parser.js.map
                    ├── semantic-or-syntactic-errors.d.ts
                    ├── semantic-or-syntactic-errors.d.ts.map
                    ├── semantic-or-syntactic-errors.js
                    ├── semantic-or-syntactic-errors.js.map
                    ├── simple-traverse.d.ts
                    ├── simple-traverse.d.ts.map
                    ├── simple-traverse.js
                    ├── simple-traverse.js.map
                    ├── [ts-estree]
                        ├── estree-to-ts-node-types.d.ts
                        ├── estree-to-ts-node-types.d.ts.map
                        ├── estree-to-ts-node-types.js
                        ├── estree-to-ts-node-types.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        ├── index.js.map
                        ├── ts-nodes.d.ts
                        ├── ts-nodes.d.ts.map
                        ├── ts-nodes.js
                        └── ts-nodes.js.map
                    ├── version-check.d.ts
                    ├── version-check.d.ts.map
                    ├── version-check.js
                    └── version-check.js.map
                ├── [node_modules]
                    ├── [debug]
                        ├── LICENSE
                        ├── README.md
                        ├── package.json
                        └── [src]
                            ├── browser.js
                            ├── common.js
                            ├── index.js
                            └── node.js
                    └── [ms]
                        ├── index.js
                        ├── license.md
                        ├── package.json
                        └── readme.md
                └── package.json
            ├── [utils]
                ├── LICENSE
                ├── README.md
                ├── [_ts3.4]
                    └── [dist]
                        ├── [ast-utils]
                            ├── [eslint-utils]
                                ├── PatternMatcher.d.ts
                                ├── ReferenceTracker.d.ts
                                ├── astUtilities.d.ts
                                ├── index.d.ts
                                ├── predicates.d.ts
                                └── scopeAnalysis.d.ts
                            ├── helpers.d.ts
                            ├── index.d.ts
                            ├── misc.d.ts
                            └── predicates.d.ts
                        ├── [eslint-utils]
                            ├── InferTypesFromRule.d.ts
                            ├── RuleCreator.d.ts
                            ├── applyDefault.d.ts
                            ├── batchedSingleLineTests.d.ts
                            ├── deepMerge.d.ts
                            ├── getParserServices.d.ts
                            ├── index.d.ts
                            ├── nullThrows.d.ts
                            └── [rule-tester]
                                ├── RuleTester.d.ts
                                └── dependencyConstraints.d.ts
                        ├── index.d.ts
                        ├── json-schema.d.ts
                        ├── [ts-eslint]
                            ├── AST.d.ts
                            ├── CLIEngine.d.ts
                            ├── ESLint.d.ts
                            ├── Linter.d.ts
                            ├── ParserOptions.d.ts
                            ├── Rule.d.ts
                            ├── RuleTester.d.ts
                            ├── Scope.d.ts
                            ├── SourceCode.d.ts
                            └── index.d.ts
                        ├── [ts-eslint-scope]
                            ├── Definition.d.ts
                            ├── Options.d.ts
                            ├── PatternVisitor.d.ts
                            ├── Reference.d.ts
                            ├── Referencer.d.ts
                            ├── Scope.d.ts
                            ├── ScopeManager.d.ts
                            ├── Variable.d.ts
                            ├── analyze.d.ts
                            └── index.d.ts
                        └── ts-estree.d.ts
                ├── [dist]
                    ├── [ast-utils]
                        ├── [eslint-utils]
                            ├── PatternMatcher.d.ts
                            ├── PatternMatcher.d.ts.map
                            ├── PatternMatcher.js
                            ├── PatternMatcher.js.map
                            ├── ReferenceTracker.d.ts
                            ├── ReferenceTracker.d.ts.map
                            ├── ReferenceTracker.js
                            ├── ReferenceTracker.js.map
                            ├── astUtilities.d.ts
                            ├── astUtilities.d.ts.map
                            ├── astUtilities.js
                            ├── astUtilities.js.map
                            ├── index.d.ts
                            ├── index.d.ts.map
                            ├── index.js
                            ├── index.js.map
                            ├── predicates.d.ts
                            ├── predicates.d.ts.map
                            ├── predicates.js
                            ├── predicates.js.map
                            ├── scopeAnalysis.d.ts
                            ├── scopeAnalysis.d.ts.map
                            ├── scopeAnalysis.js
                            └── scopeAnalysis.js.map
                        ├── helpers.d.ts
                        ├── helpers.d.ts.map
                        ├── helpers.js
                        ├── helpers.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        ├── index.js.map
                        ├── misc.d.ts
                        ├── misc.d.ts.map
                        ├── misc.js
                        ├── misc.js.map
                        ├── predicates.d.ts
                        ├── predicates.d.ts.map
                        ├── predicates.js
                        └── predicates.js.map
                    ├── [eslint-utils]
                        ├── InferTypesFromRule.d.ts
                        ├── InferTypesFromRule.d.ts.map
                        ├── InferTypesFromRule.js
                        ├── InferTypesFromRule.js.map
                        ├── RuleCreator.d.ts
                        ├── RuleCreator.d.ts.map
                        ├── RuleCreator.js
                        ├── RuleCreator.js.map
                        ├── applyDefault.d.ts
                        ├── applyDefault.d.ts.map
                        ├── applyDefault.js
                        ├── applyDefault.js.map
                        ├── batchedSingleLineTests.d.ts
                        ├── batchedSingleLineTests.d.ts.map
                        ├── batchedSingleLineTests.js
                        ├── batchedSingleLineTests.js.map
                        ├── deepMerge.d.ts
                        ├── deepMerge.d.ts.map
                        ├── deepMerge.js
                        ├── deepMerge.js.map
                        ├── getParserServices.d.ts
                        ├── getParserServices.d.ts.map
                        ├── getParserServices.js
                        ├── getParserServices.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        ├── index.js.map
                        ├── nullThrows.d.ts
                        ├── nullThrows.d.ts.map
                        ├── nullThrows.js
                        ├── nullThrows.js.map
                        └── [rule-tester]
                            ├── RuleTester.d.ts
                            ├── RuleTester.d.ts.map
                            ├── RuleTester.js
                            ├── RuleTester.js.map
                            ├── dependencyConstraints.d.ts
                            ├── dependencyConstraints.d.ts.map
                            ├── dependencyConstraints.js
                            └── dependencyConstraints.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── json-schema.d.ts
                    ├── json-schema.d.ts.map
                    ├── json-schema.js
                    ├── json-schema.js.map
                    ├── [ts-eslint]
                        ├── AST.d.ts
                        ├── AST.d.ts.map
                        ├── AST.js
                        ├── AST.js.map
                        ├── CLIEngine.d.ts
                        ├── CLIEngine.d.ts.map
                        ├── CLIEngine.js
                        ├── CLIEngine.js.map
                        ├── ESLint.d.ts
                        ├── ESLint.d.ts.map
                        ├── ESLint.js
                        ├── ESLint.js.map
                        ├── Linter.d.ts
                        ├── Linter.d.ts.map
                        ├── Linter.js
                        ├── Linter.js.map
                        ├── ParserOptions.d.ts
                        ├── ParserOptions.d.ts.map
                        ├── ParserOptions.js
                        ├── ParserOptions.js.map
                        ├── Rule.d.ts
                        ├── Rule.d.ts.map
                        ├── Rule.js
                        ├── Rule.js.map
                        ├── RuleTester.d.ts
                        ├── RuleTester.d.ts.map
                        ├── RuleTester.js
                        ├── RuleTester.js.map
                        ├── Scope.d.ts
                        ├── Scope.d.ts.map
                        ├── Scope.js
                        ├── Scope.js.map
                        ├── SourceCode.d.ts
                        ├── SourceCode.d.ts.map
                        ├── SourceCode.js
                        ├── SourceCode.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        └── index.js.map
                    ├── [ts-eslint-scope]
                        ├── Definition.d.ts
                        ├── Definition.d.ts.map
                        ├── Definition.js
                        ├── Definition.js.map
                        ├── Options.d.ts
                        ├── Options.d.ts.map
                        ├── Options.js
                        ├── Options.js.map
                        ├── PatternVisitor.d.ts
                        ├── PatternVisitor.d.ts.map
                        ├── PatternVisitor.js
                        ├── PatternVisitor.js.map
                        ├── Reference.d.ts
                        ├── Reference.d.ts.map
                        ├── Reference.js
                        ├── Reference.js.map
                        ├── Referencer.d.ts
                        ├── Referencer.d.ts.map
                        ├── Referencer.js
                        ├── Referencer.js.map
                        ├── Scope.d.ts
                        ├── Scope.d.ts.map
                        ├── Scope.js
                        ├── Scope.js.map
                        ├── ScopeManager.d.ts
                        ├── ScopeManager.d.ts.map
                        ├── ScopeManager.js
                        ├── ScopeManager.js.map
                        ├── Variable.d.ts
                        ├── Variable.d.ts.map
                        ├── Variable.js
                        ├── Variable.js.map
                        ├── analyze.d.ts
                        ├── analyze.d.ts.map
                        ├── analyze.js
                        ├── analyze.js.map
                        ├── index.d.ts
                        ├── index.d.ts.map
                        ├── index.js
                        └── index.js.map
                    ├── ts-estree.d.ts
                    ├── ts-estree.d.ts.map
                    ├── ts-estree.js
                    └── ts-estree.js.map
                ├── [node_modules]
                    ├── [eslint-scope]
                        ├── CHANGELOG.md
                        ├── LICENSE
                        ├── README.md
                        ├── [lib]
                            ├── definition.js
                            ├── index.js
                            ├── pattern-visitor.js
                            ├── reference.js
                            ├── referencer.js
                            ├── scope-manager.js
                            ├── scope.js
                            └── variable.js
                        └── package.json
                    └── [estraverse]
                        ├── .jshintrc
                        ├── LICENSE.BSD
                        ├── README.md
                        ├── estraverse.js
                        ├── gulpfile.js
                        └── package.json
                └── package.json
            └── [visitor-keys]
                ├── LICENSE
                ├── README.md
                ├── [_ts3.4]
                    └── [dist]
                        ├── get-keys.d.ts
                        ├── index.d.ts
                        └── visitor-keys.d.ts
                ├── [dist]
                    ├── get-keys.d.ts
                    ├── get-keys.d.ts.map
                    ├── get-keys.js
                    ├── get-keys.js.map
                    ├── index.d.ts
                    ├── index.d.ts.map
                    ├── index.js
                    ├── index.js.map
                    ├── visitor-keys.d.ts
                    ├── visitor-keys.d.ts.map
                    ├── visitor-keys.js
                    └── visitor-keys.js.map
                └── package.json
        ├── [@ungap]
            └── [structured-clone]
                ├── [.github]
                    └── [workflows]
                        └── node.js.yml
                ├── LICENSE
                ├── README.md
                ├── [cjs]
                    ├── deserialize.js
                    ├── index.js
                    ├── json.js
                    ├── package.json
                    ├── serialize.js
                    └── types.js
                ├── [esm]
                    ├── deserialize.js
                    ├── index.js
                    ├── json.js
                    ├── serialize.js
                    └── types.js
                ├── package.json
                └── structured-json.js
        ├── [abbrev]
            ├── LICENSE
            ├── README.md
            ├── abbrev.js
            └── package.json
        ├── [accepts]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                └── [negotiator]
                    ├── HISTORY.md
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    ├── [lib]
                        ├── charset.js
                        ├── encoding.js
                        ├── language.js
                        └── mediaType.js
                    └── package.json
            └── package.json
        ├── [acorn]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── acorn
            ├── [dist]
                ├── acorn.d.mts
                ├── acorn.d.ts
                ├── acorn.js
                ├── acorn.mjs
                └── bin.js
            └── package.json
        ├── [acorn-jsx]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── xhtml.js
        ├── [agent-base]
            ├── README.md
            ├── [dist]
                └── [src]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── promisify.d.ts
                    ├── promisify.js
                    └── promisify.js.map
            ├── [node_modules]
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── [src]
                ├── index.ts
                └── promisify.ts
        ├── [ajv]
            ├── .tonic_example.js
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── ajv.bundle.js
                ├── ajv.min.js
                └── ajv.min.js.map
            ├── [lib]
                ├── ajv.d.ts
                ├── ajv.js
                ├── cache.js
                ├── [compile]
                    ├── async.js
                    ├── equal.js
                    ├── error_classes.js
                    ├── formats.js
                    ├── index.js
                    ├── resolve.js
                    ├── rules.js
                    ├── schema_obj.js
                    ├── ucs2length.js
                    └── util.js
                ├── data.js
                ├── definition_schema.js
                ├── [dot]
                    ├── _limit.jst
                    ├── _limitItems.jst
                    ├── _limitLength.jst
                    ├── _limitProperties.jst
                    ├── allOf.jst
                    ├── anyOf.jst
                    ├── coerce.def
                    ├── comment.jst
                    ├── const.jst
                    ├── contains.jst
                    ├── custom.jst
                    ├── defaults.def
                    ├── definitions.def
                    ├── dependencies.jst
                    ├── enum.jst
                    ├── errors.def
                    ├── format.jst
                    ├── if.jst
                    ├── items.jst
                    ├── missing.def
                    ├── multipleOf.jst
                    ├── not.jst
                    ├── oneOf.jst
                    ├── pattern.jst
                    ├── properties.jst
                    ├── propertyNames.jst
                    ├── ref.jst
                    ├── required.jst
                    ├── uniqueItems.jst
                    └── validate.jst
                ├── [dotjs]
                    ├── README.md
                    ├── _limit.js
                    ├── _limitItems.js
                    ├── _limitLength.js
                    ├── _limitProperties.js
                    ├── allOf.js
                    ├── anyOf.js
                    ├── comment.js
                    ├── const.js
                    ├── contains.js
                    ├── custom.js
                    ├── dependencies.js
                    ├── enum.js
                    ├── format.js
                    ├── if.js
                    ├── index.js
                    ├── items.js
                    ├── multipleOf.js
                    ├── not.js
                    ├── oneOf.js
                    ├── pattern.js
                    ├── properties.js
                    ├── propertyNames.js
                    ├── ref.js
                    ├── required.js
                    ├── uniqueItems.js
                    └── validate.js
                ├── keyword.js
                └── [refs]
                    ├── data.json
                    ├── json-schema-draft-04.json
                    ├── json-schema-draft-06.json
                    ├── json-schema-draft-07.json
                    └── json-schema-secure.json
            ├── package.json
            └── [scripts]
                ├── .eslintrc.yml
                ├── bundle.js
                ├── compile-dots.js
                ├── info
                ├── prepare-tests
                ├── publish-built-version
                └── travis-gh-pages
        ├── [ansi-escapes]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                └── [type-fest]
                    ├── base.d.ts
                    ├── index.d.ts
                    ├── license
                    ├── package.json
                    ├── readme.md
                    ├── [source]
                        ├── async-return-type.d.ts
                        ├── asyncify.d.ts
                        ├── basic.d.ts
                        ├── conditional-except.d.ts
                        ├── conditional-keys.d.ts
                        ├── conditional-pick.d.ts
                        ├── entries.d.ts
                        ├── entry.d.ts
                        ├── except.d.ts
                        ├── fixed-length-array.d.ts
                        ├── iterable-element.d.ts
                        ├── literal-union.d.ts
                        ├── merge-exclusive.d.ts
                        ├── merge.d.ts
                        ├── mutable.d.ts
                        ├── opaque.d.ts
                        ├── package-json.d.ts
                        ├── partial-deep.d.ts
                        ├── promisable.d.ts
                        ├── promise-value.d.ts
                        ├── readonly-deep.d.ts
                        ├── require-at-least-one.d.ts
                        ├── require-exactly-one.d.ts
                        ├── set-optional.d.ts
                        ├── set-required.d.ts
                        ├── set-return-type.d.ts
                        ├── simplify.d.ts
                        ├── stringified.d.ts
                        ├── tsconfig-json.d.ts
                        ├── typed-array.d.ts
                        ├── union-to-intersection.d.ts
                        ├── utilities.d.ts
                        └── value-of.d.ts
                    └── [ts41]
                        ├── camel-case.d.ts
                        ├── delimiter-case.d.ts
                        ├── get.d.ts
                        ├── index.d.ts
                        ├── kebab-case.d.ts
                        ├── pascal-case.d.ts
                        ├── snake-case.d.ts
                        └── utilities.d.ts
            ├── package.json
            └── readme.md
        ├── [ansi-regex]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [ansi-styles]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [anymatch]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [aproba]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [are-we-there-yet]
            ├── LICENSE.md
            ├── README.md
            ├── [lib]
                ├── index.js
                ├── tracker-base.js
                ├── tracker-group.js
                ├── tracker-stream.js
                └── tracker.js
            └── package.json
        ├── [argparse]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── argparse.js
            ├── [lib]
                ├── sub.js
                └── textwrap.js
            └── package.json
        ├── [array-flatten]
            ├── LICENSE
            ├── README.md
            ├── array-flatten.js
            └── package.json
        ├── [array-union]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [asap]
            ├── CHANGES.md
            ├── LICENSE.md
            ├── README.md
            ├── asap.js
            ├── browser-asap.js
            ├── browser-raw.js
            ├── package.json
            └── raw.js
        ├── [async]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── all.js
            ├── allLimit.js
            ├── allSeries.js
            ├── any.js
            ├── anyLimit.js
            ├── anySeries.js
            ├── apply.js
            ├── applyEach.js
            ├── applyEachSeries.js
            ├── asyncify.js
            ├── auto.js
            ├── autoInject.js
            ├── bower.json
            ├── cargo.js
            ├── cargoQueue.js
            ├── compose.js
            ├── concat.js
            ├── concatLimit.js
            ├── concatSeries.js
            ├── constant.js
            ├── detect.js
            ├── detectLimit.js
            ├── detectSeries.js
            ├── dir.js
            ├── [dist]
                ├── async.js
                ├── async.min.js
                └── async.mjs
            ├── doDuring.js
            ├── doUntil.js
            ├── doWhilst.js
            ├── during.js
            ├── each.js
            ├── eachLimit.js
            ├── eachOf.js
            ├── eachOfLimit.js
            ├── eachOfSeries.js
            ├── eachSeries.js
            ├── ensureAsync.js
            ├── every.js
            ├── everyLimit.js
            ├── everySeries.js
            ├── filter.js
            ├── filterLimit.js
            ├── filterSeries.js
            ├── find.js
            ├── findLimit.js
            ├── findSeries.js
            ├── flatMap.js
            ├── flatMapLimit.js
            ├── flatMapSeries.js
            ├── foldl.js
            ├── foldr.js
            ├── forEach.js
            ├── forEachLimit.js
            ├── forEachOf.js
            ├── forEachOfLimit.js
            ├── forEachOfSeries.js
            ├── forEachSeries.js
            ├── forever.js
            ├── groupBy.js
            ├── groupByLimit.js
            ├── groupBySeries.js
            ├── index.js
            ├── inject.js
            ├── [internal]
                ├── DoublyLinkedList.js
                ├── Heap.js
                ├── applyEach.js
                ├── asyncEachOfLimit.js
                ├── awaitify.js
                ├── breakLoop.js
                ├── consoleFunc.js
                ├── createTester.js
                ├── eachOfLimit.js
                ├── filter.js
                ├── getIterator.js
                ├── initialParams.js
                ├── isArrayLike.js
                ├── iterator.js
                ├── map.js
                ├── once.js
                ├── onlyOnce.js
                ├── parallel.js
                ├── promiseCallback.js
                ├── queue.js
                ├── range.js
                ├── reject.js
                ├── setImmediate.js
                ├── withoutIndex.js
                └── wrapAsync.js
            ├── log.js
            ├── map.js
            ├── mapLimit.js
            ├── mapSeries.js
            ├── mapValues.js
            ├── mapValuesLimit.js
            ├── mapValuesSeries.js
            ├── memoize.js
            ├── nextTick.js
            ├── package.json
            ├── parallel.js
            ├── parallelLimit.js
            ├── priorityQueue.js
            ├── queue.js
            ├── race.js
            ├── reduce.js
            ├── reduceRight.js
            ├── reflect.js
            ├── reflectAll.js
            ├── reject.js
            ├── rejectLimit.js
            ├── rejectSeries.js
            ├── retry.js
            ├── retryable.js
            ├── select.js
            ├── selectLimit.js
            ├── selectSeries.js
            ├── seq.js
            ├── series.js
            ├── setImmediate.js
            ├── some.js
            ├── someLimit.js
            ├── someSeries.js
            ├── sortBy.js
            ├── timeout.js
            ├── times.js
            ├── timesLimit.js
            ├── timesSeries.js
            ├── transform.js
            ├── tryEach.js
            ├── unmemoize.js
            ├── until.js
            ├── waterfall.js
            ├── whilst.js
            └── wrapSync.js
        ├── [asynckit]
            ├── LICENSE
            ├── README.md
            ├── bench.js
            ├── index.js
            ├── [lib]
                ├── abort.js
                ├── async.js
                ├── defer.js
                ├── iterate.js
                ├── readable_asynckit.js
                ├── readable_parallel.js
                ├── readable_serial.js
                ├── readable_serial_ordered.js
                ├── state.js
                ├── streamify.js
                └── terminator.js
            ├── package.json
            ├── parallel.js
            ├── serial.js
            ├── serialOrdered.js
            └── stream.js
        ├── [babel-jest]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                ├── index.js
                └── loadBabelConfig.js
            └── package.json
        ├── [babel-plugin-istanbul]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── index.js
                └── load-nyc-config-sync.js
            ├── [node_modules]
                ├── [.bin]
                    └── semver
                ├── [istanbul-lib-instrument]
                    ├── CHANGELOG.md
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── constants.js
                        ├── index.js
                        ├── instrumenter.js
                        ├── read-coverage.js
                        ├── source-coverage.js
                        └── visitor.js
                └── [semver]
                    ├── LICENSE
                    ├── README.md
                    ├── [bin]
                        └── semver.js
                    ├── package.json
                    ├── range.bnf
                    └── semver.js
            └── package.json
        ├── [babel-plugin-jest-hoist]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [babel-preset-current-node-syntax]
            ├── [.github]
                ├── FUNDING.yml
                └── [workflows]
                    └── nodejs.yml
            ├── LICENSE
            ├── README.md
            ├── package.json
            └── [src]
                └── index.js
        ├── [babel-preset-jest]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [balanced-match]
            ├── [.github]
                └── FUNDING.yml
            ├── LICENSE.md
            ├── README.md
            ├── index.js
            └── package.json
        ├── [basic-auth]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                └── [safe-buffer]
                    ├── LICENSE
                    ├── README.md
                    ├── index.d.ts
                    ├── index.js
                    └── package.json
            └── package.json
        ├── [bcrypt]
            ├── .editorconfig
            ├── [.github]
                └── [workflows]
                    └── ci.yaml
            ├── .travis.yml
            ├── CHANGELOG.md
            ├── ISSUE_TEMPLATE.md
            ├── LICENSE
            ├── Makefile
            ├── README.md
            ├── SECURITY.md
            ├── appveyor.yml
            ├── bcrypt.js
            ├── binding.gyp
            ├── [examples]
                ├── async_compare.js
                └── forever_gen_salt.js
            ├── [lib]
                └── [binding]
                    └── [napi-v3]
                        └── bcrypt_lib.node
            ├── package.json
            ├── promises.js
            ├── [src]
                ├── bcrypt.cc
                ├── bcrypt_node.cc
                ├── blowfish.cc
                └── node_blf.h
            ├── [test]
                ├── async.test.js
                ├── implementation.test.js
                ├── promise.test.js
                ├── repetitions.test.js
                └── sync.test.js
            └── test-docker.sh
        ├── [binary-extensions]
            ├── binary-extensions.json
            ├── binary-extensions.json.d.ts
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [body-parser]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.js
            ├── [lib]
                ├── read.js
                └── [types]
                    ├── json.js
                    ├── raw.js
                    ├── text.js
                    └── urlencoded.js
            └── package.json
        ├── [brace-expansion]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [braces]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── compile.js
                ├── constants.js
                ├── expand.js
                ├── parse.js
                ├── stringify.js
                └── utils.js
            └── package.json
        ├── [browserslist]
            ├── LICENSE
            ├── README.md
            ├── browser.js
            ├── cli.js
            ├── error.d.ts
            ├── error.js
            ├── index.d.ts
            ├── index.js
            ├── node.js
            ├── package.json
            └── parse.js
        ├── [bser]
            ├── README.md
            ├── index.js
            └── package.json
        ├── [bson]
            ├── LICENSE.md
            ├── README.md
            ├── bson.d.ts
            ├── [etc]
                └── prepare.js
            ├── [lib]
                ├── bson.bundle.js
                ├── bson.bundle.js.map
                ├── bson.cjs
                ├── bson.cjs.map
                ├── bson.mjs
                ├── bson.mjs.map
                ├── bson.rn.cjs
                └── bson.rn.cjs.map
            ├── package.json
            ├── [src]
                ├── binary.ts
                ├── bson.ts
                ├── bson_value.ts
                ├── code.ts
                ├── constants.ts
                ├── db_ref.ts
                ├── decimal128.ts
                ├── double.ts
                ├── error.ts
                ├── extended_json.ts
                ├── index.ts
                ├── int_32.ts
                ├── long.ts
                ├── max_key.ts
                ├── min_key.ts
                ├── objectid.ts
                ├── parse_utf8.ts
                ├── [parser]
                    ├── calculate_size.ts
                    ├── deserializer.ts
                    ├── [on_demand]
                        ├── index.ts
                        └── parse_to_elements.ts
                    ├── serializer.ts
                    └── utils.ts
                ├── regexp.ts
                ├── symbol.ts
                ├── timestamp.ts
                └── [utils]
                    ├── byte_utils.ts
                    ├── latin.ts
                    ├── node_byte_utils.ts
                    ├── number_utils.ts
                    ├── string_utils.ts
                    └── web_byte_utils.ts
            └── [vendor]
                ├── [base64]
                    ├── LICENSE-MIT.txt
                    ├── README.md
                    ├── base64.js
                    └── package.json
                └── [text-encoding]
                    ├── LICENSE.md
                    ├── README.md
                    ├── index.js
                    ├── [lib]
                        ├── encoding-indexes.js
                        └── encoding.js
                    └── package.json
        ├── [buffer-equal-constant-time]
            ├── .npmignore
            ├── .travis.yml
            ├── LICENSE.txt
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [buffer-from]
            ├── LICENSE
            ├── index.js
            ├── package.json
            └── readme.md
        ├── [bytes]
            ├── History.md
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            └── package.json
        ├── [call-bind-apply-helpers]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── actualApply.d.ts
            ├── actualApply.js
            ├── applyBind.d.ts
            ├── applyBind.js
            ├── functionApply.d.ts
            ├── functionApply.js
            ├── functionCall.d.ts
            ├── functionCall.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── reflectApply.d.ts
            ├── reflectApply.js
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [call-bound]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [callsites]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [camelcase]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [caniuse-lite]
            ├── LICENSE
            ├── README.md
            ├── [data]
                ├── agents.js
                ├── browserVersions.js
                ├── browsers.js
                ├── [features]
                    ├── aac.js
                    ├── abortcontroller.js
                    ├── ac3-ec3.js
                    ├── accelerometer.js
                    ├── addeventlistener.js
                    ├── alternate-stylesheet.js
                    ├── ambient-light.js
                    ├── apng.js
                    ├── array-find-index.js
                    ├── array-find.js
                    ├── array-flat.js
                    ├── array-includes.js
                    ├── arrow-functions.js
                    ├── asmjs.js
                    ├── async-clipboard.js
                    ├── async-functions.js
                    ├── atob-btoa.js
                    ├── audio-api.js
                    ├── audio.js
                    ├── audiotracks.js
                    ├── autofocus.js
                    ├── auxclick.js
                    ├── av1.js
                    ├── avif.js
                    ├── background-attachment.js
                    ├── background-clip-text.js
                    ├── background-img-opts.js
                    ├── background-position-x-y.js
                    ├── background-repeat-round-space.js
                    ├── background-sync.js
                    ├── battery-status.js
                    ├── beacon.js
                    ├── beforeafterprint.js
                    ├── bigint.js
                    ├── blobbuilder.js
                    ├── bloburls.js
                    ├── border-image.js
                    ├── border-radius.js
                    ├── broadcastchannel.js
                    ├── brotli.js
                    ├── calc.js
                    ├── canvas-blending.js
                    ├── canvas-text.js
                    ├── canvas.js
                    ├── ch-unit.js
                    ├── chacha20-poly1305.js
                    ├── channel-messaging.js
                    ├── childnode-remove.js
                    ├── classlist.js
                    ├── client-hints-dpr-width-viewport.js
                    ├── clipboard.js
                    ├── colr-v1.js
                    ├── colr.js
                    ├── comparedocumentposition.js
                    ├── console-basic.js
                    ├── console-time.js
                    ├── const.js
                    ├── constraint-validation.js
                    ├── contenteditable.js
                    ├── contentsecuritypolicy.js
                    ├── contentsecuritypolicy2.js
                    ├── cookie-store-api.js
                    ├── cors.js
                    ├── createimagebitmap.js
                    ├── credential-management.js
                    ├── cross-document-view-transitions.js
                    ├── cryptography.js
                    ├── css-all.js
                    ├── css-anchor-positioning.js
                    ├── css-animation.js
                    ├── css-any-link.js
                    ├── css-appearance.js
                    ├── css-at-counter-style.js
                    ├── css-autofill.js
                    ├── css-backdrop-filter.js
                    ├── css-background-offsets.js
                    ├── css-backgroundblendmode.js
                    ├── css-boxdecorationbreak.js
                    ├── css-boxshadow.js
                    ├── css-canvas.js
                    ├── css-caret-color.js
                    ├── css-cascade-layers.js
                    ├── css-cascade-scope.js
                    ├── css-case-insensitive.js
                    ├── css-clip-path.js
                    ├── css-color-adjust.js
                    ├── css-color-function.js
                    ├── css-conic-gradients.js
                    ├── css-container-queries-style.js
                    ├── css-container-queries.js
                    ├── css-container-query-units.js
                    ├── css-containment.js
                    ├── css-content-visibility.js
                    ├── css-counters.js
                    ├── css-crisp-edges.js
                    ├── css-cross-fade.js
                    ├── css-default-pseudo.js
                    ├── css-descendant-gtgt.js
                    ├── css-deviceadaptation.js
                    ├── css-dir-pseudo.js
                    ├── css-display-contents.js
                    ├── css-element-function.js
                    ├── css-env-function.js
                    ├── css-exclusions.js
                    ├── css-featurequeries.js
                    ├── css-file-selector-button.js
                    ├── css-filter-function.js
                    ├── css-filters.js
                    ├── css-first-letter.js
                    ├── css-first-line.js
                    ├── css-fixed.js
                    ├── css-focus-visible.js
                    ├── css-focus-within.js
                    ├── css-font-palette.js
                    ├── css-font-rendering-controls.js
                    ├── css-font-stretch.js
                    ├── css-gencontent.js
                    ├── css-gradients.js
                    ├── css-grid-animation.js
                    ├── css-grid.js
                    ├── css-hanging-punctuation.js
                    ├── css-has.js
                    ├── css-hyphens.js
                    ├── css-image-orientation.js
                    ├── css-image-set.js
                    ├── css-in-out-of-range.js
                    ├── css-indeterminate-pseudo.js
                    ├── css-initial-letter.js
                    ├── css-initial-value.js
                    ├── css-lch-lab.js
                    ├── css-letter-spacing.js
                    ├── css-line-clamp.js
                    ├── css-logical-props.js
                    ├── css-marker-pseudo.js
                    ├── css-masks.js
                    ├── css-matches-pseudo.js
                    ├── css-math-functions.js
                    ├── css-media-interaction.js
                    ├── css-media-range-syntax.js
                    ├── css-media-resolution.js
                    ├── css-media-scripting.js
                    ├── css-mediaqueries.js
                    ├── css-mixblendmode.js
                    ├── css-module-scripts.js
                    ├── css-motion-paths.js
                    ├── css-namespaces.js
                    ├── css-nesting.js
                    ├── css-not-sel-list.js
                    ├── css-nth-child-of.js
                    ├── css-opacity.js
                    ├── css-optional-pseudo.js
                    ├── css-overflow-anchor.js
                    ├── css-overflow-overlay.js
                    ├── css-overflow.js
                    ├── css-overscroll-behavior.js
                    ├── css-page-break.js
                    ├── css-paged-media.js
                    ├── css-paint-api.js
                    ├── css-placeholder-shown.js
                    ├── css-placeholder.js
                    ├── css-print-color-adjust.js
                    ├── css-read-only-write.js
                    ├── css-rebeccapurple.js
                    ├── css-reflections.js
                    ├── css-regions.js
                    ├── css-relative-colors.js
                    ├── css-repeating-gradients.js
                    ├── css-resize.js
                    ├── css-revert-value.js
                    ├── css-rrggbbaa.js
                    ├── css-scroll-behavior.js
                    ├── css-scrollbar.js
                    ├── css-sel2.js
                    ├── css-sel3.js
                    ├── css-selection.js
                    ├── css-shapes.js
                    ├── css-snappoints.js
                    ├── css-sticky.js
                    ├── css-subgrid.js
                    ├── css-supports-api.js
                    ├── css-table.js
                    ├── css-text-align-last.js
                    ├── css-text-box-trim.js
                    ├── css-text-indent.js
                    ├── css-text-justify.js
                    ├── css-text-orientation.js
                    ├── css-text-spacing.js
                    ├── css-text-wrap-balance.js
                    ├── css-textshadow.js
                    ├── css-touch-action.js
                    ├── css-transitions.js
                    ├── css-unicode-bidi.js
                    ├── css-unset-value.js
                    ├── css-variables.js
                    ├── css-when-else.js
                    ├── css-widows-orphans.js
                    ├── css-width-stretch.js
                    ├── css-writing-mode.js
                    ├── css-zoom.js
                    ├── css3-attr.js
                    ├── css3-boxsizing.js
                    ├── css3-colors.js
                    ├── css3-cursors-grab.js
                    ├── css3-cursors-newer.js
                    ├── css3-cursors.js
                    ├── css3-tabsize.js
                    ├── currentcolor.js
                    ├── custom-elements.js
                    ├── custom-elementsv1.js
                    ├── customevent.js
                    ├── datalist.js
                    ├── dataset.js
                    ├── datauri.js
                    ├── date-tolocaledatestring.js
                    ├── declarative-shadow-dom.js
                    ├── decorators.js
                    ├── details.js
                    ├── deviceorientation.js
                    ├── devicepixelratio.js
                    ├── dialog.js
                    ├── dispatchevent.js
                    ├── dnssec.js
                    ├── do-not-track.js
                    ├── document-currentscript.js
                    ├── document-evaluate-xpath.js
                    ├── document-execcommand.js
                    ├── document-policy.js
                    ├── document-scrollingelement.js
                    ├── documenthead.js
                    ├── dom-manip-convenience.js
                    ├── dom-range.js
                    ├── domcontentloaded.js
                    ├── dommatrix.js
                    ├── download.js
                    ├── dragndrop.js
                    ├── element-closest.js
                    ├── element-from-point.js
                    ├── element-scroll-methods.js
                    ├── eme.js
                    ├── eot.js
                    ├── es5.js
                    ├── es6-class.js
                    ├── es6-generators.js
                    ├── es6-module-dynamic-import.js
                    ├── es6-module.js
                    ├── es6-number.js
                    ├── es6-string-includes.js
                    ├── es6.js
                    ├── eventsource.js
                    ├── extended-system-fonts.js
                    ├── feature-policy.js
                    ├── fetch.js
                    ├── fieldset-disabled.js
                    ├── fileapi.js
                    ├── filereader.js
                    ├── filereadersync.js
                    ├── filesystem.js
                    ├── flac.js
                    ├── flexbox-gap.js
                    ├── flexbox.js
                    ├── flow-root.js
                    ├── focusin-focusout-events.js
                    ├── font-family-system-ui.js
                    ├── font-feature.js
                    ├── font-kerning.js
                    ├── font-loading.js
                    ├── font-size-adjust.js
                    ├── font-smooth.js
                    ├── font-unicode-range.js
                    ├── font-variant-alternates.js
                    ├── font-variant-numeric.js
                    ├── fontface.js
                    ├── form-attribute.js
                    ├── form-submit-attributes.js
                    ├── form-validation.js
                    ├── forms.js
                    ├── fullscreen.js
                    ├── gamepad.js
                    ├── geolocation.js
                    ├── getboundingclientrect.js
                    ├── getcomputedstyle.js
                    ├── getelementsbyclassname.js
                    ├── getrandomvalues.js
                    ├── gyroscope.js
                    ├── hardwareconcurrency.js
                    ├── hashchange.js
                    ├── heif.js
                    ├── hevc.js
                    ├── hidden.js
                    ├── high-resolution-time.js
                    ├── history.js
                    ├── html-media-capture.js
                    ├── html5semantic.js
                    ├── http-live-streaming.js
                    ├── http2.js
                    ├── http3.js
                    ├── iframe-sandbox.js
                    ├── iframe-seamless.js
                    ├── iframe-srcdoc.js
                    ├── imagecapture.js
                    ├── ime.js
                    ├── img-naturalwidth-naturalheight.js
                    ├── import-maps.js
                    ├── imports.js
                    ├── indeterminate-checkbox.js
                    ├── indexeddb.js
                    ├── indexeddb2.js
                    ├── inline-block.js
                    ├── innertext.js
                    ├── input-autocomplete-onoff.js
                    ├── input-color.js
                    ├── input-datetime.js
                    ├── input-email-tel-url.js
                    ├── input-event.js
                    ├── input-file-accept.js
                    ├── input-file-directory.js
                    ├── input-file-multiple.js
                    ├── input-inputmode.js
                    ├── input-minlength.js
                    ├── input-number.js
                    ├── input-pattern.js
                    ├── input-placeholder.js
                    ├── input-range.js
                    ├── input-search.js
                    ├── input-selection.js
                    ├── insert-adjacent.js
                    ├── insertadjacenthtml.js
                    ├── internationalization.js
                    ├── intersectionobserver-v2.js
                    ├── intersectionobserver.js
                    ├── intl-pluralrules.js
                    ├── intrinsic-width.js
                    ├── jpeg2000.js
                    ├── jpegxl.js
                    ├── jpegxr.js
                    ├── js-regexp-lookbehind.js
                    ├── json.js
                    ├── justify-content-space-evenly.js
                    ├── kerning-pairs-ligatures.js
                    ├── keyboardevent-charcode.js
                    ├── keyboardevent-code.js
                    ├── keyboardevent-getmodifierstate.js
                    ├── keyboardevent-key.js
                    ├── keyboardevent-location.js
                    ├── keyboardevent-which.js
                    ├── lazyload.js
                    ├── let.js
                    ├── link-icon-png.js
                    ├── link-icon-svg.js
                    ├── link-rel-dns-prefetch.js
                    ├── link-rel-modulepreload.js
                    ├── link-rel-preconnect.js
                    ├── link-rel-prefetch.js
                    ├── link-rel-preload.js
                    ├── link-rel-prerender.js
                    ├── loading-lazy-attr.js
                    ├── localecompare.js
                    ├── magnetometer.js
                    ├── matchesselector.js
                    ├── matchmedia.js
                    ├── mathml.js
                    ├── maxlength.js
                    ├── mdn-css-backdrop-pseudo-element.js
                    ├── mdn-css-unicode-bidi-isolate-override.js
                    ├── mdn-css-unicode-bidi-isolate.js
                    ├── mdn-css-unicode-bidi-plaintext.js
                    ├── mdn-text-decoration-color.js
                    ├── mdn-text-decoration-line.js
                    ├── mdn-text-decoration-shorthand.js
                    ├── mdn-text-decoration-style.js
                    ├── media-fragments.js
                    ├── mediacapture-fromelement.js
                    ├── mediarecorder.js
                    ├── mediasource.js
                    ├── menu.js
                    ├── meta-theme-color.js
                    ├── meter.js
                    ├── midi.js
                    ├── minmaxwh.js
                    ├── mp3.js
                    ├── mpeg-dash.js
                    ├── mpeg4.js
                    ├── multibackgrounds.js
                    ├── multicolumn.js
                    ├── mutation-events.js
                    ├── mutationobserver.js
                    ├── namevalue-storage.js
                    ├── native-filesystem-api.js
                    ├── nav-timing.js
                    ├── netinfo.js
                    ├── notifications.js
                    ├── object-entries.js
                    ├── object-fit.js
                    ├── object-observe.js
                    ├── object-values.js
                    ├── objectrtc.js
                    ├── offline-apps.js
                    ├── offscreencanvas.js
                    ├── ogg-vorbis.js
                    ├── ogv.js
                    ├── ol-reversed.js
                    ├── once-event-listener.js
                    ├── online-status.js
                    ├── opus.js
                    ├── orientation-sensor.js
                    ├── outline.js
                    ├── pad-start-end.js
                    ├── page-transition-events.js
                    ├── pagevisibility.js
                    ├── passive-event-listener.js
                    ├── passkeys.js
                    ├── passwordrules.js
                    ├── path2d.js
                    ├── payment-request.js
                    ├── pdf-viewer.js
                    ├── permissions-api.js
                    ├── permissions-policy.js
                    ├── picture-in-picture.js
                    ├── picture.js
                    ├── ping.js
                    ├── png-alpha.js
                    ├── pointer-events.js
                    ├── pointer.js
                    ├── pointerlock.js
                    ├── portals.js
                    ├── prefers-color-scheme.js
                    ├── prefers-reduced-motion.js
                    ├── progress.js
                    ├── promise-finally.js
                    ├── promises.js
                    ├── proximity.js
                    ├── proxy.js
                    ├── publickeypinning.js
                    ├── push-api.js
                    ├── queryselector.js
                    ├── readonly-attr.js
                    ├── referrer-policy.js
                    ├── registerprotocolhandler.js
                    ├── rel-noopener.js
                    ├── rel-noreferrer.js
                    ├── rellist.js
                    ├── rem.js
                    ├── requestanimationframe.js
                    ├── requestidlecallback.js
                    ├── resizeobserver.js
                    ├── resource-timing.js
                    ├── rest-parameters.js
                    ├── rtcpeerconnection.js
                    ├── ruby.js
                    ├── run-in.js
                    ├── same-site-cookie-attribute.js
                    ├── screen-orientation.js
                    ├── script-async.js
                    ├── script-defer.js
                    ├── scrollintoview.js
                    ├── scrollintoviewifneeded.js
                    ├── sdch.js
                    ├── selection-api.js
                    ├── selectlist.js
                    ├── server-timing.js
                    ├── serviceworkers.js
                    ├── setimmediate.js
                    ├── shadowdom.js
                    ├── shadowdomv1.js
                    ├── sharedarraybuffer.js
                    ├── sharedworkers.js
                    ├── sni.js
                    ├── spdy.js
                    ├── speech-recognition.js
                    ├── speech-synthesis.js
                    ├── spellcheck-attribute.js
                    ├── sql-storage.js
                    ├── srcset.js
                    ├── stream.js
                    ├── streams.js
                    ├── stricttransportsecurity.js
                    ├── style-scoped.js
                    ├── subresource-bundling.js
                    ├── subresource-integrity.js
                    ├── svg-css.js
                    ├── svg-filters.js
                    ├── svg-fonts.js
                    ├── svg-fragment.js
                    ├── svg-html.js
                    ├── svg-html5.js
                    ├── svg-img.js
                    ├── svg-smil.js
                    ├── svg.js
                    ├── sxg.js
                    ├── tabindex-attr.js
                    ├── template-literals.js
                    ├── template.js
                    ├── temporal.js
                    ├── testfeat.js
                    ├── text-decoration.js
                    ├── text-emphasis.js
                    ├── text-overflow.js
                    ├── text-size-adjust.js
                    ├── text-stroke.js
                    ├── textcontent.js
                    ├── textencoder.js
                    ├── tls1-1.js
                    ├── tls1-2.js
                    ├── tls1-3.js
                    ├── touch.js
                    ├── transforms2d.js
                    ├── transforms3d.js
                    ├── trusted-types.js
                    ├── ttf.js
                    ├── typedarrays.js
                    ├── u2f.js
                    ├── unhandledrejection.js
                    ├── upgradeinsecurerequests.js
                    ├── url-scroll-to-text-fragment.js
                    ├── url.js
                    ├── urlsearchparams.js
                    ├── use-strict.js
                    ├── user-select-none.js
                    ├── user-timing.js
                    ├── variable-fonts.js
                    ├── vector-effect.js
                    ├── vibration.js
                    ├── video.js
                    ├── videotracks.js
                    ├── view-transitions.js
                    ├── viewport-unit-variants.js
                    ├── viewport-units.js
                    ├── wai-aria.js
                    ├── wake-lock.js
                    ├── wasm-bigint.js
                    ├── wasm-bulk-memory.js
                    ├── wasm-extended-const.js
                    ├── wasm-gc.js
                    ├── wasm-multi-memory.js
                    ├── wasm-multi-value.js
                    ├── wasm-mutable-globals.js
                    ├── wasm-nontrapping-fptoint.js
                    ├── wasm-reference-types.js
                    ├── wasm-relaxed-simd.js
                    ├── wasm-signext.js
                    ├── wasm-simd.js
                    ├── wasm-tail-calls.js
                    ├── wasm-threads.js
                    ├── wasm.js
                    ├── wav.js
                    ├── wbr-element.js
                    ├── web-animation.js
                    ├── web-app-manifest.js
                    ├── web-bluetooth.js
                    ├── web-serial.js
                    ├── web-share.js
                    ├── webauthn.js
                    ├── webcodecs.js
                    ├── webgl.js
                    ├── webgl2.js
                    ├── webgpu.js
                    ├── webhid.js
                    ├── webkit-user-drag.js
                    ├── webm.js
                    ├── webnfc.js
                    ├── webp.js
                    ├── websockets.js
                    ├── webtransport.js
                    ├── webusb.js
                    ├── webvr.js
                    ├── webvtt.js
                    ├── webworkers.js
                    ├── webxr.js
                    ├── will-change.js
                    ├── woff.js
                    ├── woff2.js
                    ├── word-break.js
                    ├── wordwrap.js
                    ├── x-doc-messaging.js
                    ├── x-frame-options.js
                    ├── xhr2.js
                    ├── xhtml.js
                    ├── xhtmlsmil.js
                    ├── xml-serializer.js
                    └── zstd.js
                ├── features.js
                └── [regions]
                    ├── AD.js
                    ├── AE.js
                    ├── AF.js
                    ├── AG.js
                    ├── AI.js
                    ├── AL.js
                    ├── AM.js
                    ├── AO.js
                    ├── AR.js
                    ├── AS.js
                    ├── AT.js
                    ├── AU.js
                    ├── AW.js
                    ├── AX.js
                    ├── AZ.js
                    ├── BA.js
                    ├── BB.js
                    ├── BD.js
                    ├── BE.js
                    ├── BF.js
                    ├── BG.js
                    ├── BH.js
                    ├── BI.js
                    ├── BJ.js
                    ├── BM.js
                    ├── BN.js
                    ├── BO.js
                    ├── BR.js
                    ├── BS.js
                    ├── BT.js
                    ├── BW.js
                    ├── BY.js
                    ├── BZ.js
                    ├── CA.js
                    ├── CD.js
                    ├── CF.js
                    ├── CG.js
                    ├── CH.js
                    ├── CI.js
                    ├── CK.js
                    ├── CL.js
                    ├── CM.js
                    ├── CN.js
                    ├── CO.js
                    ├── CR.js
                    ├── CU.js
                    ├── CV.js
                    ├── CX.js
                    ├── CY.js
                    ├── CZ.js
                    ├── DE.js
                    ├── DJ.js
                    ├── DK.js
                    ├── DM.js
                    ├── DO.js
                    ├── DZ.js
                    ├── EC.js
                    ├── EE.js
                    ├── EG.js
                    ├── ER.js
                    ├── ES.js
                    ├── ET.js
                    ├── FI.js
                    ├── FJ.js
                    ├── FK.js
                    ├── FM.js
                    ├── FO.js
                    ├── FR.js
                    ├── GA.js
                    ├── GB.js
                    ├── GD.js
                    ├── GE.js
                    ├── GF.js
                    ├── GG.js
                    ├── GH.js
                    ├── GI.js
                    ├── GL.js
                    ├── GM.js
                    ├── GN.js
                    ├── GP.js
                    ├── GQ.js
                    ├── GR.js
                    ├── GT.js
                    ├── GU.js
                    ├── GW.js
                    ├── GY.js
                    ├── HK.js
                    ├── HN.js
                    ├── HR.js
                    ├── HT.js
                    ├── HU.js
                    ├── ID.js
                    ├── IE.js
                    ├── IL.js
                    ├── IM.js
                    ├── IN.js
                    ├── IQ.js
                    ├── IR.js
                    ├── IS.js
                    ├── IT.js
                    ├── JE.js
                    ├── JM.js
                    ├── JO.js
                    ├── JP.js
                    ├── KE.js
                    ├── KG.js
                    ├── KH.js
                    ├── KI.js
                    ├── KM.js
                    ├── KN.js
                    ├── KP.js
                    ├── KR.js
                    ├── KW.js
                    ├── KY.js
                    ├── KZ.js
                    ├── LA.js
                    ├── LB.js
                    ├── LC.js
                    ├── LI.js
                    ├── LK.js
                    ├── LR.js
                    ├── LS.js
                    ├── LT.js
                    ├── LU.js
                    ├── LV.js
                    ├── LY.js
                    ├── MA.js
                    ├── MC.js
                    ├── MD.js
                    ├── ME.js
                    ├── MG.js
                    ├── MH.js
                    ├── MK.js
                    ├── ML.js
                    ├── MM.js
                    ├── MN.js
                    ├── MO.js
                    ├── MP.js
                    ├── MQ.js
                    ├── MR.js
                    ├── MS.js
                    ├── MT.js
                    ├── MU.js
                    ├── MV.js
                    ├── MW.js
                    ├── MX.js
                    ├── MY.js
                    ├── MZ.js
                    ├── NA.js
                    ├── NC.js
                    ├── NE.js
                    ├── NF.js
                    ├── NG.js
                    ├── NI.js
                    ├── NL.js
                    ├── NO.js
                    ├── NP.js
                    ├── NR.js
                    ├── NU.js
                    ├── NZ.js
                    ├── OM.js
                    ├── PA.js
                    ├── PE.js
                    ├── PF.js
                    ├── PG.js
                    ├── PH.js
                    ├── PK.js
                    ├── PL.js
                    ├── PM.js
                    ├── PN.js
                    ├── PR.js
                    ├── PS.js
                    ├── PT.js
                    ├── PW.js
                    ├── PY.js
                    ├── QA.js
                    ├── RE.js
                    ├── RO.js
                    ├── RS.js
                    ├── RU.js
                    ├── RW.js
                    ├── SA.js
                    ├── SB.js
                    ├── SC.js
                    ├── SD.js
                    ├── SE.js
                    ├── SG.js
                    ├── SH.js
                    ├── SI.js
                    ├── SK.js
                    ├── SL.js
                    ├── SM.js
                    ├── SN.js
                    ├── SO.js
                    ├── SR.js
                    ├── ST.js
                    ├── SV.js
                    ├── SY.js
                    ├── SZ.js
                    ├── TC.js
                    ├── TD.js
                    ├── TG.js
                    ├── TH.js
                    ├── TJ.js
                    ├── TL.js
                    ├── TM.js
                    ├── TN.js
                    ├── TO.js
                    ├── TR.js
                    ├── TT.js
                    ├── TV.js
                    ├── TW.js
                    ├── TZ.js
                    ├── UA.js
                    ├── UG.js
                    ├── US.js
                    ├── UY.js
                    ├── UZ.js
                    ├── VA.js
                    ├── VC.js
                    ├── VE.js
                    ├── VG.js
                    ├── VI.js
                    ├── VN.js
                    ├── VU.js
                    ├── WF.js
                    ├── WS.js
                    ├── YE.js
                    ├── YT.js
                    ├── ZA.js
                    ├── ZM.js
                    ├── ZW.js
                    ├── alt-af.js
                    ├── alt-an.js
                    ├── alt-as.js
                    ├── alt-eu.js
                    ├── alt-na.js
                    ├── alt-oc.js
                    ├── alt-sa.js
                    └── alt-ww.js
            ├── [dist]
                ├── [lib]
                    ├── statuses.js
                    └── supported.js
                └── [unpacker]
                    ├── agents.js
                    ├── browserVersions.js
                    ├── browsers.js
                    ├── feature.js
                    ├── features.js
                    ├── index.js
                    └── region.js
            └── package.json
        ├── [chalk]
            ├── index.d.ts
            ├── license
            ├── package.json
            ├── readme.md
            └── [source]
                ├── index.js
                ├── templates.js
                └── util.js
        ├── [char-regex]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [chokidar]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── constants.js
                ├── fsevents-handler.js
                └── nodefs-handler.js
            ├── [node_modules]
                └── [glob-parent]
                    ├── CHANGELOG.md
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    └── package.json
            ├── package.json
            └── [types]
                └── index.d.ts
        ├── [chownr]
            ├── LICENSE
            ├── README.md
            ├── chownr.js
            └── package.json
        ├── [ci-info]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── vendors.json
        ├── [cjs-module-lexer]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── lexer.js
                └── lexer.mjs
            ├── lexer.d.ts
            ├── lexer.js
            └── package.json
        ├── [cli-cursor]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [cli-truncate]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [cliui]
            ├── CHANGELOG.md
            ├── LICENSE.txt
            ├── README.md
            ├── [build]
                ├── index.cjs
                ├── index.d.cts
                └── [lib]
                    ├── index.js
                    └── string-utils.js
            ├── index.mjs
            ├── [node_modules]
                ├── [emoji-regex]
                    ├── LICENSE-MIT.txt
                    ├── README.md
                    ├── [es2015]
                        ├── index.js
                        └── text.js
                    ├── index.d.ts
                    ├── index.js
                    ├── package.json
                    └── text.js
                ├── [is-fullwidth-code-point]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [string-width]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [wrap-ansi]
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [co]
            ├── History.md
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            └── package.json
        ├── [collect-v8-coverage]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [color]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                ├── [color-convert]
                    ├── CHANGELOG.md
                    ├── LICENSE
                    ├── README.md
                    ├── conversions.js
                    ├── index.js
                    ├── package.json
                    └── route.js
                └── [color-name]
                    ├── .eslintrc.json
                    ├── .npmignore
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    ├── package.json
                    └── test.js
            └── package.json
        ├── [color-convert]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── conversions.js
            ├── index.js
            ├── package.json
            └── route.js
        ├── [color-name]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [color-string]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [color-support]
            ├── LICENSE
            ├── README.md
            ├── bin.js
            ├── browser.js
            ├── index.js
            └── package.json
        ├── [colorette]
            ├── LICENSE.md
            ├── README.md
            ├── index.cjs
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [colorspace]
            ├── LICENSE.md
            ├── README.md
            ├── index.js
            └── package.json
        ├── [combined-stream]
            ├── License
            ├── Readme.md
            ├── [lib]
                └── combined_stream.js
            ├── package.json
        ├── [commander]
            ├── LICENSE
            ├── Readme.md
            ├── esm.mjs
            ├── index.js
            ├── [lib]
                ├── argument.js
                ├── command.js
                ├── error.js
                ├── help.js
                ├── option.js
                └── suggestSimilar.js
            ├── package-support.json
            ├── package.json
            └── [typings]
                ├── esm.d.mts
                └── index.d.ts
        ├── [component-emitter]
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            └── package.json
        ├── [compressible]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [compression]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [concat-map]
            ├── .travis.yml
            ├── LICENSE
            ├── README.markdown
            ├── [example]
                └── map.js
            ├── index.js
            ├── package.json
            └── [test]
                └── map.js
        ├── [console-control-strings]
            ├── LICENSE
            ├── README.md
            ├── README.md~
            ├── index.js
            └── package.json
        ├── [content-disposition]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [content-type]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [convert-source-map]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [cookie]
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.js
            └── package.json
        ├── [cookie-signature]
            ├── .npmignore
            ├── History.md
            ├── Readme.md
            ├── index.js
            └── package.json
        ├── [cookiejar]
            ├── LICENSE
            ├── cookiejar.js
            ├── package.json
            └── readme.md
        ├── [cors]
            ├── CONTRIBUTING.md
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── [lib]
                └── index.js
            └── package.json
        ├── [create-jest]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── create-jest.js
            ├── [build]
                ├── errors.js
                ├── generateConfigFile.js
                ├── index.d.ts
                ├── index.js
                ├── modifyPackageJson.js
                ├── questions.js
                ├── runCreate.js
                └── types.js
            └── package.json
        ├── [cross-spawn]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── enoent.js
                ├── parse.js
                └── [util]
                    ├── escape.js
                    ├── readShebang.js
                    └── resolveCommand.js
            └── package.json
        ├── [debug]
            ├── .coveralls.yml
            ├── .eslintrc
            ├── .npmignore
            ├── .travis.yml
            ├── CHANGELOG.md
            ├── LICENSE
            ├── Makefile
            ├── README.md
            ├── component.json
            ├── karma.conf.js
            ├── node.js
            ├── package.json
            └── [src]
                ├── browser.js
                ├── debug.js
                ├── index.js
                ├── inspector-log.js
                └── node.js
        ├── [dedent]
            ├── LICENSE.md
            ├── README.md
            ├── [dist]
                ├── dedent.d.mts
                ├── dedent.d.ts
                ├── dedent.js
                └── dedent.mjs
            ├── macro.js
            └── package.json
        ├── [deep-is]
            ├── .travis.yml
            ├── LICENSE
            ├── README.markdown
            ├── [example]
                └── cmp.js
            ├── index.js
            ├── package.json
            └── [test]
                ├── NaN.js
                ├── cmp.js
                └── neg-vs-pos-0.js
        ├── [deepmerge]
            ├── .editorconfig
            ├── .eslintcache
            ├── changelog.md
            ├── [dist]
                ├── cjs.js
                └── umd.js
            ├── index.d.ts
            ├── index.js
            ├── license.txt
            ├── package.json
            ├── readme.md
            └── rollup.config.js
        ├── [delayed-stream]
            ├── .npmignore
            ├── License
            ├── Makefile
            ├── Readme.md
            ├── [lib]
                └── delayed_stream.js
            └── package.json
        ├── [delegates]
            ├── .npmignore
            ├── History.md
            ├── License
            ├── Makefile
            ├── Readme.md
            ├── index.js
            ├── package.json
            └── [test]
                └── index.js
        ├── [depd]
            ├── History.md
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            ├── [lib]
                └── [browser]
                    └── index.js
            └── package.json
        ├── [destroy]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [detect-libc]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── [lib]
                ├── detect-libc.js
                ├── filesystem.js
                └── process.js
            └── package.json
        ├── [detect-newline]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [dezalgo]
            ├── LICENSE
            ├── README.md
            ├── dezalgo.js
            └── package.json
        ├── [diff-sequences]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [dir-glob]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [doctrine]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── LICENSE.closure-compiler
            ├── LICENSE.esprima
            ├── README.md
            ├── [lib]
                ├── doctrine.js
                ├── typed.js
                └── utility.js
            └── package.json
        ├── [dotenv]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README-es.md
            ├── README.md
            ├── config.d.ts
            ├── config.js
            ├── [lib]
                ├── cli-options.js
                ├── env-options.js
                ├── main.d.ts
                └── main.js
            └── package.json
        ├── [dunder-proto]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── get.d.ts
            ├── get.js
            ├── package.json
            ├── set.d.ts
            ├── set.js
            ├── [test]
                ├── get.js
                ├── index.js
                └── set.js
            └── tsconfig.json
        ├── [ecdsa-sig-formatter]
            ├── CODEOWNERS
            ├── LICENSE
            ├── README.md
            ├── package.json
            └── [src]
                ├── ecdsa-sig-formatter.d.ts
                ├── ecdsa-sig-formatter.js
                └── param-bytes-for-alg.js
        ├── [ee-first]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [electron-to-chromium]
            ├── LICENSE
            ├── README.md
            ├── chromium-versions.js
            ├── chromium-versions.json
            ├── full-chromium-versions.js
            ├── full-chromium-versions.json
            ├── full-versions.js
            ├── full-versions.json
            ├── index.js
            ├── package.json
            ├── versions.js
            └── versions.json
        ├── [emittery]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── maps.js
            ├── package.json
            └── readme.md
        ├── [emoji-regex]
            ├── LICENSE-MIT.txt
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── index.mjs
            └── package.json
        ├── [enabled]
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [encodeurl]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [environment]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [error-ex]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [es-define-property]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [es-errors]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── eval.d.ts
            ├── eval.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── range.d.ts
            ├── range.js
            ├── ref.d.ts
            ├── ref.js
            ├── syntax.d.ts
            ├── syntax.js
            ├── [test]
                └── index.js
            ├── tsconfig.json
            ├── type.d.ts
            ├── type.js
            ├── uri.d.ts
            └── uri.js
        ├── [es-object-atoms]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── RequireObjectCoercible.d.ts
            ├── RequireObjectCoercible.js
            ├── ToObject.d.ts
            ├── ToObject.js
            ├── index.d.ts
            ├── index.js
            ├── isObject.d.ts
            ├── isObject.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [es-set-tostringtag]
            ├── .eslintrc
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [escalade]
            ├── [dist]
                ├── index.js
                └── index.mjs
            ├── index.d.mts
            ├── index.d.ts
            ├── license
            ├── package.json
            ├── readme.md
            └── [sync]
                ├── index.d.mts
                ├── index.d.ts
                ├── index.js
                └── index.mjs
        ├── [escape-html]
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            └── package.json
        ├── [escape-string-regexp]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [eslint]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── eslint.js
            ├── [conf]
                ├── config-schema.js
                ├── default-cli-options.js
                ├── globals.js
                ├── replacements.json
                └── rule-type-list.json
            ├── [lib]
                ├── api.js
                ├── [cli-engine]
                    ├── cli-engine.js
                    ├── file-enumerator.js
                    ├── [formatters]
                        ├── checkstyle.js
                        ├── compact.js
                        ├── formatters-meta.json
                        ├── html.js
                        ├── jslint-xml.js
                        ├── json-with-metadata.js
                        ├── json.js
                        ├── junit.js
                        ├── stylish.js
                        ├── tap.js
                        ├── unix.js
                        └── visualstudio.js
                    ├── hash.js
                    ├── index.js
                    ├── lint-result-cache.js
                    ├── load-rules.js
                    └── xml-escape.js
                ├── cli.js
                ├── [config]
                    ├── default-config.js
                    ├── flat-config-array.js
                    ├── flat-config-helpers.js
                    ├── flat-config-schema.js
                    └── rule-validator.js
                ├── [eslint]
                    ├── eslint-helpers.js
                    ├── eslint.js
                    ├── flat-eslint.js
                    └── index.js
                ├── [linter]
                    ├── apply-disable-directives.js
                    ├── [code-path-analysis]
                        ├── code-path-analyzer.js
                        ├── code-path-segment.js
                        ├── code-path-state.js
                        ├── code-path.js
                        ├── debug-helpers.js
                        ├── fork-context.js
                        └── id-generator.js
                    ├── config-comment-parser.js
                    ├── index.js
                    ├── interpolate.js
                    ├── linter.js
                    ├── node-event-generator.js
                    ├── report-translator.js
                    ├── rule-fixer.js
                    ├── rules.js
                    ├── safe-emitter.js
                    ├── source-code-fixer.js
                    └── timing.js
                ├── options.js
                ├── [rule-tester]
                    ├── flat-rule-tester.js
                    ├── index.js
                    └── rule-tester.js
                ├── [rules]
                    ├── accessor-pairs.js
                    ├── array-bracket-newline.js
                    ├── array-bracket-spacing.js
                    ├── array-callback-return.js
                    ├── array-element-newline.js
                    ├── arrow-body-style.js
                    ├── arrow-parens.js
                    ├── arrow-spacing.js
                    ├── block-scoped-var.js
                    ├── block-spacing.js
                    ├── brace-style.js
                    ├── callback-return.js
                    ├── camelcase.js
                    ├── capitalized-comments.js
                    ├── class-methods-use-this.js
                    ├── comma-dangle.js
                    ├── comma-spacing.js
                    ├── comma-style.js
                    ├── complexity.js
                    ├── computed-property-spacing.js
                    ├── consistent-return.js
                    ├── consistent-this.js
                    ├── constructor-super.js
                    ├── curly.js
                    ├── default-case-last.js
                    ├── default-case.js
                    ├── default-param-last.js
                    ├── dot-location.js
                    ├── dot-notation.js
                    ├── eol-last.js
                    ├── eqeqeq.js
                    ├── for-direction.js
                    ├── func-call-spacing.js
                    ├── func-name-matching.js
                    ├── func-names.js
                    ├── func-style.js
                    ├── function-call-argument-newline.js
                    ├── function-paren-newline.js
                    ├── generator-star-spacing.js
                    ├── getter-return.js
                    ├── global-require.js
                    ├── grouped-accessor-pairs.js
                    ├── guard-for-in.js
                    ├── handle-callback-err.js
                    ├── id-blacklist.js
                    ├── id-denylist.js
                    ├── id-length.js
                    ├── id-match.js
                    ├── implicit-arrow-linebreak.js
                    ├── indent-legacy.js
                    ├── indent.js
                    ├── index.js
                    ├── init-declarations.js
                    ├── jsx-quotes.js
                    ├── key-spacing.js
                    ├── keyword-spacing.js
                    ├── line-comment-position.js
                    ├── linebreak-style.js
                    ├── lines-around-comment.js
                    ├── lines-around-directive.js
                    ├── lines-between-class-members.js
                    ├── logical-assignment-operators.js
                    ├── max-classes-per-file.js
                    ├── max-depth.js
                    ├── max-len.js
                    ├── max-lines-per-function.js
                    ├── max-lines.js
                    ├── max-nested-callbacks.js
                    ├── max-params.js
                    ├── max-statements-per-line.js
                    ├── max-statements.js
                    ├── multiline-comment-style.js
                    ├── multiline-ternary.js
                    ├── new-cap.js
                    ├── new-parens.js
                    ├── newline-after-var.js
                    ├── newline-before-return.js
                    ├── newline-per-chained-call.js
                    ├── no-alert.js
                    ├── no-array-constructor.js
                    ├── no-async-promise-executor.js
                    ├── no-await-in-loop.js
                    ├── no-bitwise.js
                    ├── no-buffer-constructor.js
                    ├── no-caller.js
                    ├── no-case-declarations.js
                    ├── no-catch-shadow.js
                    ├── no-class-assign.js
                    ├── no-compare-neg-zero.js
                    ├── no-cond-assign.js
                    ├── no-confusing-arrow.js
                    ├── no-console.js
                    ├── no-const-assign.js
                    ├── no-constant-binary-expression.js
                    ├── no-constant-condition.js
                    ├── no-constructor-return.js
                    ├── no-continue.js
                    ├── no-control-regex.js
                    ├── no-debugger.js
                    ├── no-delete-var.js
                    ├── no-div-regex.js
                    ├── no-dupe-args.js
                    ├── no-dupe-class-members.js
                    ├── no-dupe-else-if.js
                    ├── no-dupe-keys.js
                    ├── no-duplicate-case.js
                    ├── no-duplicate-imports.js
                    ├── no-else-return.js
                    ├── no-empty-character-class.js
                    ├── no-empty-function.js
                    ├── no-empty-pattern.js
                    ├── no-empty-static-block.js
                    ├── no-empty.js
                    ├── no-eq-null.js
                    ├── no-eval.js
                    ├── no-ex-assign.js
                    ├── no-extend-native.js
                    ├── no-extra-bind.js
                    ├── no-extra-boolean-cast.js
                    ├── no-extra-label.js
                    ├── no-extra-parens.js
                    ├── no-extra-semi.js
                    ├── no-fallthrough.js
                    ├── no-floating-decimal.js
                    ├── no-func-assign.js
                    ├── no-global-assign.js
                    ├── no-implicit-coercion.js
                    ├── no-implicit-globals.js
                    ├── no-implied-eval.js
                    ├── no-import-assign.js
                    ├── no-inline-comments.js
                    ├── no-inner-declarations.js
                    ├── no-invalid-regexp.js
                    ├── no-invalid-this.js
                    ├── no-irregular-whitespace.js
                    ├── no-iterator.js
                    ├── no-label-var.js
                    ├── no-labels.js
                    ├── no-lone-blocks.js
                    ├── no-lonely-if.js
                    ├── no-loop-func.js
                    ├── no-loss-of-precision.js
                    ├── no-magic-numbers.js
                    ├── no-misleading-character-class.js
                    ├── no-mixed-operators.js
                    ├── no-mixed-requires.js
                    ├── no-mixed-spaces-and-tabs.js
                    ├── no-multi-assign.js
                    ├── no-multi-spaces.js
                    ├── no-multi-str.js
                    ├── no-multiple-empty-lines.js
                    ├── no-native-reassign.js
                    ├── no-negated-condition.js
                    ├── no-negated-in-lhs.js
                    ├── no-nested-ternary.js
                    ├── no-new-func.js
                    ├── no-new-native-nonconstructor.js
                    ├── no-new-object.js
                    ├── no-new-require.js
                    ├── no-new-symbol.js
                    ├── no-new-wrappers.js
                    ├── no-new.js
                    ├── no-nonoctal-decimal-escape.js
                    ├── no-obj-calls.js
                    ├── no-object-constructor.js
                    ├── no-octal-escape.js
                    ├── no-octal.js
                    ├── no-param-reassign.js
                    ├── no-path-concat.js
                    ├── no-plusplus.js
                    ├── no-process-env.js
                    ├── no-process-exit.js
                    ├── no-promise-executor-return.js
                    ├── no-proto.js
                    ├── no-prototype-builtins.js
                    ├── no-redeclare.js
                    ├── no-regex-spaces.js
                    ├── no-restricted-exports.js
                    ├── no-restricted-globals.js
                    ├── no-restricted-imports.js
                    ├── no-restricted-modules.js
                    ├── no-restricted-properties.js
                    ├── no-restricted-syntax.js
                    ├── no-return-assign.js
                    ├── no-return-await.js
                    ├── no-script-url.js
                    ├── no-self-assign.js
                    ├── no-self-compare.js
                    ├── no-sequences.js
                    ├── no-setter-return.js
                    ├── no-shadow-restricted-names.js
                    ├── no-shadow.js
                    ├── no-spaced-func.js
                    ├── no-sparse-arrays.js
                    ├── no-sync.js
                    ├── no-tabs.js
                    ├── no-template-curly-in-string.js
                    ├── no-ternary.js
                    ├── no-this-before-super.js
                    ├── no-throw-literal.js
                    ├── no-trailing-spaces.js
                    ├── no-undef-init.js
                    ├── no-undef.js
                    ├── no-undefined.js
                    ├── no-underscore-dangle.js
                    ├── no-unexpected-multiline.js
                    ├── no-unmodified-loop-condition.js
                    ├── no-unneeded-ternary.js
                    ├── no-unreachable-loop.js
                    ├── no-unreachable.js
                    ├── no-unsafe-finally.js
                    ├── no-unsafe-negation.js
                    ├── no-unsafe-optional-chaining.js
                    ├── no-unused-expressions.js
                    ├── no-unused-labels.js
                    ├── no-unused-private-class-members.js
                    ├── no-unused-vars.js
                    ├── no-use-before-define.js
                    ├── no-useless-backreference.js
                    ├── no-useless-call.js
                    ├── no-useless-catch.js
                    ├── no-useless-computed-key.js
                    ├── no-useless-concat.js
                    ├── no-useless-constructor.js
                    ├── no-useless-escape.js
                    ├── no-useless-rename.js
                    ├── no-useless-return.js
                    ├── no-var.js
                    ├── no-void.js
                    ├── no-warning-comments.js
                    ├── no-whitespace-before-property.js
                    ├── no-with.js
                    ├── nonblock-statement-body-position.js
                    ├── object-curly-newline.js
                    ├── object-curly-spacing.js
                    ├── object-property-newline.js
                    ├── object-shorthand.js
                    ├── one-var-declaration-per-line.js
                    ├── one-var.js
                    ├── operator-assignment.js
                    ├── operator-linebreak.js
                    ├── padded-blocks.js
                    ├── padding-line-between-statements.js
                    ├── prefer-arrow-callback.js
                    ├── prefer-const.js
                    ├── prefer-destructuring.js
                    ├── prefer-exponentiation-operator.js
                    ├── prefer-named-capture-group.js
                    ├── prefer-numeric-literals.js
                    ├── prefer-object-has-own.js
                    ├── prefer-object-spread.js
                    ├── prefer-promise-reject-errors.js
                    ├── prefer-reflect.js
                    ├── prefer-regex-literals.js
                    ├── prefer-rest-params.js
                    ├── prefer-spread.js
                    ├── prefer-template.js
                    ├── quote-props.js
                    ├── quotes.js
                    ├── radix.js
                    ├── require-atomic-updates.js
                    ├── require-await.js
                    ├── require-jsdoc.js
                    ├── require-unicode-regexp.js
                    ├── require-yield.js
                    ├── rest-spread-spacing.js
                    ├── semi-spacing.js
                    ├── semi-style.js
                    ├── semi.js
                    ├── sort-imports.js
                    ├── sort-keys.js
                    ├── sort-vars.js
                    ├── space-before-blocks.js
                    ├── space-before-function-paren.js
                    ├── space-in-parens.js
                    ├── space-infix-ops.js
                    ├── space-unary-ops.js
                    ├── spaced-comment.js
                    ├── strict.js
                    ├── switch-colon-spacing.js
                    ├── symbol-description.js
                    ├── template-curly-spacing.js
                    ├── template-tag-spacing.js
                    ├── unicode-bom.js
                    ├── use-isnan.js
                    ├── [utils]
                        ├── ast-utils.js
                        ├── fix-tracker.js
                        ├── keywords.js
                        ├── lazy-loading-rule-map.js
                        ├── [patterns]
                            └── letters.js
                        ├── regular-expressions.js
                        └── [unicode]
                            ├── index.js
                            ├── is-combining-character.js
                            ├── is-emoji-modifier.js
                            ├── is-regional-indicator-symbol.js
                            └── is-surrogate-pair.js
                    ├── valid-jsdoc.js
                    ├── valid-typeof.js
                    ├── vars-on-top.js
                    ├── wrap-iife.js
                    ├── wrap-regex.js
                    ├── yield-star-spacing.js
                    └── yoda.js
                ├── [shared]
                    ├── ajv.js
                    ├── ast-utils.js
                    ├── config-validator.js
                    ├── deprecation-warnings.js
                    ├── directives.js
                    ├── logging.js
                    ├── relative-module-resolver.js
                    ├── runtime-info.js
                    ├── severity.js
                    ├── string-utils.js
                    ├── traverser.js
                    └── types.js
                ├── [source-code]
                    ├── index.js
                    ├── source-code.js
                    └── [token-store]
                        ├── backward-token-comment-cursor.js
                        ├── backward-token-cursor.js
                        ├── cursor.js
                        ├── cursors.js
                        ├── decorative-cursor.js
                        ├── filter-cursor.js
                        ├── forward-token-comment-cursor.js
                        ├── forward-token-cursor.js
                        ├── index.js
                        ├── limit-cursor.js
                        ├── padded-token-cursor.js
                        ├── skip-cursor.js
                        └── utils.js
                └── unsupported-api.js
            ├── [messages]
                ├── all-files-ignored.js
                ├── eslintrc-incompat.js
                ├── eslintrc-plugins.js
                ├── extend-config-missing.js
                ├── failed-to-read-json.js
                ├── file-not-found.js
                ├── invalid-rule-options.js
                ├── invalid-rule-severity.js
                ├── no-config-found.js
                ├── plugin-conflict.js
                ├── plugin-invalid.js
                ├── plugin-missing.js
                ├── print-config-with-directory-path.js
                ├── shared.js
                └── whitespace-found.js
            ├── [node_modules]
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [eslint-config-prettier]
            ├── @typescript-eslint.js
            ├── LICENSE
            ├── README.md
            ├── babel.js
            ├── [bin]
                ├── cli.js
                └── validators.js
            ├── flowtype.js
            ├── index.js
            ├── package.json
            ├── prettier.js
            ├── react.js
            ├── standard.js
            ├── unicorn.js
            └── vue.js
        ├── [eslint-plugin-es]
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── index.js
                ├── [rules]
                    ├── no-accessor-properties.js
                    ├── no-array-from.js
                    ├── no-array-isarray.js
                    ├── no-array-of.js
                    ├── no-arrow-functions.js
                    ├── no-async-functions.js
                    ├── no-async-iteration.js
                    ├── no-atomics.js
                    ├── no-bigint.js
                    ├── no-binary-numeric-literals.js
                    ├── no-block-scoped-functions.js
                    ├── no-block-scoped-variables.js
                    ├── no-classes.js
                    ├── no-computed-properties.js
                    ├── no-date-now.js
                    ├── no-default-parameters.js
                    ├── no-destructuring.js
                    ├── no-dynamic-import.js
                    ├── no-exponential-operators.js
                    ├── no-for-of-loops.js
                    ├── no-generators.js
                    ├── no-global-this.js
                    ├── no-json-superset.js
                    ├── no-json.js
                    ├── no-keyword-properties.js
                    ├── no-malformed-template-literals.js
                    ├── no-map.js
                    ├── no-math-acosh.js
                    ├── no-math-asinh.js
                    ├── no-math-atanh.js
                    ├── no-math-cbrt.js
                    ├── no-math-clz32.js
                    ├── no-math-cosh.js
                    ├── no-math-expm1.js
                    ├── no-math-fround.js
                    ├── no-math-hypot.js
                    ├── no-math-imul.js
                    ├── no-math-log10.js
                    ├── no-math-log1p.js
                    ├── no-math-log2.js
                    ├── no-math-sign.js
                    ├── no-math-sinh.js
                    ├── no-math-tanh.js
                    ├── no-math-trunc.js
                    ├── no-modules.js
                    ├── no-new-target.js
                    ├── no-number-epsilon.js
                    ├── no-number-isfinite.js
                    ├── no-number-isinteger.js
                    ├── no-number-isnan.js
                    ├── no-number-issafeinteger.js
                    ├── no-number-maxsafeinteger.js
                    ├── no-number-minsafeinteger.js
                    ├── no-number-parsefloat.js
                    ├── no-number-parseint.js
                    ├── no-object-assign.js
                    ├── no-object-defineproperties.js
                    ├── no-object-defineproperty.js
                    ├── no-object-entries.js
                    ├── no-object-freeze.js
                    ├── no-object-getownpropertydescriptor.js
                    ├── no-object-getownpropertydescriptors.js
                    ├── no-object-getownpropertynames.js
                    ├── no-object-getownpropertysymbols.js
                    ├── no-object-getprototypeof.js
                    ├── no-object-is.js
                    ├── no-object-isextensible.js
                    ├── no-object-isfrozen.js
                    ├── no-object-issealed.js
                    ├── no-object-keys.js
                    ├── no-object-preventextensions.js
                    ├── no-object-seal.js
                    ├── no-object-setprototypeof.js
                    ├── no-object-super-properties.js
                    ├── no-object-values.js
                    ├── no-octal-numeric-literals.js
                    ├── no-optional-catch-binding.js
                    ├── no-promise-all-settled.js
                    ├── no-promise.js
                    ├── no-property-shorthands.js
                    ├── no-proxy.js
                    ├── no-reflect.js
                    ├── no-regexp-lookbehind-assertions.js
                    ├── no-regexp-named-capture-groups.js
                    ├── no-regexp-s-flag.js
                    ├── no-regexp-u-flag.js
                    ├── no-regexp-unicode-property-escapes-2019.js
                    ├── no-regexp-unicode-property-escapes.js
                    ├── no-regexp-y-flag.js
                    ├── no-rest-parameters.js
                    ├── no-rest-spread-properties.js
                    ├── no-set.js
                    ├── no-shared-array-buffer.js
                    ├── no-spread-elements.js
                    ├── no-string-fromcodepoint.js
                    ├── no-string-raw.js
                    ├── no-subclassing-builtins.js
                    ├── no-symbol.js
                    ├── no-template-literals.js
                    ├── no-trailing-commas.js
                    ├── no-trailing-function-commas.js
                    ├── no-typed-arrays.js
                    ├── no-unicode-codepoint-escapes.js
                    ├── no-weak-map.js
                    └── no-weak-set.js
                └── utils.js
            └── package.json
        ├── [eslint-plugin-jest]
            ├── LICENSE
            ├── README.md
            ├── [docs]
                └── [rules]
                    ├── consistent-test-it.md
                    ├── expect-expect.md
                    ├── max-expects.md
                    ├── max-nested-describe.md
                    ├── no-alias-methods.md
                    ├── no-commented-out-tests.md
                    ├── no-conditional-expect.md
                    ├── no-conditional-in-test.md
                    ├── no-confusing-set-timeout.md
                    ├── no-deprecated-functions.md
                    ├── no-disabled-tests.md
                    ├── no-done-callback.md
                    ├── no-duplicate-hooks.md
                    ├── no-export.md
                    ├── no-focused-tests.md
                    ├── no-hooks.md
                    ├── no-identical-title.md
                    ├── no-if.md
                    ├── no-interpolation-in-snapshots.md
                    ├── no-jasmine-globals.md
                    ├── no-large-snapshots.md
                    ├── no-mocks-import.md
                    ├── no-restricted-jest-methods.md
                    ├── no-restricted-matchers.md
                    ├── no-standalone-expect.md
                    ├── no-test-prefixes.md
                    ├── no-test-return-statement.md
                    ├── no-untyped-mock-factory.md
                    ├── prefer-called-with.md
                    ├── prefer-comparison-matcher.md
                    ├── prefer-each.md
                    ├── prefer-equality-matcher.md
                    ├── prefer-expect-assertions.md
                    ├── prefer-expect-resolves.md
                    ├── prefer-hooks-in-order.md
                    ├── prefer-hooks-on-top.md
                    ├── prefer-lowercase-title.md
                    ├── prefer-mock-promise-shorthand.md
                    ├── prefer-snapshot-hint.md
                    ├── prefer-spy-on.md
                    ├── prefer-strict-equal.md
                    ├── prefer-to-be.md
                    ├── prefer-to-contain.md
                    ├── prefer-to-have-length.md
                    ├── prefer-todo.md
                    ├── require-hook.md
                    ├── require-to-throw-message.md
                    ├── require-top-level-describe.md
                    ├── unbound-method.md
                    ├── valid-describe-callback.md
                    ├── valid-expect-in-promise.md
                    ├── valid-expect.md
                    └── valid-title.md
            ├── [lib]
                ├── globals.json
                ├── index.js
                ├── [processors]
                    └── snapshot-processor.js
                └── [rules]
                    ├── consistent-test-it.js
                    ├── expect-expect.js
                    ├── max-expects.js
                    ├── max-nested-describe.js
                    ├── no-alias-methods.js
                    ├── no-commented-out-tests.js
                    ├── no-conditional-expect.js
                    ├── no-conditional-in-test.js
                    ├── no-confusing-set-timeout.js
                    ├── no-deprecated-functions.js
                    ├── no-disabled-tests.js
                    ├── no-done-callback.js
                    ├── no-duplicate-hooks.js
                    ├── no-export.js
                    ├── no-focused-tests.js
                    ├── no-hooks.js
                    ├── no-identical-title.js
                    ├── no-if.js
                    ├── no-interpolation-in-snapshots.js
                    ├── no-jasmine-globals.js
                    ├── no-large-snapshots.js
                    ├── no-mocks-import.js
                    ├── no-restricted-jest-methods.js
                    ├── no-restricted-matchers.js
                    ├── no-standalone-expect.js
                    ├── no-test-prefixes.js
                    ├── no-test-return-statement.js
                    ├── no-untyped-mock-factory.js
                    ├── prefer-called-with.js
                    ├── prefer-comparison-matcher.js
                    ├── prefer-each.js
                    ├── prefer-equality-matcher.js
                    ├── prefer-expect-assertions.js
                    ├── prefer-expect-resolves.js
                    ├── prefer-hooks-in-order.js
                    ├── prefer-hooks-on-top.js
                    ├── prefer-lowercase-title.js
                    ├── prefer-mock-promise-shorthand.js
                    ├── prefer-snapshot-hint.js
                    ├── prefer-spy-on.js
                    ├── prefer-strict-equal.js
                    ├── prefer-to-be.js
                    ├── prefer-to-contain.js
                    ├── prefer-to-have-length.js
                    ├── prefer-todo.js
                    ├── require-hook.js
                    ├── require-to-throw-message.js
                    ├── require-top-level-describe.js
                    ├── unbound-method.js
                    ├── [utils]
                        ├── accessors.js
                        ├── detectJestVersion.js
                        ├── followTypeAssertionChain.js
                        ├── index.js
                        ├── misc.js
                        └── parseJestFnCall.js
                    ├── valid-describe-callback.js
                    ├── valid-expect-in-promise.js
                    ├── valid-expect.js
                    └── valid-title.js
            └── package.json
        ├── [eslint-plugin-node]
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── [configs]
                    ├── _commons.js
                    ├── recommended-module.js
                    ├── recommended-script.js
                    └── recommended.js
                ├── index.js
                ├── [rules]
                    ├── callback-return.js
                    ├── exports-style.js
                    ├── file-extension-in-import.js
                    ├── global-require.js
                    ├── handle-callback-err.js
                    ├── no-callback-literal.js
                    ├── no-deprecated-api.js
                    ├── no-exports-assign.js
                    ├── no-extraneous-import.js
                    ├── no-extraneous-require.js
                    ├── no-hide-core-modules.js
                    ├── no-missing-import.js
                    ├── no-missing-require.js
                    ├── no-mixed-requires.js
                    ├── no-new-require.js
                    ├── no-path-concat.js
                    ├── no-process-env.js
                    ├── no-process-exit.js
                    ├── no-restricted-import.js
                    ├── no-restricted-require.js
                    ├── no-sync.js
                    ├── no-unpublished-bin.js
                    ├── no-unpublished-import.js
                    ├── no-unpublished-require.js
                    ├── [no-unsupported-features]
                        ├── es-builtins.js
                        ├── es-syntax.js
                        └── node-builtins.js
                    ├── no-unsupported-features.js
                    ├── [prefer-global]
                        ├── buffer.js
                        ├── console.js
                        ├── process.js
                        ├── text-decoder.js
                        ├── text-encoder.js
                        ├── url-search-params.js
                        └── url.js
                    ├── [prefer-promises]
                        ├── dns.js
                        └── fs.js
                    ├── process-exit-as-throw.js
                    └── shebang.js
                └── [util]
                    ├── cache.js
                    ├── check-existence.js
                    ├── check-extraneous.js
                    ├── check-prefer-global.js
                    ├── check-publish.js
                    ├── check-restricted.js
                    ├── check-unsupported-builtins.js
                    ├── enumerate-property-names.js
                    ├── exists.js
                    ├── get-allow-modules.js
                    ├── get-configured-node-version.js
                    ├── get-convert-path.js
                    ├── get-npmignore.js
                    ├── get-package-json.js
                    ├── get-resolve-paths.js
                    ├── get-semver-range.js
                    ├── get-try-extensions.js
                    ├── import-target.js
                    ├── merge-visitors-in-place.js
                    ├── strip-import-path-params.js
                    ├── visit-import.js
                    └── visit-require.js
            ├── [node_modules]
                ├── [.bin]
                    └── semver
                └── [semver]
                    ├── LICENSE
                    ├── README.md
                    ├── [bin]
                        └── semver.js
                    ├── package.json
                    ├── range.bnf
                    └── semver.js
            └── package.json
        ├── [eslint-plugin-prettier]
            ├── LICENSE.md
            ├── README.md
            ├── eslint-plugin-prettier.d.ts
            ├── eslint-plugin-prettier.js
            ├── package.json
            ├── recommended.d.ts
            ├── recommended.js
            └── worker.js
        ├── [eslint-scope]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                └── eslint-scope.cjs
            ├── [lib]
                ├── definition.js
                ├── index.js
                ├── pattern-visitor.js
                ├── reference.js
                ├── referencer.js
                ├── scope-manager.js
                ├── scope.js
                ├── variable.js
                └── version.js
            └── package.json
        ├── [eslint-utils]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── index.js.map
            ├── index.mjs
            ├── index.mjs.map
            ├── [node_modules]
                └── [eslint-visitor-keys]
                    ├── CHANGELOG.md
                    ├── LICENSE
                    ├── README.md
                    ├── [lib]
                        ├── index.js
                        └── visitor-keys.json
                    └── package.json
            └── package.json
        ├── [eslint-visitor-keys]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── eslint-visitor-keys.cjs
                ├── eslint-visitor-keys.d.cts
                ├── index.d.ts
                └── visitor-keys.d.ts
            ├── [lib]
                ├── index.js
                └── visitor-keys.js
            └── package.json
        ├── [espree]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                └── espree.cjs
            ├── espree.js
            ├── [lib]
                ├── espree.js
                ├── features.js
                ├── options.js
                ├── token-translator.js
                └── version.js
            └── package.json
        ├── [esprima]
            ├── ChangeLog
            ├── LICENSE.BSD
            ├── README.md
            ├── [bin]
                ├── esparse.js
                └── esvalidate.js
            ├── [dist]
                └── esprima.js
            └── package.json
        ├── [esquery]
            ├── README.md
            ├── [dist]
                ├── esquery.esm.js
                ├── esquery.esm.min.js
                ├── esquery.esm.min.js.map
                ├── esquery.js
                ├── esquery.lite.js
                ├── esquery.lite.min.js
                ├── esquery.lite.min.js.map
                ├── esquery.min.js
                └── esquery.min.js.map
            ├── license.txt
            ├── package.json
            └── parser.js
        ├── [esrecurse]
            ├── .babelrc
            ├── README.md
            ├── esrecurse.js
            ├── gulpfile.babel.js
            └── package.json
        ├── [estraverse]
            ├── .jshintrc
            ├── LICENSE.BSD
            ├── README.md
            ├── estraverse.js
            ├── gulpfile.js
            └── package.json
        ├── [esutils]
            ├── LICENSE.BSD
            ├── README.md
            ├── [lib]
                ├── ast.js
                ├── code.js
                ├── keyword.js
                └── utils.js
            └── package.json
        ├── [etag]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [eventemitter3]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── eventemitter3.esm.js
                ├── eventemitter3.esm.min.js
                ├── eventemitter3.esm.min.js.map
                ├── eventemitter3.umd.js
                ├── eventemitter3.umd.min.js
                └── eventemitter3.umd.min.js.map
            ├── index.d.ts
            ├── index.js
            ├── index.mjs
            └── package.json
        ├── [execa]
            ├── index.d.ts
            ├── index.js
            ├── [lib]
                ├── command.js
                ├── error.js
                ├── kill.js
                ├── promise.js
                ├── stdio.js
                └── stream.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [exit]
            ├── .jshintrc
            ├── .npmignore
            ├── .travis.yml
            ├── Gruntfile.js
            ├── LICENSE-MIT
            ├── README.md
            ├── [lib]
                └── exit.js
            ├── package.json
            └── [test]
                ├── exit_test.js
                └── [fixtures]
                    ├── 10-stderr.txt
                    ├── 10-stdout-stderr.txt
                    ├── 10-stdout.txt
                    ├── 100-stderr.txt
                    ├── 100-stdout-stderr.txt
                    ├── 100-stdout.txt
                    ├── 1000-stderr.txt
                    ├── 1000-stdout-stderr.txt
                    ├── 1000-stdout.txt
                    ├── create-files.sh
                    ├── log-broken.js
                    └── log.js
        ├── [expect]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── asymmetricMatchers.js
                ├── extractExpectedAssertionsErrors.js
                ├── index.d.ts
                ├── index.js
                ├── jestMatchersObject.js
                ├── matchers.js
                ├── print.js
                ├── spyMatchers.js
                ├── toThrowMatchers.js
                └── types.js
            └── package.json
        ├── [express]
            ├── History.md
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            ├── [lib]
                ├── application.js
                ├── express.js
                ├── [middleware]
                    ├── init.js
                    └── query.js
                ├── request.js
                ├── response.js
                ├── [router]
                    ├── index.js
                    ├── layer.js
                    └── route.js
                ├── utils.js
                └── view.js
            └── package.json
        ├── [fast-deep-equal]
            ├── LICENSE
            ├── README.md
            ├── [es6]
                ├── index.d.ts
                ├── index.js
                ├── react.d.ts
                └── react.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── react.d.ts
            └── react.js
        ├── [fast-diff]
            ├── LICENSE
            ├── README.md
            ├── diff.d.ts
            ├── diff.js
            └── package.json
        ├── [fast-glob]
            ├── LICENSE
            ├── README.md
            ├── [node_modules]
                └── [glob-parent]
                    ├── CHANGELOG.md
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    └── package.json
            ├── [out]
                ├── index.d.ts
                ├── index.js
                ├── [managers]
                    ├── tasks.d.ts
                    └── tasks.js
                ├── [providers]
                    ├── async.d.ts
                    ├── async.js
                    ├── [filters]
                        ├── deep.d.ts
                        ├── deep.js
                        ├── entry.d.ts
                        ├── entry.js
                        ├── error.d.ts
                        └── error.js
                    ├── [matchers]
                        ├── matcher.d.ts
                        ├── matcher.js
                        ├── partial.d.ts
                        └── partial.js
                    ├── provider.d.ts
                    ├── provider.js
                    ├── stream.d.ts
                    ├── stream.js
                    ├── sync.d.ts
                    ├── sync.js
                    └── [transformers]
                        ├── entry.d.ts
                        └── entry.js
                ├── [readers]
                    ├── async.d.ts
                    ├── async.js
                    ├── reader.d.ts
                    ├── reader.js
                    ├── stream.d.ts
                    ├── stream.js
                    ├── sync.d.ts
                    └── sync.js
                ├── settings.d.ts
                ├── settings.js
                ├── [types]
                    ├── index.d.ts
                    └── index.js
                └── [utils]
                    ├── array.d.ts
                    ├── array.js
                    ├── errno.d.ts
                    ├── errno.js
                    ├── fs.d.ts
                    ├── fs.js
                    ├── index.d.ts
                    ├── index.js
                    ├── path.d.ts
                    ├── path.js
                    ├── pattern.d.ts
                    ├── pattern.js
                    ├── stream.d.ts
                    ├── stream.js
                    ├── string.d.ts
                    └── string.js
            └── package.json
        ├── [fast-json-stable-stringify]
            ├── .eslintrc.yml
            ├── [.github]
                └── FUNDING.yml
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── [benchmark]
                ├── index.js
                └── test.json
            ├── [example]
                ├── key_cmp.js
                ├── nested.js
                ├── str.js
                └── value_cmp.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── [test]
                ├── cmp.js
                ├── nested.js
                ├── str.js
                └── to-json.js
        ├── [fast-levenshtein]
            ├── LICENSE.md
            ├── README.md
            ├── levenshtein.js
            └── package.json
        ├── [fast-safe-stringify]
            ├── .travis.yml
            ├── CHANGELOG.md
            ├── LICENSE
            ├── benchmark.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── readme.md
            ├── test-stable.js
            └── test.js
        ├── [fastq]
            ├── [.github]
                ├── dependabot.yml
                └── [workflows]
                    └── ci.yml
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── bench.js
            ├── example.js
            ├── example.mjs
            ├── index.d.ts
            ├── package.json
            ├── queue.js
            └── [test]
                ├── example.ts
                ├── promise.js
                ├── test.js
                └── tsconfig.json
        ├── [fb-watchman]
            ├── README.md
            ├── index.js
            └── package.json
        ├── [fecha]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── fecha.min.js
                └── fecha.min.js.map
            ├── [lib]
                ├── fecha.d.ts
                ├── fecha.js
                ├── fecha.js.map
                ├── fecha.umd.js
                └── fecha.umd.js.map
            ├── package.json
            └── [src]
                └── fecha.ts
        ├── [file-entry-cache]
            ├── LICENSE
            ├── README.md
            ├── cache.js
            ├── changelog.md
            └── package.json
        ├── [fill-range]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [finalhandler]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.js
            └── package.json
        ├── [find-up]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [flat-cache]
            ├── LICENSE
            ├── README.md
            ├── changelog.md
            ├── package.json
            └── [src]
                ├── cache.js
                ├── del.js
                └── utils.js
        ├── [flatted]
            ├── LICENSE
            ├── README.md
            ├── [cjs]
                ├── index.js
                └── package.json
            ├── es.js
            ├── [esm]
                └── index.js
            ├── esm.js
            ├── index.js
            ├── min.js
            ├── package.json
            ├── [php]
                └── flatted.php
            ├── [python]
                └── flatted.py
            └── [types]
                └── index.d.ts
        ├── [fn.name]
            ├── .gitattributes
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [form-data]
            ├── License
            ├── Readme.md
            ├── index.d.ts
            ├── [lib]
                ├── browser.js
                ├── form_data.js
                └── populate.js
            └── package.json
        ├── [formidable]
            ├── LICENSE
            ├── README.md
            ├── package.json
            └── [src]
                ├── Formidable.js
                ├── FormidableError.js
                ├── PersistentFile.js
                ├── VolatileFile.js
                ├── index.js
                ├── [parsers]
                    ├── Dummy.js
                    ├── JSON.js
                    ├── Multipart.js
                    ├── OctetStream.js
                    ├── Querystring.js
                    ├── StreamingQuerystring.js
                    └── index.js
                └── [plugins]
                    ├── index.js
                    ├── json.js
                    ├── multipart.js
                    ├── octetstream.js
                    └── querystring.js
        ├── [forwarded]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [fresh]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [fs-minipass]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                ├── [minipass]
                    ├── LICENSE
                    ├── README.md
                    ├── index.d.ts
                    ├── index.js
                    └── package.json
                └── [yallist]
                    ├── LICENSE
                    ├── README.md
                    ├── iterator.js
                    ├── package.json
                    └── yallist.js
            └── package.json
        ├── [fs.realpath]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── old.js
            └── package.json
        ├── [function-bind]
            ├── .eslintrc
            ├── [.github]
                ├── FUNDING.yml
                └── SECURITY.md
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── implementation.js
            ├── index.js
            ├── package.json
            └── [test]
                ├── .eslintrc
                └── index.js
        ├── [gauge]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── base-theme.js
            ├── error.js
            ├── has-color.js
            ├── index.js
            ├── [node_modules]
                ├── [emoji-regex]
                    ├── LICENSE-MIT.txt
                    ├── README.md
                    ├── [es2015]
                        ├── index.js
                        └── text.js
                    ├── index.d.ts
                    ├── index.js
                    ├── package.json
                    └── text.js
                ├── [is-fullwidth-code-point]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [string-width]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            ├── plumbing.js
            ├── process.js
            ├── progress-bar.js
            ├── render-template.js
            ├── set-immediate.js
            ├── set-interval.js
            ├── spin.js
            ├── template-item.js
            ├── theme-set.js
            ├── themes.js
            └── wide-truncate.js
        ├── [gensync]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── index.js.flow
            ├── package.json
            └── [test]
                ├── .babelrc
                └── index.test.js
        ├── [get-caller-file]
            ├── LICENSE.md
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── index.js.map
            └── package.json
        ├── [get-east-asian-width]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── lookup.js
            ├── package.json
            └── readme.md
        ├── [get-intrinsic]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── [test]
                └── GetIntrinsic.js
        ├── [get-package-type]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── async.cjs
            ├── cache.cjs
            ├── index.cjs
            ├── is-node-modules.cjs
            ├── package.json
            └── sync.cjs
        ├── [get-proto]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── Object.getPrototypeOf.d.ts
            ├── Object.getPrototypeOf.js
            ├── README.md
            ├── Reflect.getPrototypeOf.d.ts
            ├── Reflect.getPrototypeOf.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [get-stream]
            ├── buffer-stream.js
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [glob]
            ├── LICENSE
            ├── README.md
            ├── common.js
            ├── glob.js
            ├── package.json
            └── sync.js
        ├── [glob-parent]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [globals]
            ├── globals.json
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [globby]
            ├── gitignore.js
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            ├── readme.md
            └── stream-utils.js
        ├── [gopd]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── gOPD.d.ts
            ├── gOPD.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [graceful-fs]
            ├── LICENSE
            ├── README.md
            ├── clone.js
            ├── graceful-fs.js
            ├── legacy-streams.js
            ├── package.json
            └── polyfills.js
        ├── [graphemer]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── Graphemer.d.ts
                ├── Graphemer.d.ts.map
                ├── Graphemer.js
                ├── GraphemerHelper.d.ts
                ├── GraphemerHelper.d.ts.map
                ├── GraphemerHelper.js
                ├── GraphemerIterator.d.ts
                ├── GraphemerIterator.d.ts.map
                ├── GraphemerIterator.js
                ├── boundaries.d.ts
                ├── boundaries.d.ts.map
                ├── boundaries.js
                ├── index.d.ts
                ├── index.d.ts.map
                └── index.js
            └── package.json
        ├── [has-flag]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [has-symbols]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── shams.d.ts
            ├── shams.js
            ├── [test]
                ├── index.js
                ├── [shams]
                    ├── core-js.js
                    └── get-own-property-symbols.js
                └── tests.js
            └── tsconfig.json
        ├── [has-tostringtag]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── shams.d.ts
            ├── shams.js
            ├── [test]
                ├── index.js
                ├── [shams]
                    ├── core-js.js
                    └── get-own-property-symbols.js
                └── tests.js
            └── tsconfig.json
        ├── [has-unicode]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [hasown]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── tsconfig.json
        ├── [helmet]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.cjs
            ├── index.d.cts
            ├── index.d.mts
            ├── index.mjs
            └── package.json
        ├── [html-escaper]
            ├── LICENSE.txt
            ├── README.md
            ├── [cjs]
                ├── index.js
                └── package.json
            ├── [esm]
                └── index.js
            ├── index.js
            ├── min.js
            ├── package.json
            └── [test]
                ├── index.js
                └── package.json
        ├── [http-errors]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [https-proxy-agent]
            ├── README.md
            ├── [dist]
                ├── agent.d.ts
                ├── agent.js
                ├── agent.js.map
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── parse-proxy-response.d.ts
                ├── parse-proxy-response.js
                └── parse-proxy-response.js.map
            ├── [node_modules]
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [human-signals]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [build]
                └── [src]
                    ├── core.js
                    ├── core.js.map
                    ├── main.d.ts
                    ├── main.js
                    ├── main.js.map
                    ├── realtime.js
                    ├── realtime.js.map
                    ├── signals.js
                    └── signals.js.map
            └── package.json
        ├── [husky]
            ├── LICENSE
            ├── README.md
            ├── husky.sh
            ├── [lib]
                ├── bin.d.ts
                ├── bin.js
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [iconv-lite]
            ├── Changelog.md
            ├── LICENSE
            ├── README.md
            ├── [encodings]
                ├── dbcs-codec.js
                ├── dbcs-data.js
                ├── index.js
                ├── internal.js
                ├── sbcs-codec.js
                ├── sbcs-data-generated.js
                ├── sbcs-data.js
                ├── [tables]
                    ├── big5-added.json
                    ├── cp936.json
                    ├── cp949.json
                    ├── cp950.json
                    ├── eucjp.json
                    ├── gb18030-ranges.json
                    ├── gbk-added.json
                    └── shiftjis.json
                ├── utf16.js
                └── utf7.js
            ├── [lib]
                ├── bom-handling.js
                ├── extend-node.js
                ├── index.d.ts
                ├── index.js
                └── streams.js
            └── package.json
        ├── [ignore]
            ├── LICENSE-MIT
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── legacy.js
            └── package.json
        ├── [ignore-by-default]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [import-fresh]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [import-local]
            ├── [fixtures]
                └── cli.js
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [imurmurhash]
            ├── README.md
            ├── imurmurhash.js
            ├── imurmurhash.min.js
            └── package.json
        ├── [inflight]
            ├── LICENSE
            ├── README.md
            ├── inflight.js
            └── package.json
        ├── [inherits]
            ├── LICENSE
            ├── README.md
            ├── inherits.js
            ├── inherits_browser.js
            └── package.json
        ├── [ipaddr.js]
            ├── LICENSE
            ├── README.md
            ├── ipaddr.min.js
            ├── [lib]
                ├── ipaddr.js
                └── ipaddr.js.d.ts
            └── package.json
        ├── [is-arrayish]
            ├── .editorconfig
            ├── .istanbul.yml
            ├── .npmignore
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [is-binary-path]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [is-core-module]
            ├── .eslintrc
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── core.json
            ├── index.js
            ├── package.json
            └── [test]
                └── index.js
        ├── [is-extglob]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [is-fullwidth-code-point]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [is-generator-fn]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [is-glob]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [is-number]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [is-path-inside]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [is-stream]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [isexe]
            ├── .npmignore
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── mode.js
            ├── package.json
            ├── [test]
                └── basic.js
            └── windows.js
        ├── [istanbul-lib-coverage]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── coverage-map.js
                ├── coverage-summary.js
                ├── data-properties.js
                ├── file-coverage.js
                └── percent.js
            └── package.json
        ├── [istanbul-lib-instrument]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── package.json
            └── [src]
                ├── constants.js
                ├── index.js
                ├── instrumenter.js
                ├── read-coverage.js
                ├── source-coverage.js
                └── visitor.js
        ├── [istanbul-lib-report]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── context.js
                ├── file-writer.js
                ├── path.js
                ├── report-base.js
                ├── summarizer-factory.js
                ├── tree.js
                ├── watermarks.js
                └── xml-writer.js
            ├── [node_modules]
                └── [make-dir]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [istanbul-lib-source-maps]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── get-mapping.js
                ├── map-store.js
                ├── mapped.js
                ├── pathutils.js
                ├── transform-utils.js
                └── transformer.js
            ├── [node_modules]
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [istanbul-reports]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── [clover]
                    └── index.js
                ├── [cobertura]
                    └── index.js
                ├── [html]
                    ├── annotator.js
                    ├── [assets]
                        ├── base.css
                        ├── block-navigation.js
                        ├── favicon.png
                        ├── sort-arrow-sprite.png
                        ├── sorter.js
                        └── [vendor]
                            ├── prettify.css
                            └── prettify.js
                    ├── index.js
                    └── insertion-text.js
                ├── [html-spa]
                    ├── .babelrc
                    ├── [assets]
                        ├── bundle.js
                        ├── sort-arrow-sprite.png
                        └── spa.css
                    ├── index.js
                    ├── [src]
                        ├── fileBreadcrumbs.js
                        ├── filterToggle.js
                        ├── flattenToggle.js
                        ├── getChildData.js
                        ├── index.js
                        ├── routing.js
                        ├── summaryHeader.js
                        ├── summaryTableHeader.js
                        └── summaryTableLine.js
                    └── webpack.config.js
                ├── [json]
                    └── index.js
                ├── [json-summary]
                    └── index.js
                ├── [lcov]
                    └── index.js
                ├── [lcovonly]
                    └── index.js
                ├── [none]
                    └── index.js
                ├── [teamcity]
                    └── index.js
                ├── [text]
                    └── index.js
                ├── [text-lcov]
                    └── index.js
                └── [text-summary]
                    └── index.js
            └── package.json
        ├── [jest]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── jest.js
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-changed-files]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── git.js
                ├── hg.js
                ├── index.d.ts
                ├── index.js
                ├── sl.js
                └── types.js
            └── package.json
        ├── [jest-circus]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── eventHandler.js
                ├── formatNodeAssertErrors.js
                ├── globalErrorHandlers.js
                ├── index.d.ts
                ├── index.js
                ├── [legacy-code-todo-rewrite]
                    ├── jestAdapter.js
                    └── jestAdapterInit.js
                ├── run.js
                ├── shuffleArray.js
                ├── state.js
                ├── testCaseReportHandler.js
                ├── types.js
                └── utils.js
            ├── package.json
            └── runner.js
        ├── [jest-cli]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── jest.js
            ├── [build]
                ├── args.js
                ├── index.d.ts
                ├── index.js
                └── run.js
            └── package.json
        ├── [jest-config]
            ├── LICENSE
            ├── [build]
                ├── Defaults.js
                ├── Deprecated.js
                ├── Descriptions.js
                ├── ReporterValidationErrors.js
                ├── ValidConfig.js
                ├── color.js
                ├── constants.js
                ├── getCacheDirectory.js
                ├── getMaxWorkers.js
                ├── index.d.ts
                ├── index.js
                ├── normalize.js
                ├── parseShardPair.js
                ├── readConfigFileAndSetRootDir.js
                ├── resolveConfigPath.js
                ├── setFromArgv.js
                ├── stringToBytes.js
                ├── utils.js
                └── validatePattern.js
            └── package.json
        ├── [jest-diff]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── cleanupSemantic.js
                ├── constants.js
                ├── diffLines.js
                ├── diffStrings.js
                ├── getAlignedDiffs.js
                ├── index.d.ts
                ├── index.js
                ├── joinAlignedDiffs.js
                ├── normalizeDiffOptions.js
                ├── printDiffs.js
                └── types.js
            └── package.json
        ├── [jest-docblock]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-each]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── bind.js
                ├── index.d.ts
                ├── index.js
                ├── [table]
                    ├── array.js
                    ├── interpolation.js
                    └── template.js
                └── validation.js
            └── package.json
        ├── [jest-environment-node]
            ├── LICENSE
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-get-type]
            ├── LICENSE
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-haste-map]
            ├── LICENSE
            ├── [build]
                ├── HasteFS.js
                ├── ModuleMap.js
                ├── blacklist.js
                ├── constants.js
                ├── [crawlers]
                    ├── node.js
                    └── watchman.js
                ├── getMockName.js
                ├── index.d.ts
                ├── index.js
                ├── [lib]
                    ├── dependencyExtractor.js
                    ├── fast_path.js
                    ├── getPlatformExtension.js
                    ├── isWatchmanInstalled.js
                    └── normalizePathSep.js
                ├── types.js
                ├── [watchers]
                    ├── FSEventsWatcher.js
                    ├── NodeWatcher.js
                    ├── RecrawlWarning.js
                    ├── WatchmanWatcher.js
                    └── common.js
                └── worker.js
            └── package.json
        ├── [jest-leak-detector]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-matcher-utils]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── Replaceable.js
                ├── deepCyclicCopyReplaceable.js
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-message-util]
            ├── LICENSE
            ├── [build]
                ├── index.d.ts
                ├── index.js
                └── types.js
            └── package.json
        ├── [jest-mock]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-pnp-resolver]
            ├── README.md
            ├── createRequire.js
            ├── getDefaultResolver.js
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [jest-regex-util]
            ├── LICENSE
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-resolve]
            ├── LICENSE
            ├── [build]
                ├── ModuleNotFoundError.js
                ├── defaultResolver.js
                ├── fileWalkers.js
                ├── index.d.ts
                ├── index.js
                ├── isBuiltinModule.js
                ├── nodeModulesPaths.js
                ├── resolver.js
                ├── shouldLoadAsEsm.js
                ├── types.js
                └── utils.js
            └── package.json
        ├── [jest-resolve-dependencies]
            ├── LICENSE
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-runner]
            ├── LICENSE
            ├── [build]
                ├── index.d.ts
                ├── index.js
                ├── runTest.js
                ├── testWorker.js
                └── types.js
            └── package.json
        ├── [jest-runtime]
            ├── LICENSE
            ├── [build]
                ├── helpers.js
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [jest-snapshot]
            ├── LICENSE
            ├── [build]
                ├── InlineSnapshots.js
                ├── SnapshotResolver.js
                ├── State.js
                ├── colors.js
                ├── dedentLines.js
                ├── index.d.ts
                ├── index.js
                ├── mockSerializer.js
                ├── plugins.js
                ├── printSnapshot.js
                ├── types.js
                └── utils.js
            └── package.json
        ├── [jest-util]
            ├── LICENSE
            ├── Readme.md
            ├── [build]
                ├── ErrorWithStack.js
                ├── clearLine.js
                ├── convertDescriptorToString.js
                ├── createDirectory.js
                ├── createProcessObject.js
                ├── deepCyclicCopy.js
                ├── formatTime.js
                ├── globsToMatcher.js
                ├── index.d.ts
                ├── index.js
                ├── installCommonGlobals.js
                ├── interopRequireDefault.js
                ├── invariant.js
                ├── isInteractive.js
                ├── isNonNullable.js
                ├── isPromise.js
                ├── pluralize.js
                ├── preRunMessage.js
                ├── replacePathSepForGlob.js
                ├── requireOrImportModule.js
                ├── setGlobal.js
                ├── specialChars.js
                ├── testPathPatternToRegExp.js
                └── tryRealpath.js
            └── package.json
        ├── [jest-validate]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── condition.js
                ├── defaultConfig.js
                ├── deprecated.js
                ├── errors.js
                ├── exampleConfig.js
                ├── index.d.ts
                ├── index.js
                ├── types.js
                ├── utils.js
                ├── validate.js
                ├── validateCLIOptions.js
                └── warnings.js
            ├── [node_modules]
                └── [camelcase]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [jest-watcher]
            ├── LICENSE
            ├── [build]
                ├── BaseWatchPlugin.js
                ├── JestHooks.js
                ├── PatternPrompt.js
                ├── TestWatcher.js
                ├── constants.js
                ├── index.d.ts
                ├── index.js
                ├── [lib]
                    ├── Prompt.js
                    ├── colorize.js
                    ├── formatTestNameByPattern.js
                    ├── patternModeHelpers.js
                    └── scroll.js
                └── types.js
            └── package.json
        ├── [jest-worker]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── Farm.js
                ├── FifoQueue.js
                ├── PriorityQueue.js
                ├── WorkerPool.js
                ├── [base]
                    └── BaseWorkerPool.js
                ├── index.d.ts
                ├── index.js
                ├── types.js
                └── [workers]
                    ├── ChildProcessWorker.js
                    ├── NodeThreadsWorker.js
                    ├── WorkerAbstract.js
                    ├── messageParent.js
                    ├── processChild.js
                    └── threadChild.js
            ├── [node_modules]
                └── [supports-color]
                    ├── browser.js
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [joi]
            ├── LICENSE.md
            ├── README.md
            ├── [dist]
                └── joi-browser.min.js
            ├── [lib]
                ├── annotate.js
                ├── base.js
                ├── cache.js
                ├── common.js
                ├── compile.js
                ├── errors.js
                ├── extend.js
                ├── index.d.ts
                ├── index.js
                ├── manifest.js
                ├── messages.js
                ├── modify.js
                ├── ref.js
                ├── schemas.js
                ├── state.js
                ├── template.js
                ├── trace.js
                ├── [types]
                    ├── alternatives.js
                    ├── any.js
                    ├── array.js
                    ├── binary.js
                    ├── boolean.js
                    ├── date.js
                    ├── function.js
                    ├── keys.js
                    ├── link.js
                    ├── number.js
                    ├── object.js
                    ├── string.js
                    └── symbol.js
                ├── validator.js
                └── values.js
            └── package.json
        ├── [js-tokens]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [js-yaml]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── js-yaml.js
            ├── [dist]
                ├── js-yaml.js
                ├── js-yaml.min.js
                └── js-yaml.mjs
            ├── index.js
            ├── [lib]
                ├── common.js
                ├── dumper.js
                ├── exception.js
                ├── loader.js
                ├── [schema]
                    ├── core.js
                    ├── default.js
                    ├── failsafe.js
                    └── json.js
                ├── schema.js
                ├── snippet.js
                ├── [type]
                    ├── binary.js
                    ├── bool.js
                    ├── float.js
                    ├── int.js
                    ├── map.js
                    ├── merge.js
                    ├── null.js
                    ├── omap.js
                    ├── pairs.js
                    ├── seq.js
                    ├── set.js
                    ├── str.js
                    └── timestamp.js
                └── type.js
            └── package.json
        ├── [jsesc]
            ├── LICENSE-MIT.txt
            ├── README.md
            ├── [bin]
                └── jsesc
            ├── jsesc.js
            ├── [man]
                └── jsesc.1
            └── package.json
        ├── [json-buffer]
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── [test]
                └── index.js
        ├── [json-parse-even-better-errors]
            ├── CHANGELOG.md
            ├── LICENSE.md
            ├── README.md
            ├── index.js
            └── package.json
        ├── [json-schema-traverse]
            ├── .eslintrc.yml
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── [spec]
                ├── .eslintrc.yml
                ├── [fixtures]
                    └── schema.js
                └── index.spec.js
        ├── [json-stable-stringify-without-jsonify]
            ├── .npmignore
            ├── .travis.yml
            ├── LICENSE
            ├── [example]
                ├── key_cmp.js
                ├── nested.js
                ├── str.js
                └── value_cmp.js
            ├── index.js
            ├── package.json
            ├── readme.markdown
            └── [test]
                ├── cmp.js
                ├── nested.js
                ├── replacer.js
                ├── space.js
                ├── str.js
                └── to-json.js
        ├── [json5]
            ├── LICENSE.md
            ├── README.md
            ├── [dist]
                ├── index.js
                ├── index.min.js
                ├── index.min.mjs
                └── index.mjs
            ├── [lib]
                ├── cli.js
                ├── index.d.ts
                ├── index.js
                ├── parse.d.ts
                ├── parse.js
                ├── register.js
                ├── require.js
                ├── stringify.d.ts
                ├── stringify.js
                ├── unicode.d.ts
                ├── unicode.js
                ├── util.d.ts
                └── util.js
            └── package.json
        ├── [jsonwebtoken]
            ├── LICENSE
            ├── README.md
            ├── decode.js
            ├── index.js
            ├── [lib]
                ├── JsonWebTokenError.js
                ├── NotBeforeError.js
                ├── TokenExpiredError.js
                ├── asymmetricKeyDetailsSupported.js
                ├── psSupported.js
                ├── rsaPssKeyDetailsSupported.js
                ├── timespan.js
                └── validateAsymmetricKey.js
            ├── [node_modules]
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            ├── package.json
            ├── sign.js
            └── verify.js
        ├── [jwa]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [jws]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── index.js
            ├── [lib]
                ├── data-stream.js
                ├── sign-stream.js
                ├── tostring.js
                └── verify-stream.js
            ├── package.json
            └── readme.md
        ├── [kareem]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [keyv]
            ├── README.md
            ├── package.json
            └── [src]
                ├── index.d.ts
                └── index.js
        ├── [kleur]
            ├── index.js
            ├── kleur.d.ts
            ├── license
            ├── package.json
            └── readme.md
        ├── [kuler]
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [leven]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [levn]
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── cast.js
                ├── index.js
                └── parse-string.js
            └── package.json
        ├── [lilconfig]
            ├── LICENSE
            ├── package.json
            ├── readme.md
            └── [src]
                ├── index.d.ts
                └── index.js
        ├── [lines-and-columns]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [lint-staged]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── lint-staged.js
            ├── [lib]
                ├── chunkFiles.js
                ├── configFiles.js
                ├── dynamicImport.js
                ├── execGit.js
                ├── figures.js
                ├── file.js
                ├── generateTasks.js
                ├── getDiffCommand.js
                ├── getRenderer.js
                ├── getStagedFiles.js
                ├── gitWorkflow.js
                ├── groupFilesByConfig.js
                ├── index.d.ts
                ├── index.js
                ├── loadConfig.js
                ├── makeCmdTasks.js
                ├── messages.js
                ├── normalizePath.js
                ├── parseGitZOutput.js
                ├── printTaskOutput.js
                ├── readStdin.js
                ├── resolveConfig.js
                ├── resolveGitRepo.js
                ├── resolveTaskFn.js
                ├── runAll.js
                ├── searchConfigs.js
                ├── state.js
                ├── symbols.js
                ├── validateBraces.js
                ├── validateConfig.js
                ├── validateOptions.js
                └── version.js
            ├── [node_modules]
                ├── [chalk]
                    ├── license
                    ├── package.json
                    ├── readme.md
                    └── [source]
                        ├── index.d.ts
                        ├── index.js
                        ├── utilities.js
                        └── [vendor]
                            ├── [ansi-styles]
                                ├── index.d.ts
                                └── index.js
                            └── [supports-color]
                                ├── browser.d.ts
                                ├── browser.js
                                ├── index.d.ts
                                └── index.js
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                ├── [execa]
                    ├── index.d.ts
                    ├── index.js
                    ├── [lib]
                        ├── command.js
                        ├── error.js
                        ├── kill.js
                        ├── pipe.js
                        ├── promise.js
                        ├── stdio.js
                        ├── stream.js
                        └── verbose.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [get-stream]
                    ├── license
                    ├── package.json
                    ├── readme.md
                    └── [source]
                        ├── array-buffer.js
                        ├── array.js
                        ├── buffer.js
                        ├── contents.js
                        ├── index.d.ts
                        ├── index.js
                        ├── string.js
                        └── utils.js
                ├── [human-signals]
                    ├── LICENSE
                    ├── README.md
                    ├── [build]
                        └── [src]
                            ├── core.js
                            ├── main.d.ts
                            ├── main.js
                            ├── realtime.js
                            └── signals.js
                    └── package.json
                ├── [is-stream]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [mimic-fn]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
                ├── [npm-run-path]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [onetime]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [path-key]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [signal-exit]
                    ├── LICENSE.txt
                    ├── README.md
                    ├── [dist]
                        ├── [cjs]
                            ├── browser.d.ts
                            ├── browser.d.ts.map
                            ├── browser.js
                            ├── browser.js.map
                            ├── index.d.ts
                            ├── index.d.ts.map
                            ├── index.js
                            ├── index.js.map
                            ├── package.json
                            ├── signals.d.ts
                            ├── signals.d.ts.map
                            ├── signals.js
                            └── signals.js.map
                        └── [mjs]
                            ├── browser.d.ts
                            ├── browser.d.ts.map
                            ├── browser.js
                            ├── browser.js.map
                            ├── index.d.ts
                            ├── index.d.ts.map
                            ├── index.js
                            ├── index.js.map
                            ├── package.json
                            ├── signals.d.ts
                            ├── signals.d.ts.map
                            ├── signals.js
                            └── signals.js.map
                    └── package.json
                └── [strip-final-newline]
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [listr2]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── index.cjs
                ├── index.d.cts
                ├── index.d.ts
                └── index.js
            └── package.json
        ├── [locate-path]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [lodash.includes]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.isboolean]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.isinteger]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.isnumber]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.isplainobject]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.isstring]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.merge]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [lodash.once]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [log-update]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                ├── [ansi-escapes]
                    ├── base.d.ts
                    ├── base.js
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [ansi-regex]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [ansi-styles]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [is-fullwidth-code-point]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [slice-ansi]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [strip-ansi]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [logform]
            ├── .babelrc
            ├── .eslintrc
            ├── .gitattributes
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── align.js
            ├── browser.js
            ├── cli.js
            ├── colorize.js
            ├── combine.js
            ├── [dist]
                ├── align.js
                ├── browser.js
                ├── cli.js
                ├── colorize.js
                ├── combine.js
                ├── errors.js
                ├── format.js
                ├── index.js
                ├── json.js
                ├── label.js
                ├── levels.js
                ├── logstash.js
                ├── metadata.js
                ├── ms.js
                ├── pad-levels.js
                ├── pretty-print.js
                ├── printf.js
                ├── simple.js
                ├── splat.js
                ├── timestamp.js
                └── uncolorize.js
            ├── errors.js
            ├── format.js
            ├── index.d.ts
            ├── index.js
            ├── json.js
            ├── label.js
            ├── levels.js
            ├── logstash.js
            ├── metadata.js
            ├── ms.js
            ├── [node_modules]
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            ├── package.json
            ├── pad-levels.js
            ├── pretty-print.js
            ├── printf.js
            ├── simple.js
            ├── splat.js
            ├── timestamp.js
            ├── tsconfig.json
            └── uncolorize.js
        ├── [lru-cache]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [make-dir]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                ├── [.bin]
                    └── semver
                └── [semver]
                    ├── LICENSE
                    ├── README.md
                    ├── [bin]
                        └── semver.js
                    ├── package.json
                    ├── range.bnf
                    └── semver.js
            ├── package.json
            └── readme.md
        ├── [makeerror]
            ├── .travis.yml
            ├── [lib]
                └── makeerror.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [math-intrinsics]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── abs.d.ts
            ├── abs.js
            ├── [constants]
                ├── maxArrayLength.d.ts
                ├── maxArrayLength.js
                ├── maxSafeInteger.d.ts
                ├── maxSafeInteger.js
                ├── maxValue.d.ts
                └── maxValue.js
            ├── floor.d.ts
            ├── floor.js
            ├── isFinite.d.ts
            ├── isFinite.js
            ├── isInteger.d.ts
            ├── isInteger.js
            ├── isNaN.d.ts
            ├── isNaN.js
            ├── isNegativeZero.d.ts
            ├── isNegativeZero.js
            ├── max.d.ts
            ├── max.js
            ├── min.d.ts
            ├── min.js
            ├── mod.d.ts
            ├── mod.js
            ├── package.json
            ├── pow.d.ts
            ├── pow.js
            ├── round.d.ts
            ├── round.js
            ├── sign.d.ts
            ├── sign.js
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [media-typer]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [memory-pager]
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [merge-descriptors]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [merge-stream]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [merge2]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [methods]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [micromatch]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [mime]
            ├── .npmignore
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── cli.js
            ├── mime.js
            ├── package.json
            ├── [src]
                ├── build.js
                └── test.js
            └── types.json
        ├── [mime-db]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── db.json
            ├── index.js
            └── package.json
        ├── [mime-types]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                └── [mime-db]
                    ├── HISTORY.md
                    ├── LICENSE
                    ├── README.md
                    ├── db.json
                    ├── index.js
                    └── package.json
            └── package.json
        ├── [mimic-fn]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [mimic-function]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [minimatch]
            ├── LICENSE
            ├── README.md
            ├── minimatch.js
            └── package.json
        ├── [minipass]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── index.mjs
            └── package.json
        ├── [minizlib]
            ├── LICENSE
            ├── README.md
            ├── constants.js
            ├── index.js
            ├── [node_modules]
                ├── [minipass]
                    ├── LICENSE
                    ├── README.md
                    ├── index.d.ts
                    ├── index.js
                    └── package.json
                └── [yallist]
                    ├── LICENSE
                    ├── README.md
                    ├── iterator.js
                    ├── package.json
                    └── yallist.js
            └── package.json
        ├── [mkdirp]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── [bin]
                └── cmd.js
            ├── index.js
            ├── [lib]
                ├── find-made.js
                ├── mkdirp-manual.js
                ├── mkdirp-native.js
                ├── opts-arg.js
                ├── path-arg.js
                └── use-native.js
            ├── package.json
            └── readme.markdown
        ├── [mongodb]
            ├── LICENSE.md
            ├── README.md
            ├── [etc]
                └── prepare.js
            ├── [lib]
                ├── admin.js
                ├── admin.js.map
                ├── beta.d.ts
                ├── beta.js
                ├── beta.js.map
                ├── bson.js
                ├── bson.js.map
                ├── [bulk]
                    ├── common.js
                    ├── common.js.map
                    ├── ordered.js
                    ├── ordered.js.map
                    ├── unordered.js
                    └── unordered.js.map
                ├── change_stream.js
                ├── change_stream.js.map
                ├── [client-side-encryption]
                    ├── auto_encrypter.js
                    ├── auto_encrypter.js.map
                    ├── client_encryption.js
                    ├── client_encryption.js.map
                    ├── crypto_callbacks.js
                    ├── crypto_callbacks.js.map
                    ├── errors.js
                    ├── errors.js.map
                    ├── mongocryptd_manager.js
                    ├── mongocryptd_manager.js.map
                    ├── [providers]
                        ├── aws.js
                        ├── aws.js.map
                        ├── azure.js
                        ├── azure.js.map
                        ├── gcp.js
                        ├── gcp.js.map
                        ├── index.js
                        └── index.js.map
                    ├── state_machine.js
                    └── state_machine.js.map
                ├── [cmap]
                    ├── [auth]
                        ├── auth_provider.js
                        ├── auth_provider.js.map
                        ├── aws_temporary_credentials.js
                        ├── aws_temporary_credentials.js.map
                        ├── gssapi.js
                        ├── gssapi.js.map
                        ├── mongo_credentials.js
                        ├── mongo_credentials.js.map
                        ├── mongodb_aws.js
                        ├── mongodb_aws.js.map
                        ├── [mongodb_oidc]
                            ├── automated_callback_workflow.js
                            ├── automated_callback_workflow.js.map
                            ├── azure_machine_workflow.js
                            ├── azure_machine_workflow.js.map
                            ├── callback_workflow.js
                            ├── callback_workflow.js.map
                            ├── command_builders.js
                            ├── command_builders.js.map
                            ├── gcp_machine_workflow.js
                            ├── gcp_machine_workflow.js.map
                            ├── human_callback_workflow.js
                            ├── human_callback_workflow.js.map
                            ├── k8s_machine_workflow.js
                            ├── k8s_machine_workflow.js.map
                            ├── machine_workflow.js
                            ├── machine_workflow.js.map
                            ├── token_cache.js
                            ├── token_cache.js.map
                            ├── token_machine_workflow.js
                            └── token_machine_workflow.js.map
                        ├── mongodb_oidc.js
                        ├── mongodb_oidc.js.map
                        ├── plain.js
                        ├── plain.js.map
                        ├── providers.js
                        ├── providers.js.map
                        ├── scram.js
                        ├── scram.js.map
                        ├── x509.js
                        └── x509.js.map
                    ├── command_monitoring_events.js
                    ├── command_monitoring_events.js.map
                    ├── commands.js
                    ├── commands.js.map
                    ├── connect.js
                    ├── connect.js.map
                    ├── connection.js
                    ├── connection.js.map
                    ├── connection_pool.js
                    ├── connection_pool.js.map
                    ├── connection_pool_events.js
                    ├── connection_pool_events.js.map
                    ├── errors.js
                    ├── errors.js.map
                    ├── [handshake]
                        ├── client_metadata.js
                        └── client_metadata.js.map
                    ├── metrics.js
                    ├── metrics.js.map
                    ├── stream_description.js
                    ├── stream_description.js.map
                    └── [wire_protocol]
                        ├── compression.js
                        ├── compression.js.map
                        ├── constants.js
                        ├── constants.js.map
                        ├── on_data.js
                        ├── on_data.js.map
                        ├── [on_demand]
                            ├── document.js
                            └── document.js.map
                        ├── responses.js
                        ├── responses.js.map
                        ├── shared.js
                        └── shared.js.map
                ├── collection.js
                ├── collection.js.map
                ├── connection_string.js
                ├── connection_string.js.map
                ├── constants.js
                ├── constants.js.map
                ├── [cursor]
                    ├── abstract_cursor.js
                    ├── abstract_cursor.js.map
                    ├── aggregation_cursor.js
                    ├── aggregation_cursor.js.map
                    ├── change_stream_cursor.js
                    ├── change_stream_cursor.js.map
                    ├── client_bulk_write_cursor.js
                    ├── client_bulk_write_cursor.js.map
                    ├── find_cursor.js
                    ├── find_cursor.js.map
                    ├── list_collections_cursor.js
                    ├── list_collections_cursor.js.map
                    ├── list_indexes_cursor.js
                    ├── list_indexes_cursor.js.map
                    ├── list_search_indexes_cursor.js
                    ├── list_search_indexes_cursor.js.map
                    ├── run_command_cursor.js
                    └── run_command_cursor.js.map
                ├── db.js
                ├── db.js.map
                ├── deps.js
                ├── deps.js.map
                ├── encrypter.js
                ├── encrypter.js.map
                ├── error.js
                ├── error.js.map
                ├── explain.js
                ├── explain.js.map
                ├── [gridfs]
                    ├── download.js
                    ├── download.js.map
                    ├── index.js
                    ├── index.js.map
                    ├── upload.js
                    └── upload.js.map
                ├── index.js
                ├── index.js.map
                ├── mongo_client.js
                ├── mongo_client.js.map
                ├── mongo_client_auth_providers.js
                ├── mongo_client_auth_providers.js.map
                ├── mongo_logger.js
                ├── mongo_logger.js.map
                ├── mongo_types.js
                ├── mongo_types.js.map
                ├── [operations]
                    ├── aggregate.js
                    ├── aggregate.js.map
                    ├── bulk_write.js
                    ├── bulk_write.js.map
                    ├── [client_bulk_write]
                        ├── client_bulk_write.js
                        ├── client_bulk_write.js.map
                        ├── command_builder.js
                        ├── command_builder.js.map
                        ├── common.js
                        ├── common.js.map
                        ├── executor.js
                        ├── executor.js.map
                        ├── results_merger.js
                        └── results_merger.js.map
                    ├── collections.js
                    ├── collections.js.map
                    ├── command.js
                    ├── command.js.map
                    ├── count.js
                    ├── count.js.map
                    ├── create_collection.js
                    ├── create_collection.js.map
                    ├── delete.js
                    ├── delete.js.map
                    ├── distinct.js
                    ├── distinct.js.map
                    ├── drop.js
                    ├── drop.js.map
                    ├── estimated_document_count.js
                    ├── estimated_document_count.js.map
                    ├── execute_operation.js
                    ├── execute_operation.js.map
                    ├── find.js
                    ├── find.js.map
                    ├── find_and_modify.js
                    ├── find_and_modify.js.map
                    ├── get_more.js
                    ├── get_more.js.map
                    ├── indexes.js
                    ├── indexes.js.map
                    ├── insert.js
                    ├── insert.js.map
                    ├── is_capped.js
                    ├── is_capped.js.map
                    ├── kill_cursors.js
                    ├── kill_cursors.js.map
                    ├── list_collections.js
                    ├── list_collections.js.map
                    ├── list_databases.js
                    ├── list_databases.js.map
                    ├── operation.js
                    ├── operation.js.map
                    ├── options_operation.js
                    ├── options_operation.js.map
                    ├── profiling_level.js
                    ├── profiling_level.js.map
                    ├── remove_user.js
                    ├── remove_user.js.map
                    ├── rename.js
                    ├── rename.js.map
                    ├── run_command.js
                    ├── run_command.js.map
                    ├── [search_indexes]
                        ├── create.js
                        ├── create.js.map
                        ├── drop.js
                        ├── drop.js.map
                        ├── update.js
                        └── update.js.map
                    ├── set_profiling_level.js
                    ├── set_profiling_level.js.map
                    ├── stats.js
                    ├── stats.js.map
                    ├── update.js
                    ├── update.js.map
                    ├── validate_collection.js
                    └── validate_collection.js.map
                ├── read_concern.js
                ├── read_concern.js.map
                ├── read_preference.js
                ├── read_preference.js.map
                ├── resource_management.js
                ├── resource_management.js.map
                ├── [sdam]
                    ├── common.js
                    ├── common.js.map
                    ├── events.js
                    ├── events.js.map
                    ├── monitor.js
                    ├── monitor.js.map
                    ├── server.js
                    ├── server.js.map
                    ├── server_description.js
                    ├── server_description.js.map
                    ├── server_selection.js
                    ├── server_selection.js.map
                    ├── server_selection_events.js
                    ├── server_selection_events.js.map
                    ├── srv_polling.js
                    ├── srv_polling.js.map
                    ├── topology.js
                    ├── topology.js.map
                    ├── topology_description.js
                    └── topology_description.js.map
                ├── sessions.js
                ├── sessions.js.map
                ├── sort.js
                ├── sort.js.map
                ├── timeout.js
                ├── timeout.js.map
                ├── transactions.js
                ├── transactions.js.map
                ├── utils.js
                ├── utils.js.map
                ├── write_concern.js
                └── write_concern.js.map
            ├── mongodb.d.ts
            ├── package.json
            ├── [src]
                ├── admin.ts
                ├── beta.ts
                ├── bson.ts
                ├── [bulk]
                    ├── common.ts
                    ├── ordered.ts
                    └── unordered.ts
                ├── change_stream.ts
                ├── [client-side-encryption]
                    ├── auto_encrypter.ts
                    ├── client_encryption.ts
                    ├── crypto_callbacks.ts
                    ├── errors.ts
                    ├── mongocryptd_manager.ts
                    ├── [providers]
                        ├── aws.ts
                        ├── azure.ts
                        ├── gcp.ts
                        └── index.ts
                    └── state_machine.ts
                ├── [cmap]
                    ├── [auth]
                        ├── auth_provider.ts
                        ├── aws_temporary_credentials.ts
                        ├── gssapi.ts
                        ├── mongo_credentials.ts
                        ├── mongodb_aws.ts
                        ├── [mongodb_oidc]
                            ├── automated_callback_workflow.ts
                            ├── azure_machine_workflow.ts
                            ├── callback_workflow.ts
                            ├── command_builders.ts
                            ├── gcp_machine_workflow.ts
                            ├── human_callback_workflow.ts
                            ├── k8s_machine_workflow.ts
                            ├── machine_workflow.ts
                            ├── token_cache.ts
                            └── token_machine_workflow.ts
                        ├── mongodb_oidc.ts
                        ├── plain.ts
                        ├── providers.ts
                        ├── scram.ts
                        └── x509.ts
                    ├── command_monitoring_events.ts
                    ├── commands.ts
                    ├── connect.ts
                    ├── connection.ts
                    ├── connection_pool.ts
                    ├── connection_pool_events.ts
                    ├── errors.ts
                    ├── [handshake]
                        └── client_metadata.ts
                    ├── metrics.ts
                    ├── stream_description.ts
                    └── [wire_protocol]
                        ├── compression.ts
                        ├── constants.ts
                        ├── on_data.ts
                        ├── [on_demand]
                            └── document.ts
                        ├── responses.ts
                        └── shared.ts
                ├── collection.ts
                ├── connection_string.ts
                ├── constants.ts
                ├── [cursor]
                    ├── abstract_cursor.ts
                    ├── aggregation_cursor.ts
                    ├── change_stream_cursor.ts
                    ├── client_bulk_write_cursor.ts
                    ├── find_cursor.ts
                    ├── list_collections_cursor.ts
                    ├── list_indexes_cursor.ts
                    ├── list_search_indexes_cursor.ts
                    └── run_command_cursor.ts
                ├── db.ts
                ├── deps.ts
                ├── encrypter.ts
                ├── error.ts
                ├── explain.ts
                ├── [gridfs]
                    ├── download.ts
                    ├── index.ts
                    └── upload.ts
                ├── index.ts
                ├── mongo_client.ts
                ├── mongo_client_auth_providers.ts
                ├── mongo_logger.ts
                ├── mongo_types.ts
                ├── [operations]
                    ├── aggregate.ts
                    ├── bulk_write.ts
                    ├── [client_bulk_write]
                        ├── client_bulk_write.ts
                        ├── command_builder.ts
                        ├── common.ts
                        ├── executor.ts
                        └── results_merger.ts
                    ├── collections.ts
                    ├── command.ts
                    ├── count.ts
                    ├── create_collection.ts
                    ├── delete.ts
                    ├── distinct.ts
                    ├── drop.ts
                    ├── estimated_document_count.ts
                    ├── execute_operation.ts
                    ├── find.ts
                    ├── find_and_modify.ts
                    ├── get_more.ts
                    ├── indexes.ts
                    ├── insert.ts
                    ├── is_capped.ts
                    ├── kill_cursors.ts
                    ├── list_collections.ts
                    ├── list_databases.ts
                    ├── operation.ts
                    ├── options_operation.ts
                    ├── profiling_level.ts
                    ├── remove_user.ts
                    ├── rename.ts
                    ├── run_command.ts
                    ├── [search_indexes]
                        ├── create.ts
                        ├── drop.ts
                        └── update.ts
                    ├── set_profiling_level.ts
                    ├── stats.ts
                    ├── update.ts
                    └── validate_collection.ts
                ├── read_concern.ts
                ├── read_preference.ts
                ├── resource_management.ts
                ├── [sdam]
                    ├── common.ts
                    ├── events.ts
                    ├── monitor.ts
                    ├── server.ts
                    ├── server_description.ts
                    ├── server_selection.ts
                    ├── server_selection_events.ts
                    ├── srv_polling.ts
                    ├── topology.ts
                    └── topology_description.ts
                ├── sessions.ts
                ├── sort.ts
                ├── timeout.ts
                ├── transactions.ts
                ├── utils.ts
                └── write_concern.ts
            └── tsconfig.json
        ├── [mongodb-connection-string-url]
            ├── .esm-wrapper.mjs
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── redact.d.ts
                ├── redact.js
                └── redact.js.map
            └── package.json
        ├── [mongoose]
            ├── LICENSE.md
            ├── README.md
            ├── SECURITY.md
            ├── browser.js
            ├── [dist]
                └── browser.umd.js
            ├── index.js
            ├── [lib]
                ├── aggregate.js
                ├── browser.js
                ├── browserDocument.js
                ├── [cast]
                    ├── bigint.js
                    ├── boolean.js
                    ├── date.js
                    ├── decimal128.js
                    ├── double.js
                    ├── int32.js
                    ├── number.js
                    ├── objectid.js
                    ├── string.js
                    └── uuid.js
                ├── cast.js
                ├── collection.js
                ├── connection.js
                ├── connectionState.js
                ├── constants.js
                ├── [cursor]
                    ├── aggregationCursor.js
                    ├── changeStream.js
                    └── queryCursor.js
                ├── document.js
                ├── documentProvider.js
                ├── driver.js
                ├── [drivers]
                    ├── SPEC.md
                    ├── [browser]
                        ├── binary.js
                        ├── decimal128.js
                        ├── index.js
                        └── objectid.js
                    └── [node-mongodb-native]
                        ├── bulkWriteResult.js
                        ├── collection.js
                        ├── connection.js
                        └── index.js
                ├── [error]
                    ├── browserMissingSchema.js
                    ├── bulkSaveIncompleteError.js
                    ├── bulkWriteError.js
                    ├── cast.js
                    ├── createCollectionsError.js
                    ├── divergentArray.js
                    ├── eachAsyncMultiError.js
                    ├── index.js
                    ├── invalidSchemaOption.js
                    ├── messages.js
                    ├── missingSchema.js
                    ├── mongooseError.js
                    ├── notFound.js
                    ├── objectExpected.js
                    ├── objectParameter.js
                    ├── overwriteModel.js
                    ├── parallelSave.js
                    ├── parallelValidate.js
                    ├── serverSelection.js
                    ├── setOptionError.js
                    ├── strict.js
                    ├── strictPopulate.js
                    ├── syncIndexes.js
                    ├── validation.js
                    ├── validator.js
                    └── version.js
                ├── [helpers]
                    ├── [aggregate]
                        ├── prepareDiscriminatorPipeline.js
                        └── stringifyFunctionOperators.js
                    ├── arrayDepth.js
                    ├── clone.js
                    ├── common.js
                    ├── createJSONSchemaTypeDefinition.js
                    ├── [cursor]
                        └── eachAsync.js
                    ├── [discriminator]
                        ├── applyEmbeddedDiscriminators.js
                        ├── areDiscriminatorValuesEqual.js
                        ├── checkEmbeddedDiscriminatorKeyProjection.js
                        ├── getConstructor.js
                        ├── getDiscriminatorByValue.js
                        ├── getSchemaDiscriminatorByValue.js
                        └── mergeDiscriminatorSchema.js
                    ├── [document]
                        ├── applyDefaults.js
                        ├── applyTimestamps.js
                        ├── applyVirtuals.js
                        ├── cleanModifiedSubpaths.js
                        ├── compile.js
                        ├── getDeepestSubdocumentForPath.js
                        ├── getEmbeddedDiscriminatorPath.js
                        └── handleSpreadDoc.js
                    ├── each.js
                    ├── [error]
                        └── combinePathErrors.js
                    ├── firstKey.js
                    ├── get.js
                    ├── getConstructorName.js
                    ├── getDefaultBulkwriteResult.js
                    ├── getFunctionName.js
                    ├── immediate.js
                    ├── [indexes]
                        ├── applySchemaCollation.js
                        ├── decorateDiscriminatorIndexOptions.js
                        ├── getRelatedIndexes.js
                        ├── isDefaultIdIndex.js
                        ├── isIndexEqual.js
                        ├── isIndexSpecEqual.js
                        ├── isTextIndex.js
                        └── isTimeseriesIndex.js
                    ├── isAsyncFunction.js
                    ├── isBsonType.js
                    ├── isMongooseObject.js
                    ├── isObject.js
                    ├── isPOJO.js
                    ├── isPromise.js
                    ├── isSimpleValidator.js
                    ├── minimize.js
                    ├── [model]
                        ├── applyDefaultsToPOJO.js
                        ├── applyHooks.js
                        ├── applyMethods.js
                        ├── applyStaticHooks.js
                        ├── applyStatics.js
                        ├── castBulkWrite.js
                        ├── decorateBulkWriteResult.js
                        ├── discriminator.js
                        └── pushNestedArrayPaths.js
                    ├── omitUndefined.js
                    ├── once.js
                    ├── parallelLimit.js
                    ├── [path]
                        ├── parentPaths.js
                        └── setDottedPath.js
                    ├── pluralize.js
                    ├── [populate]
                        ├── assignRawDocsToIdStructure.js
                        ├── assignVals.js
                        ├── createPopulateQueryFilter.js
                        ├── getModelsMapForPopulate.js
                        ├── getSchemaTypes.js
                        ├── getVirtual.js
                        ├── leanPopulateMap.js
                        ├── lookupLocalFields.js
                        ├── markArraySubdocsPopulated.js
                        ├── modelNamesFromRefPath.js
                        ├── removeDeselectedForeignField.js
                        ├── setPopulatedVirtualValue.js
                        ├── skipPopulateValue.js
                        └── validateRef.js
                    ├── printJestWarning.js
                    ├── processConnectionOptions.js
                    ├── [projection]
                        ├── applyProjection.js
                        ├── hasIncludedChildren.js
                        ├── isDefiningProjection.js
                        ├── isExclusive.js
                        ├── isInclusive.js
                        ├── isNestedProjection.js
                        ├── isPathExcluded.js
                        ├── isPathSelectedInclusive.js
                        ├── isSubpath.js
                        └── parseProjection.js
                    ├── promiseOrCallback.js
                    ├── [query]
                        ├── applyGlobalOption.js
                        ├── cast$expr.js
                        ├── castFilterPath.js
                        ├── castUpdate.js
                        ├── getEmbeddedDiscriminatorPath.js
                        ├── handleImmutable.js
                        ├── handleReadPreferenceAliases.js
                        ├── hasDollarKeys.js
                        ├── isOperator.js
                        ├── sanitizeFilter.js
                        ├── sanitizeProjection.js
                        ├── selectPopulatedFields.js
                        ├── trusted.js
                        └── validOps.js
                    ├── [schema]
                        ├── addAutoId.js
                        ├── applyBuiltinPlugins.js
                        ├── applyPlugins.js
                        ├── applyReadConcern.js
                        ├── applyWriteConcern.js
                        ├── cleanPositionalOperators.js
                        ├── getIndexes.js
                        ├── getKeysInSchemaOrder.js
                        ├── getPath.js
                        ├── getSubdocumentStrictValue.js
                        ├── handleIdOption.js
                        ├── handleTimestampOption.js
                        ├── idGetter.js
                        └── merge.js
                    ├── [schematype]
                        └── handleImmutable.js
                    ├── setDefaultsOnInsert.js
                    ├── specialProperties.js
                    ├── symbols.js
                    ├── timers.js
                    ├── [timestamps]
                        ├── setDocumentTimestamps.js
                        └── setupTimestamps.js
                    ├── [topology]
                        ├── allServersUnknown.js
                        ├── isAtlas.js
                        └── isSSLError.js
                    ├── [update]
                        ├── applyTimestampsToChildren.js
                        ├── applyTimestampsToUpdate.js
                        ├── castArrayFilters.js
                        ├── decorateUpdateWithVersionKey.js
                        ├── modifiedPaths.js
                        ├── moveImmutableProperties.js
                        ├── removeUnusedArrayFilters.js
                        └── updatedPathsByArrayFilter.js
                    └── updateValidators.js
                ├── index.js
                ├── internal.js
                ├── model.js
                ├── modifiedPathsSnapshot.js
                ├── mongoose.js
                ├── [options]
                    ├── populateOptions.js
                    ├── propertyOptions.js
                    ├── saveOptions.js
                    ├── schemaArrayOptions.js
                    ├── schemaBufferOptions.js
                    ├── schemaDateOptions.js
                    ├── schemaDocumentArrayOptions.js
                    ├── schemaMapOptions.js
                    ├── schemaNumberOptions.js
                    ├── schemaObjectIdOptions.js
                    ├── schemaStringOptions.js
                    ├── schemaSubdocumentOptions.js
                    ├── schemaTypeOptions.js
                    └── virtualOptions.js
                ├── options.js
                ├── [plugins]
                    ├── index.js
                    ├── saveSubdocs.js
                    ├── sharding.js
                    ├── trackTransaction.js
                    └── validateBeforeSave.js
                ├── query.js
                ├── queryHelpers.js
                ├── [schema]
                    ├── array.js
                    ├── bigint.js
                    ├── boolean.js
                    ├── buffer.js
                    ├── date.js
                    ├── decimal128.js
                    ├── documentArray.js
                    ├── documentArrayElement.js
                    ├── double.js
                    ├── index.js
                    ├── int32.js
                    ├── map.js
                    ├── mixed.js
                    ├── number.js
                    ├── objectId.js
                    ├── [operators]
                        ├── bitwise.js
                        ├── exists.js
                        ├── geospatial.js
                        ├── helpers.js
                        ├── text.js
                        └── type.js
                    ├── string.js
                    ├── subdocument.js
                    ├── symbols.js
                    └── uuid.js
                ├── schema.js
                ├── schemaType.js
                ├── stateMachine.js
                ├── [types]
                    ├── [array]
                        ├── index.js
                        ├── isMongooseArray.js
                        └── [methods]
                            └── index.js
                    ├── arraySubdocument.js
                    ├── buffer.js
                    ├── decimal128.js
                    ├── [documentArray]
                        ├── index.js
                        ├── isMongooseDocumentArray.js
                        └── [methods]
                            └── index.js
                    ├── double.js
                    ├── index.js
                    ├── map.js
                    ├── objectid.js
                    ├── subdocument.js
                    └── uuid.js
                ├── utils.js
                ├── validOptions.js
                └── virtualType.js
            ├── [node_modules]
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── [types]
                ├── aggregate.d.ts
                ├── augmentations.d.ts
                ├── callback.d.ts
                ├── collection.d.ts
                ├── connection.d.ts
                ├── cursor.d.ts
                ├── document.d.ts
                ├── error.d.ts
                ├── expressions.d.ts
                ├── helpers.d.ts
                ├── index.d.ts
                ├── indexes.d.ts
                ├── inferrawdoctype.d.ts
                ├── inferschematype.d.ts
                ├── middlewares.d.ts
                ├── models.d.ts
                ├── mongooseoptions.d.ts
                ├── pipelinestage.d.ts
                ├── populate.d.ts
                ├── query.d.ts
                ├── schemaoptions.d.ts
                ├── schematypes.d.ts
                ├── session.d.ts
                ├── types.d.ts
                ├── utility.d.ts
                ├── validation.d.ts
                └── virtuals.d.ts
        ├── [morgan]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                └── [on-finished]
                    ├── HISTORY.md
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    └── package.json
            └── package.json
        ├── [mpath]
            ├── .travis.yml
            ├── History.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.js
            ├── [lib]
                ├── index.js
                └── stringToParts.js
            ├── package.json
            └── [test]
                ├── .eslintrc.yml
                ├── index.js
                └── stringToParts.js
        ├── [mquery]
            ├── [.github]
                ├── ISSUE_TEMPLATE.md
                └── PULL_REQUEST_TEMPLATE.md
            ├── History.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── [lib]
                ├── [collection]
                    ├── collection.js
                    ├── index.js
                    └── node.js
                ├── env.js
                ├── mquery.js
                ├── permissions.js
                └── utils.js
            ├── [node_modules]
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [ms]
            ├── index.js
            ├── license.md
            ├── package.json
            └── readme.md
        ├── [natural-compare]
            ├── README.md
            ├── index.js
            └── package.json
        ├── [negotiator]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── charset.js
                ├── encoding.js
                ├── language.js
                └── mediaType.js
            └── package.json
        ├── [node-addon-api]
            ├── LICENSE.md
            ├── README.md
            ├── common.gypi
            ├── except.gypi
            ├── index.js
            ├── napi-inl.deprecated.h
            ├── napi-inl.h
            ├── napi.h
            ├── node_api.gyp
            ├── noexcept.gypi
            ├── nothing.c
            ├── package-support.json
            ├── package.json
            └── [tools]
                ├── README.md
                ├── check-napi.js
                ├── clang-format.js
                ├── conversion.js
                └── eslint-format.js
        ├── [node-fetch]
            ├── LICENSE.md
            ├── README.md
            ├── browser.js
            ├── [lib]
                ├── index.es.js
                ├── index.js
                └── index.mjs
            ├── [node_modules]
                ├── [tr46]
                    ├── .npmignore
                    ├── index.js
                    ├── [lib]
                        ├── .gitkeep
                        └── mappingTable.json
                    └── package.json
                ├── [webidl-conversions]
                    ├── LICENSE.md
                    ├── README.md
                    ├── [lib]
                        └── index.js
                    └── package.json
                └── [whatwg-url]
                    ├── LICENSE.txt
                    ├── README.md
                    ├── [lib]
                        ├── URL-impl.js
                        ├── URL.js
                        ├── public-api.js
                        ├── url-state-machine.js
                        └── utils.js
                    └── package.json
            └── package.json
        ├── [node-int64]
            ├── .npmignore
            ├── Int64.js
            ├── LICENSE
            ├── README.md
            ├── package.json
            └── test.js
        ├── [node-releases]
            ├── LICENSE
            ├── README.md
            ├── [data]
                ├── [processed]
                    └── envs.json
                └── [release-schedule]
                    └── release-schedule.json
            └── package.json
        ├── [nodemon]
            ├── .prettierrc.json
            ├── LICENSE
            ├── README.md
            ├── [bin]
                ├── nodemon.js
                └── windows-kill.exe
            ├── [doc]
                └── [cli]
                    ├── authors.txt
                    ├── config.txt
                    ├── help.txt
                    ├── logo.txt
                    ├── options.txt
                    ├── topics.txt
                    ├── usage.txt
                    └── whoami.txt
            ├── index.d.ts
            ├── jsconfig.json
            ├── [lib]
                ├── [cli]
                    ├── index.js
                    └── parse.js
                ├── [config]
                    ├── command.js
                    ├── defaults.js
                    ├── exec.js
                    ├── index.js
                    └── load.js
                ├── [help]
                    └── index.js
                ├── index.js
                ├── [monitor]
                    ├── index.js
                    ├── match.js
                    ├── run.js
                    ├── signals.js
                    └── watch.js
                ├── nodemon.js
                ├── [rules]
                    ├── add.js
                    ├── index.js
                    └── parse.js
                ├── spawn.js
                ├── [utils]
                    ├── bus.js
                    ├── clone.js
                    ├── colour.js
                    ├── index.js
                    ├── log.js
                    └── merge.js
                └── version.js
            ├── [node_modules]
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                ├── [has-flag]
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
                └── [supports-color]
                    ├── browser.js
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [nopt]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── nopt.js
            ├── [lib]
                └── nopt.js
            └── package.json
        ├── [normalize-path]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [npm-run-path]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [npmlog]
            ├── LICENSE
            ├── README.md
            ├── log.js
            └── package.json
        ├── [object-assign]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [object-inspect]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── [example]
                ├── all.js
                ├── circular.js
                ├── fn.js
                └── inspect.js
            ├── index.js
            ├── package-support.json
            ├── package.json
            ├── readme.markdown
            ├── [test]
                ├── bigint.js
                ├── [browser]
                    └── dom.js
                ├── circular.js
                ├── deep.js
                ├── element.js
                ├── err.js
                ├── fakes.js
                ├── fn.js
                ├── global.js
                ├── has.js
                ├── holes.js
                ├── indent-option.js
                ├── inspect.js
                ├── lowbyte.js
                ├── number.js
                ├── quoteStyle.js
                ├── toStringTag.js
                ├── undef.js
                └── values.js
            ├── test-core-js.js
            └── util.inspect.js
        ├── [on-finished]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [on-headers]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [once]
            ├── LICENSE
            ├── README.md
            ├── once.js
            └── package.json
        ├── [one-time]
            ├── LICENSE
            ├── README.md
            ├── async.js
            ├── index.js
            └── package.json
        ├── [onetime]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [optionator]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── help.js
                ├── index.js
                └── util.js
            └── package.json
        ├── [p-limit]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [p-locate]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [p-try]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [parent-module]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [parse-json]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [parseurl]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [path-exists]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [path-is-absolute]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [path-key]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [path-parse]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [path-to-regexp]
            ├── LICENSE
            ├── Readme.md
            ├── index.js
            └── package.json
        ├── [path-type]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [picocolors]
            ├── LICENSE
            ├── README.md
            ├── package.json
            ├── picocolors.browser.js
            ├── picocolors.d.ts
            ├── picocolors.js
            └── types.d.ts
        ├── [picomatch]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── constants.js
                ├── parse.js
                ├── picomatch.js
                ├── scan.js
                └── utils.js
            └── package.json
        ├── [pidtree]
            ├── [bin]
                └── pidtree.js
            ├── index.d.ts
            ├── index.js
            ├── [lib]
                ├── bin.js
                ├── get.js
                ├── pidtree.js
                ├── ps.js
                └── wmic.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [pirates]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── [lib]
                └── index.js
            └── package.json
        ├── [pkg-dir]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                ├── [find-up]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [locate-path]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [p-limit]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [p-locate]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [prelude-ls]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── Func.js
                ├── List.js
                ├── Num.js
                ├── Obj.js
                ├── Str.js
                └── index.js
            └── package.json
        ├── [prettier]
            ├── LICENSE
            ├── README.md
            ├── THIRD-PARTY-NOTICES.md
            ├── [bin]
                └── prettier.cjs
            ├── doc.d.ts
            ├── doc.js
            ├── doc.mjs
            ├── index.cjs
            ├── index.d.ts
            ├── index.mjs
            ├── [internal]
                └── cli.mjs
            ├── package.json
            ├── [plugins]
                ├── acorn.d.ts
                ├── acorn.js
                ├── acorn.mjs
                ├── angular.d.ts
                ├── angular.js
                ├── angular.mjs
                ├── babel.d.ts
                ├── babel.js
                ├── babel.mjs
                ├── estree.d.ts
                ├── estree.js
                ├── estree.mjs
                ├── flow.d.ts
                ├── flow.js
                ├── flow.mjs
                ├── glimmer.d.ts
                ├── glimmer.js
                ├── glimmer.mjs
                ├── graphql.d.ts
                ├── graphql.js
                ├── graphql.mjs
                ├── html.d.ts
                ├── html.js
                ├── html.mjs
                ├── markdown.d.ts
                ├── markdown.js
                ├── markdown.mjs
                ├── meriyah.d.ts
                ├── meriyah.js
                ├── meriyah.mjs
                ├── postcss.d.ts
                ├── postcss.js
                ├── postcss.mjs
                ├── typescript.d.ts
                ├── typescript.js
                ├── typescript.mjs
                ├── yaml.d.ts
                ├── yaml.js
                └── yaml.mjs
            ├── standalone.d.ts
            ├── standalone.js
            └── standalone.mjs
        ├── [prettier-linter-helpers]
            ├── .editorconfig
            ├── .eslintignore
            ├── .eslintrc.js
            ├── [.github]
                └── CONTRIBUTING.md
            ├── .prettierignore
            ├── .prettierrc
            ├── [.vscode]
                └── settings.json
            ├── LICENSE.md
            ├── README.md
            ├── index.js
            ├── package.json
            └── [test]
                └── index.test.js
        ├── [pretty-format]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── collections.js
                ├── index.d.ts
                ├── index.js
                ├── [plugins]
                    ├── AsymmetricMatcher.js
                    ├── DOMCollection.js
                    ├── DOMElement.js
                    ├── Immutable.js
                    ├── ReactElement.js
                    ├── ReactTestComponent.js
                    └── [lib]
                        ├── escapeHTML.js
                        └── markup.js
                └── types.js
            ├── [node_modules]
                └── [ansi-styles]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [prompts]
            ├── [dist]
                ├── [dateparts]
                    ├── datepart.js
                    ├── day.js
                    ├── hours.js
                    ├── index.js
                    ├── meridiem.js
                    ├── milliseconds.js
                    ├── minutes.js
                    ├── month.js
                    ├── seconds.js
                    └── year.js
                ├── [elements]
                    ├── autocomplete.js
                    ├── autocompleteMultiselect.js
                    ├── confirm.js
                    ├── date.js
                    ├── index.js
                    ├── multiselect.js
                    ├── number.js
                    ├── prompt.js
                    ├── select.js
                    ├── text.js
                    └── toggle.js
                ├── index.js
                ├── prompts.js
                └── [util]
                    ├── action.js
                    ├── clear.js
                    ├── entriesToDisplay.js
                    ├── figures.js
                    ├── index.js
                    ├── lines.js
                    ├── strip.js
                    ├── style.js
                    └── wrap.js
            ├── index.js
            ├── [lib]
                ├── [dateparts]
                    ├── datepart.js
                    ├── day.js
                    ├── hours.js
                    ├── index.js
                    ├── meridiem.js
                    ├── milliseconds.js
                    ├── minutes.js
                    ├── month.js
                    ├── seconds.js
                    └── year.js
                ├── [elements]
                    ├── autocomplete.js
                    ├── autocompleteMultiselect.js
                    ├── confirm.js
                    ├── date.js
                    ├── index.js
                    ├── multiselect.js
                    ├── number.js
                    ├── prompt.js
                    ├── select.js
                    ├── text.js
                    └── toggle.js
                ├── index.js
                ├── prompts.js
                └── [util]
                    ├── action.js
                    ├── clear.js
                    ├── entriesToDisplay.js
                    ├── figures.js
                    ├── index.js
                    ├── lines.js
                    ├── strip.js
                    ├── style.js
                    └── wrap.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [proxy-addr]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [pstree.remy]
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── index.js
                ├── tree.js
                └── utils.js
            ├── package.json
            └── [tests]
                ├── [fixtures]
                    ├── index.js
                    ├── out1
                    └── out2
                └── index.test.js
        ├── [punycode]
            ├── LICENSE-MIT.txt
            ├── README.md
            ├── package.json
            ├── punycode.es6.js
            └── punycode.js
        ├── [pure-rand]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── [distribution]
                    ├── Distribution.js
                    ├── UniformArrayIntDistribution.js
                    ├── UniformBigIntDistribution.js
                    ├── UniformIntDistribution.js
                    ├── UnsafeUniformArrayIntDistribution.js
                    ├── UnsafeUniformBigIntDistribution.js
                    ├── UnsafeUniformIntDistribution.js
                    └── [internals]
                        ├── ArrayInt.js
                        ├── UnsafeUniformArrayIntDistributionInternal.js
                        └── UnsafeUniformIntDistributionInternal.js
                ├── [esm]
                    ├── [distribution]
                        ├── Distribution.js
                        ├── UniformArrayIntDistribution.js
                        ├── UniformBigIntDistribution.js
                        ├── UniformIntDistribution.js
                        ├── UnsafeUniformArrayIntDistribution.js
                        ├── UnsafeUniformBigIntDistribution.js
                        ├── UnsafeUniformIntDistribution.js
                        └── [internals]
                            ├── ArrayInt.js
                            ├── UnsafeUniformArrayIntDistributionInternal.js
                            └── UnsafeUniformIntDistributionInternal.js
                    ├── [generator]
                        ├── LinearCongruential.js
                        ├── MersenneTwister.js
                        ├── RandomGenerator.js
                        ├── XorShift.js
                        └── XoroShiro.js
                    ├── package.json
                    ├── pure-rand-default.js
                    ├── pure-rand.js
                    └── [types]
                        ├── [distribution]
                            ├── Distribution.d.ts
                            ├── UniformArrayIntDistribution.d.ts
                            ├── UniformBigIntDistribution.d.ts
                            ├── UniformIntDistribution.d.ts
                            ├── UnsafeUniformArrayIntDistribution.d.ts
                            ├── UnsafeUniformBigIntDistribution.d.ts
                            ├── UnsafeUniformIntDistribution.d.ts
                            └── [internals]
                                ├── ArrayInt.d.ts
                                ├── UnsafeUniformArrayIntDistributionInternal.d.ts
                                └── UnsafeUniformIntDistributionInternal.d.ts
                        ├── [generator]
                            ├── LinearCongruential.d.ts
                            ├── MersenneTwister.d.ts
                            ├── RandomGenerator.d.ts
                            ├── XorShift.d.ts
                            └── XoroShiro.d.ts
                        ├── pure-rand-default.d.ts
                        └── pure-rand.d.ts
                ├── [generator]
                    ├── LinearCongruential.js
                    ├── MersenneTwister.js
                    ├── RandomGenerator.js
                    ├── XorShift.js
                    └── XoroShiro.js
                ├── pure-rand-default.js
                ├── pure-rand.js
                └── [types]
                    ├── [distribution]
                        ├── Distribution.d.ts
                        ├── UniformArrayIntDistribution.d.ts
                        ├── UniformBigIntDistribution.d.ts
                        ├── UniformIntDistribution.d.ts
                        ├── UnsafeUniformArrayIntDistribution.d.ts
                        ├── UnsafeUniformBigIntDistribution.d.ts
                        ├── UnsafeUniformIntDistribution.d.ts
                        └── [internals]
                            ├── ArrayInt.d.ts
                            ├── UnsafeUniformArrayIntDistributionInternal.d.ts
                            └── UnsafeUniformIntDistributionInternal.d.ts
                    ├── [generator]
                        ├── LinearCongruential.d.ts
                        ├── MersenneTwister.d.ts
                        ├── RandomGenerator.d.ts
                        ├── XorShift.d.ts
                        └── XoroShiro.d.ts
                    ├── pure-rand-default.d.ts
                    └── pure-rand.d.ts
            └── package.json
        ├── [qs]
            ├── .editorconfig
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE.md
            ├── README.md
            ├── [dist]
                └── qs.js
            ├── [lib]
                ├── formats.js
                ├── index.js
                ├── parse.js
                ├── stringify.js
                └── utils.js
            ├── package.json
            └── [test]
                ├── empty-keys-cases.js
                ├── parse.js
                ├── stringify.js
                └── utils.js
        ├── [queue-microtask]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [range-parser]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [raw-body]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [react-is]
            ├── LICENSE
            ├── README.md
            ├── [cjs]
                ├── react-is.development.js
                └── react-is.production.min.js
            ├── index.js
            ├── package.json
            └── [umd]
                ├── react-is.development.js
                └── react-is.production.min.js
        ├── [readable-stream]
            ├── CONTRIBUTING.md
            ├── GOVERNANCE.md
            ├── LICENSE
            ├── README.md
            ├── errors-browser.js
            ├── errors.js
            ├── experimentalWarning.js
            ├── [lib]
                ├── _stream_duplex.js
                ├── _stream_passthrough.js
                ├── _stream_readable.js
                ├── _stream_transform.js
                ├── _stream_writable.js
                └── [internal]
                    └── [streams]
                        ├── async_iterator.js
                        ├── buffer_list.js
                        ├── destroy.js
                        ├── end-of-stream.js
                        ├── from-browser.js
                        ├── from.js
                        ├── pipeline.js
                        ├── state.js
                        ├── stream-browser.js
                        └── stream.js
            ├── package.json
            ├── readable-browser.js
            └── readable.js
        ├── [readdirp]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [regexpp]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── index.js.map
            ├── index.mjs
            ├── index.mjs.map
            └── package.json
        ├── [require-directory]
            ├── .jshintrc
            ├── .npmignore
            ├── .travis.yml
            ├── LICENSE
            ├── README.markdown
            ├── index.js
            └── package.json
        ├── [resolve]
            ├── .editorconfig
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── LICENSE
            ├── SECURITY.md
            ├── async.js
            ├── [bin]
                └── resolve
            ├── [example]
                ├── async.js
                └── sync.js
            ├── index.js
            ├── [lib]
                ├── async.js
                ├── caller.js
                ├── core.js
                ├── core.json
                ├── homedir.js
                ├── is-core.js
                ├── node-modules-paths.js
                ├── normalize-options.js
                └── sync.js
            ├── package.json
            ├── readme.markdown
            ├── sync.js
            └── [test]
                ├── core.js
                ├── [dotdot]
                    ├── [abc]
                        └── index.js
                    └── index.js
                ├── dotdot.js
                ├── faulty_basedir.js
                ├── filter.js
                ├── filter_sync.js
                ├── home_paths.js
                ├── home_paths_sync.js
                ├── mock.js
                ├── mock_sync.js
                ├── [module_dir]
                    ├── [xmodules]
                        └── [aaa]
                            └── index.js
                    ├── [ymodules]
                        └── [aaa]
                            └── index.js
                    └── [zmodules]
                        └── [bbb]
                            ├── main.js
                            └── package.json
                ├── module_dir.js
                ├── node-modules-paths.js
                ├── [node_path]
                    ├── [x]
                        ├── [aaa]
                            └── index.js
                        └── [ccc]
                            └── index.js
                    └── [y]
                        ├── [bbb]
                            └── index.js
                        └── [ccc]
                            └── index.js
                ├── node_path.js
                ├── nonstring.js
                ├── [pathfilter]
                    └── [deep_ref]
                        └── main.js
                ├── pathfilter.js
                ├── [precedence]
                    ├── [aaa]
                        ├── index.js
                        └── main.js
                    ├── aaa.js
                    ├── [bbb]
                        └── main.js
                    └── bbb.js
                ├── precedence.js
                ├── [resolver]
                    ├── [baz]
                        ├── doom.js
                        ├── package.json
                        └── quux.js
                    ├── [browser_field]
                        ├── a.js
                        ├── b.js
                        └── package.json
                    ├── cup.coffee
                    ├── [dot_main]
                        ├── index.js
                        └── package.json
                    ├── [dot_slash_main]
                        ├── index.js
                        └── package.json
                    ├── [false_main]
                        ├── index.js
                        └── package.json
                    ├── foo.js
                    ├── [incorrect_main]
                        ├── index.js
                        └── package.json
                    ├── [invalid_main]
                        └── package.json
                    ├── mug.coffee
                    ├── mug.js
                    ├── [multirepo]
                        ├── lerna.json
                        ├── package.json
                        └── [packages]
                            ├── [package-a]
                                ├── index.js
                                └── package.json
                            └── [package-b]
                                ├── index.js
                                └── package.json
                    ├── [nested_symlinks]
                        └── [mylib]
                            ├── async.js
                            ├── package.json
                            └── sync.js
                    ├── [other_path]
                        ├── [lib]
                            └── other-lib.js
                        └── root.js
                    ├── [quux]
                        └── [foo]
                            └── index.js
                    ├── [same_names]
                        ├── [foo]
                            └── index.js
                        └── foo.js
                    ├── [symlinked]
                        ├── [_]
                            ├── [node_modules]
                                └── foo.js
                            └── [symlink_target]
                                └── .gitkeep
                        └── [package]
                            ├── bar.js
                            └── package.json
                    └── [without_basedir]
                        └── main.js
                ├── resolver.js
                ├── resolver_sync.js
                ├── [shadowed_core]
                    └── [node_modules]
                        └── [util]
                            └── index.js
                ├── shadowed_core.js
                ├── subdirs.js
                └── symlinks.js
        ├── [resolve-cwd]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                └── [resolve-from]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [resolve-from]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [resolve.exports]
            ├── [dist]
                ├── index.js
                └── index.mjs
            ├── index.d.ts
            ├── license
            ├── package.json
            └── readme.md
        ├── [restore-cursor]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                ├── [onetime]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [signal-exit]
                    ├── LICENSE.txt
                    ├── README.md
                    ├── [dist]
                        ├── [cjs]
                            ├── browser.d.ts
                            ├── browser.d.ts.map
                            ├── browser.js
                            ├── browser.js.map
                            ├── index.d.ts
                            ├── index.d.ts.map
                            ├── index.js
                            ├── index.js.map
                            ├── package.json
                            ├── signals.d.ts
                            ├── signals.d.ts.map
                            ├── signals.js
                            └── signals.js.map
                        └── [mjs]
                            ├── browser.d.ts
                            ├── browser.d.ts.map
                            ├── browser.js
                            ├── browser.js.map
                            ├── index.d.ts
                            ├── index.d.ts.map
                            ├── index.js
                            ├── index.js.map
                            ├── package.json
                            ├── signals.d.ts
                            ├── signals.d.ts.map
                            ├── signals.js
                            └── signals.js.map
                    └── package.json
            ├── package.json
            └── readme.md
        ├── [reusify]
            ├── [.github]
                ├── dependabot.yml
                └── [workflows]
                    └── ci.yml
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── [benchmarks]
                ├── createNoCodeFunction.js
                ├── fib.js
                └── reuseNoCodeFunction.js
            ├── eslint.config.js
            ├── package.json
            ├── reusify.d.ts
            ├── reusify.js
            ├── test.js
            └── tsconfig.json
        ├── [rfdc]
            ├── [.github]
                └── [workflows]
                    └── ci.yml
            ├── LICENSE
            ├── default.js
            ├── index.d.ts
            ├── index.js
            ├── index.test-d.ts
            ├── package.json
            ├── readme.md
            └── [test]
                └── index.js
        ├── [rimraf]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── bin.js
            ├── package.json
            └── rimraf.js
        ├── [run-parallel]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [safe-buffer]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [safe-stable-stringify]
            ├── LICENSE
            ├── [esm]
                ├── package.json
                ├── wrapper.d.ts
                └── wrapper.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── readme.md
        ├── [safer-buffer]
            ├── LICENSE
            ├── Porting-Buffer.md
            ├── Readme.md
            ├── dangerous.js
            ├── package.json
            ├── safer.js
            └── tests.js
        ├── [semver]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── semver.js
            ├── [classes]
                ├── comparator.js
                ├── index.js
                ├── range.js
                └── semver.js
            ├── [functions]
                ├── clean.js
                ├── cmp.js
                ├── coerce.js
                ├── compare-build.js
                ├── compare-loose.js
                ├── compare.js
                ├── diff.js
                ├── eq.js
                ├── gt.js
                ├── gte.js
                ├── inc.js
                ├── lt.js
                ├── lte.js
                ├── major.js
                ├── minor.js
                ├── neq.js
                ├── parse.js
                ├── patch.js
                ├── prerelease.js
                ├── rcompare.js
                ├── rsort.js
                ├── satisfies.js
                ├── sort.js
                └── valid.js
            ├── index.js
            ├── [internal]
                ├── constants.js
                ├── debug.js
                ├── identifiers.js
                ├── lrucache.js
                ├── parse-options.js
                └── re.js
            ├── package.json
            ├── preload.js
            ├── range.bnf
            └── [ranges]
                ├── gtr.js
                ├── intersects.js
                ├── ltr.js
                ├── max-satisfying.js
                ├── min-satisfying.js
                ├── min-version.js
                ├── outside.js
                ├── simplify.js
                ├── subset.js
                ├── to-comparators.js
                └── valid.js
        ├── [send]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── SECURITY.md
            ├── index.js
            ├── [node_modules]
                ├── [encodeurl]
                    ├── HISTORY.md
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    └── package.json
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [serve-static]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [set-blocking]
            ├── CHANGELOG.md
            ├── LICENSE.txt
            ├── README.md
            ├── index.js
            └── package.json
        ├── [setprototypeof]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── [test]
                └── index.js
        ├── [shebang-command]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [shebang-regex]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [side-channel]
            ├── .editorconfig
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [side-channel-list]
            ├── .editorconfig
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── list.d.ts
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [side-channel-map]
            ├── .editorconfig
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [side-channel-weakmap]
            ├── .editorconfig
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── package.json
            ├── [test]
                └── index.js
            └── tsconfig.json
        ├── [sift]
            ├── MIT-LICENSE.txt
            ├── README.md
            ├── [es]
                ├── index.js
                └── index.js.map
            ├── [es5m]
                ├── index.js
                └── index.js.map
            ├── index.d.ts
            ├── index.js
            ├── [lib]
                ├── core.d.ts
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── operations.d.ts
                └── utils.d.ts
            ├── package.json
            ├── sift.csp.min.js
            ├── sift.csp.min.js.map
            ├── sift.min.js
            ├── sift.min.js.map
            └── [src]
                ├── core.ts
                ├── index.ts
                ├── operations.ts
                └── utils.ts
        ├── [signal-exit]
            ├── LICENSE.txt
            ├── README.md
            ├── index.js
            ├── package.json
            └── signals.js
        ├── [simple-swizzle]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [node_modules]
                └── [is-arrayish]
                    ├── LICENSE
                    ├── README.md
                    ├── index.js
                    ├── package.json
            └── package.json
        ├── [simple-update-notifier]
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.d.ts
                └── index.js
            ├── package.json
            └── [src]
                ├── borderedText.ts
                ├── cache.spec.ts
                ├── cache.ts
                ├── getDistVersion.spec.ts
                ├── getDistVersion.ts
                ├── hasNewVersion.spec.ts
                ├── hasNewVersion.ts
                ├── index.spec.ts
                ├── index.ts
                ├── isNpmOrYarn.ts
                └── types.ts
        ├── [sisteransi]
            ├── license
            ├── package.json
            ├── readme.md
            └── [src]
                ├── index.js
                └── sisteransi.d.ts
        ├── [slash]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [slice-ansi]
            ├── index.js
            ├── license
            ├── [node_modules]
                └── [ansi-styles]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [source-map]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── source-map.debug.js
                ├── source-map.js
                ├── source-map.min.js
                └── source-map.min.js.map
            ├── [lib]
                ├── array-set.js
                ├── base64-vlq.js
                ├── base64.js
                ├── binary-search.js
                ├── mapping-list.js
                ├── quick-sort.js
                ├── source-map-consumer.js
                ├── source-map-generator.js
                ├── source-node.js
                └── util.js
            ├── package.json
            ├── source-map.d.ts
            └── source-map.js
        ├── [source-map-support]
            ├── LICENSE.md
            ├── README.md
            ├── browser-source-map-support.js
            ├── package.json
            ├── register.js
            └── source-map-support.js
        ├── [sparse-bitfield]
            ├── .npmignore
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [sprintf-js]
            ├── .npmignore
            ├── LICENSE
            ├── README.md
            ├── bower.json
            ├── [demo]
                └── angular.html
            ├── [dist]
                ├── angular-sprintf.min.js
                ├── angular-sprintf.min.js.map
                ├── angular-sprintf.min.map
                ├── sprintf.min.js
                ├── sprintf.min.js.map
                └── sprintf.min.map
            ├── gruntfile.js
            ├── package.json
            ├── [src]
                ├── angular-sprintf.js
                └── sprintf.js
            └── [test]
                └── test.js
        ├── [stack-trace]
            ├── .npmignore
            ├── License
            ├── Makefile
            ├── Readme.md
            ├── [lib]
                └── stack-trace.js
            └── package.json
        ├── [stack-utils]
            ├── LICENSE.md
            ├── index.js
            ├── [node_modules]
                └── [escape-string-regexp]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [statuses]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── codes.json
            ├── index.js
            └── package.json
        ├── [string-argv]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [commonjs]
                ├── index.js
                └── package.json
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [string-length]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [string-width]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                ├── [ansi-regex]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [strip-ansi]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [string_decoder]
            ├── LICENSE
            ├── README.md
            ├── [lib]
                └── string_decoder.js
            └── package.json
        ├── [strip-ansi]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [strip-bom]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [strip-final-newline]
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [strip-json-comments]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [superagent]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── superagent.js
                └── superagent.min.js
            ├── [lib]
                ├── agent-base.js
                ├── client.js
                ├── [node]
                    ├── agent.js
                    ├── http2wrapper.js
                    ├── index.js
                    ├── [parsers]
                        ├── image.js
                        ├── index.js
                        ├── json.js
                        ├── text.js
                        └── urlencoded.js
                    ├── response.js
                    └── unzip.js
                ├── request-base.js
                ├── response-base.js
                └── utils.js
            ├── [node_modules]
                ├── [.bin]
                    └── mime
                ├── [debug]
                    ├── LICENSE
                    ├── README.md
                    ├── package.json
                    └── [src]
                        ├── browser.js
                        ├── common.js
                        ├── index.js
                        └── node.js
                ├── [mime]
                    ├── CHANGELOG.md
                    ├── LICENSE
                    ├── Mime.js
                    ├── README.md
                    ├── cli.js
                    ├── index.js
                    ├── lite.js
                    ├── package.json
                    └── [types]
                        ├── other.js
                        └── standard.js
                └── [ms]
                    ├── index.js
                    ├── license.md
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [supertest]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── agent.js
                └── test.js
            └── package.json
        ├── [supports-color]
            ├── browser.js
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [supports-preserve-symlinks-flag]
            ├── .eslintrc
            ├── [.github]
                └── FUNDING.yml
            ├── .nycrc
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── browser.js
            ├── index.js
            ├── package.json
            └── [test]
                └── index.js
        ├── [synckit]
            ├── LICENSE
            ├── README.md
            ├── index.d.cts
            ├── [lib]
                ├── common.d.ts
                ├── common.js
                ├── common.js.map
                ├── constants.d.ts
                ├── constants.js
                ├── constants.js.map
                ├── helpers.d.ts
                ├── helpers.js
                ├── helpers.js.map
                ├── index.cjs
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── types.d.ts
                ├── types.js
                └── types.js.map
            └── package.json
        ├── [tar]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── create.js
                ├── extract.js
                ├── get-write-flag.js
                ├── header.js
                ├── high-level-opt.js
                ├── large-numbers.js
                ├── list.js
                ├── mkdir.js
                ├── mode-fix.js
                ├── normalize-unicode.js
                ├── normalize-windows-path.js
                ├── pack.js
                ├── parse.js
                ├── path-reservations.js
                ├── pax.js
                ├── read-entry.js
                ├── replace.js
                ├── strip-absolute-path.js
                ├── strip-trailing-slashes.js
                ├── types.js
                ├── unpack.js
                ├── update.js
                ├── warn-mixin.js
                ├── winchars.js
                └── write-entry.js
            ├── [node_modules]
                └── [yallist]
                    ├── LICENSE
                    ├── README.md
                    ├── iterator.js
                    ├── package.json
                    └── yallist.js
            └── package.json
        ├── [test-exclude]
            ├── CHANGELOG.md
            ├── LICENSE.txt
            ├── README.md
            ├── index.js
            ├── is-outside-dir-posix.js
            ├── is-outside-dir-win32.js
            ├── is-outside-dir.js
            └── package.json
        ├── [text-hex]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── test.js
        ├── [text-table]
            ├── .travis.yml
            ├── LICENSE
            ├── [example]
                ├── align.js
                ├── center.js
                ├── dotalign.js
                ├── doubledot.js
                └── table.js
            ├── index.js
            ├── package.json
            ├── readme.markdown
            └── [test]
                ├── align.js
                ├── ansi-colors.js
                ├── center.js
                ├── dotalign.js
                ├── doubledot.js
                └── table.js
        ├── [tmpl]
            ├── [lib]
                └── tmpl.js
            ├── license
            ├── package.json
            └── readme.md
        ├── [to-regex-range]
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [toidentifier]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [touch]
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── nodetouch.js
            ├── index.js
            └── package.json
        ├── [tr46]
            ├── LICENSE.md
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── mappingTable.json
                ├── regexes.js
                └── statusMapping.js
            └── package.json
        ├── [triple-beam]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [config]
                ├── cli.js
                ├── index.js
                ├── npm.js
                └── syslog.js
            ├── index.js
            └── package.json
        ├── [tslib]
            ├── CopyrightNotice.txt
            ├── LICENSE.txt
            ├── README.md
            ├── SECURITY.md
            ├── [modules]
                ├── index.d.ts
                ├── index.js
                └── package.json
            ├── package.json
            ├── tslib.d.ts
            ├── tslib.es6.html
            ├── tslib.es6.js
            ├── tslib.es6.mjs
            ├── tslib.html
            └── tslib.js
        ├── [tsutils]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── index.js.map
            ├── [node_modules]
                └── [tslib]
                    ├── CopyrightNotice.txt
                    ├── LICENSE.txt
                    ├── README.md
                    ├── [modules]
                        ├── index.js
                        └── package.json
                    ├── package.json
                    ├── [test]
                        └── [validateModuleExportsMatchCommonJS]
                            ├── index.js
                            └── package.json
                    ├── tslib.d.ts
                    ├── tslib.es6.html
                    ├── tslib.es6.js
                    ├── tslib.html
                    └── tslib.js
            ├── package.json
            ├── [typeguard]
                ├── [2.8]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── node.d.ts
                    ├── node.js
                    ├── node.js.map
                    ├── type.d.ts
                    ├── type.js
                    └── type.js.map
                ├── [2.9]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── node.d.ts
                    ├── node.js
                    ├── node.js.map
                    ├── type.d.ts
                    ├── type.js
                    └── type.js.map
                ├── [3.0]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── node.d.ts
                    ├── node.js
                    ├── node.js.map
                    ├── type.d.ts
                    ├── type.js
                    └── type.js.map
                ├── [3.2]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── node.d.ts
                    ├── node.js
                    ├── node.js.map
                    ├── type.d.ts
                    ├── type.js
                    └── type.js.map
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── [next]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── node.d.ts
                    ├── node.js
                    ├── node.js.map
                    ├── type.d.ts
                    ├── type.js
                    └── type.js.map
                ├── node.d.ts
                ├── node.js
                ├── node.js.map
                ├── type.d.ts
                ├── type.js
                └── type.js.map
            └── [util]
                ├── control-flow.d.ts
                ├── control-flow.js
                ├── control-flow.js.map
                ├── convert-ast.d.ts
                ├── convert-ast.js
                ├── convert-ast.js.map
                ├── index.d.ts
                ├── index.js
                ├── index.js.map
                ├── type.d.ts
                ├── type.js
                ├── type.js.map
                ├── usage.d.ts
                ├── usage.js
                ├── usage.js.map
                ├── util.d.ts
                ├── util.js
                └── util.js.map
        ├── [type-check]
            ├── LICENSE
            ├── README.md
            ├── [lib]
                ├── check.js
                ├── index.js
                └── parse-type.js
            └── package.json
        ├── [type-detect]
            ├── LICENSE
            ├── README.md
            ├── index.js
            ├── package.json
            └── type-detect.js
        ├── [type-fest]
            ├── base.d.ts
            ├── index.d.ts
            ├── license
            ├── package.json
            ├── readme.md
            ├── [source]
                ├── async-return-type.d.ts
                ├── asyncify.d.ts
                ├── basic.d.ts
                ├── conditional-except.d.ts
                ├── conditional-keys.d.ts
                ├── conditional-pick.d.ts
                ├── entries.d.ts
                ├── entry.d.ts
                ├── except.d.ts
                ├── fixed-length-array.d.ts
                ├── iterable-element.d.ts
                ├── literal-union.d.ts
                ├── merge-exclusive.d.ts
                ├── merge.d.ts
                ├── mutable.d.ts
                ├── opaque.d.ts
                ├── package-json.d.ts
                ├── partial-deep.d.ts
                ├── promisable.d.ts
                ├── promise-value.d.ts
                ├── readonly-deep.d.ts
                ├── require-at-least-one.d.ts
                ├── require-exactly-one.d.ts
                ├── set-optional.d.ts
                ├── set-required.d.ts
                ├── set-return-type.d.ts
                ├── stringified.d.ts
                ├── tsconfig-json.d.ts
                ├── union-to-intersection.d.ts
                ├── utilities.d.ts
                └── value-of.d.ts
            └── [ts41]
                ├── camel-case.d.ts
                ├── delimiter-case.d.ts
                ├── index.d.ts
                ├── kebab-case.d.ts
                ├── pascal-case.d.ts
                └── snake-case.d.ts
        ├── [type-is]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [typescript]
            ├── LICENSE.txt
            ├── README.md
            ├── SECURITY.md
            ├── ThirdPartyNoticeText.txt
            ├── [bin]
                ├── tsc
                └── tsserver
            ├── [lib]
                ├── _tsc.js
                ├── _tsserver.js
                ├── _typingsInstaller.js
                ├── [cs]
                    └── diagnosticMessages.generated.json
                ├── [de]
                    └── diagnosticMessages.generated.json
                ├── [es]
                    └── diagnosticMessages.generated.json
                ├── [fr]
                    └── diagnosticMessages.generated.json
                ├── [it]
                    └── diagnosticMessages.generated.json
                ├── [ja]
                    └── diagnosticMessages.generated.json
                ├── [ko]
                    └── diagnosticMessages.generated.json
                ├── lib.d.ts
                ├── lib.decorators.d.ts
                ├── lib.decorators.legacy.d.ts
                ├── lib.dom.asynciterable.d.ts
                ├── lib.dom.d.ts
                ├── lib.dom.iterable.d.ts
                ├── lib.es2015.collection.d.ts
                ├── lib.es2015.core.d.ts
                ├── lib.es2015.d.ts
                ├── lib.es2015.generator.d.ts
                ├── lib.es2015.iterable.d.ts
                ├── lib.es2015.promise.d.ts
                ├── lib.es2015.proxy.d.ts
                ├── lib.es2015.reflect.d.ts
                ├── lib.es2015.symbol.d.ts
                ├── lib.es2015.symbol.wellknown.d.ts
                ├── lib.es2016.array.include.d.ts
                ├── lib.es2016.d.ts
                ├── lib.es2016.full.d.ts
                ├── lib.es2016.intl.d.ts
                ├── lib.es2017.arraybuffer.d.ts
                ├── lib.es2017.d.ts
                ├── lib.es2017.date.d.ts
                ├── lib.es2017.full.d.ts
                ├── lib.es2017.intl.d.ts
                ├── lib.es2017.object.d.ts
                ├── lib.es2017.sharedmemory.d.ts
                ├── lib.es2017.string.d.ts
                ├── lib.es2017.typedarrays.d.ts
                ├── lib.es2018.asyncgenerator.d.ts
                ├── lib.es2018.asynciterable.d.ts
                ├── lib.es2018.d.ts
                ├── lib.es2018.full.d.ts
                ├── lib.es2018.intl.d.ts
                ├── lib.es2018.promise.d.ts
                ├── lib.es2018.regexp.d.ts
                ├── lib.es2019.array.d.ts
                ├── lib.es2019.d.ts
                ├── lib.es2019.full.d.ts
                ├── lib.es2019.intl.d.ts
                ├── lib.es2019.object.d.ts
                ├── lib.es2019.string.d.ts
                ├── lib.es2019.symbol.d.ts
                ├── lib.es2020.bigint.d.ts
                ├── lib.es2020.d.ts
                ├── lib.es2020.date.d.ts
                ├── lib.es2020.full.d.ts
                ├── lib.es2020.intl.d.ts
                ├── lib.es2020.number.d.ts
                ├── lib.es2020.promise.d.ts
                ├── lib.es2020.sharedmemory.d.ts
                ├── lib.es2020.string.d.ts
                ├── lib.es2020.symbol.wellknown.d.ts
                ├── lib.es2021.d.ts
                ├── lib.es2021.full.d.ts
                ├── lib.es2021.intl.d.ts
                ├── lib.es2021.promise.d.ts
                ├── lib.es2021.string.d.ts
                ├── lib.es2021.weakref.d.ts
                ├── lib.es2022.array.d.ts
                ├── lib.es2022.d.ts
                ├── lib.es2022.error.d.ts
                ├── lib.es2022.full.d.ts
                ├── lib.es2022.intl.d.ts
                ├── lib.es2022.object.d.ts
                ├── lib.es2022.regexp.d.ts
                ├── lib.es2022.string.d.ts
                ├── lib.es2023.array.d.ts
                ├── lib.es2023.collection.d.ts
                ├── lib.es2023.d.ts
                ├── lib.es2023.full.d.ts
                ├── lib.es2023.intl.d.ts
                ├── lib.es2024.arraybuffer.d.ts
                ├── lib.es2024.collection.d.ts
                ├── lib.es2024.d.ts
                ├── lib.es2024.full.d.ts
                ├── lib.es2024.object.d.ts
                ├── lib.es2024.promise.d.ts
                ├── lib.es2024.regexp.d.ts
                ├── lib.es2024.sharedmemory.d.ts
                ├── lib.es2024.string.d.ts
                ├── lib.es5.d.ts
                ├── lib.es6.d.ts
                ├── lib.esnext.array.d.ts
                ├── lib.esnext.collection.d.ts
                ├── lib.esnext.d.ts
                ├── lib.esnext.decorators.d.ts
                ├── lib.esnext.disposable.d.ts
                ├── lib.esnext.float16.d.ts
                ├── lib.esnext.full.d.ts
                ├── lib.esnext.intl.d.ts
                ├── lib.esnext.iterator.d.ts
                ├── lib.esnext.promise.d.ts
                ├── lib.scripthost.d.ts
                ├── lib.webworker.asynciterable.d.ts
                ├── lib.webworker.d.ts
                ├── lib.webworker.importscripts.d.ts
                ├── lib.webworker.iterable.d.ts
                ├── [pl]
                    └── diagnosticMessages.generated.json
                ├── [pt-br]
                    └── diagnosticMessages.generated.json
                ├── [ru]
                    └── diagnosticMessages.generated.json
                ├── [tr]
                    └── diagnosticMessages.generated.json
                ├── tsc.js
                ├── tsserver.js
                ├── tsserverlibrary.d.ts
                ├── tsserverlibrary.js
                ├── typesMap.json
                ├── typescript.d.ts
                ├── typescript.js
                ├── typingsInstaller.js
                ├── watchGuard.js
                ├── [zh-cn]
                    └── diagnosticMessages.generated.json
                └── [zh-tw]
                    └── diagnosticMessages.generated.json
            └── package.json
        ├── [undefsafe]
            ├── [.github]
                └── [workflows]
                    └── release.yml
            ├── .jscsrc
            ├── .jshintrc
            ├── .travis.yml
            ├── LICENSE
            ├── README.md
            ├── example.js
            ├── [lib]
                └── undefsafe.js
            └── package.json
        ├── [undici-types]
            ├── LICENSE
            ├── README.md
            ├── agent.d.ts
            ├── api.d.ts
            ├── balanced-pool.d.ts
            ├── cache.d.ts
            ├── client.d.ts
            ├── connector.d.ts
            ├── content-type.d.ts
            ├── cookies.d.ts
            ├── diagnostics-channel.d.ts
            ├── dispatcher.d.ts
            ├── env-http-proxy-agent.d.ts
            ├── errors.d.ts
            ├── eventsource.d.ts
            ├── fetch.d.ts
            ├── file.d.ts
            ├── filereader.d.ts
            ├── formdata.d.ts
            ├── global-dispatcher.d.ts
            ├── global-origin.d.ts
            ├── handlers.d.ts
            ├── header.d.ts
            ├── index.d.ts
            ├── interceptors.d.ts
            ├── mock-agent.d.ts
            ├── mock-client.d.ts
            ├── mock-errors.d.ts
            ├── mock-interceptor.d.ts
            ├── mock-pool.d.ts
            ├── package.json
            ├── patch.d.ts
            ├── pool-stats.d.ts
            ├── pool.d.ts
            ├── proxy-agent.d.ts
            ├── readable.d.ts
            ├── retry-agent.d.ts
            ├── retry-handler.d.ts
            ├── util.d.ts
            ├── webidl.d.ts
            └── websocket.d.ts
        ├── [unpipe]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [update-browserslist-db]
            ├── LICENSE
            ├── README.md
            ├── check-npm-version.js
            ├── cli.js
            ├── index.d.ts
            ├── index.js
            ├── package.json
            └── utils.js
        ├── [uri-js]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── [es5]
                    ├── uri.all.d.ts
                    ├── uri.all.js
                    ├── uri.all.js.map
                    ├── uri.all.min.d.ts
                    ├── uri.all.min.js
                    └── uri.all.min.js.map
                └── [esnext]
                    ├── index.d.ts
                    ├── index.js
                    ├── index.js.map
                    ├── regexps-iri.d.ts
                    ├── regexps-iri.js
                    ├── regexps-iri.js.map
                    ├── regexps-uri.d.ts
                    ├── regexps-uri.js
                    ├── regexps-uri.js.map
                    ├── [schemes]
                        ├── http.d.ts
                        ├── http.js
                        ├── http.js.map
                        ├── https.d.ts
                        ├── https.js
                        ├── https.js.map
                        ├── mailto.d.ts
                        ├── mailto.js
                        ├── mailto.js.map
                        ├── urn-uuid.d.ts
                        ├── urn-uuid.js
                        ├── urn-uuid.js.map
                        ├── urn.d.ts
                        ├── urn.js
                        ├── urn.js.map
                        ├── ws.d.ts
                        ├── ws.js
                        ├── ws.js.map
                        ├── wss.d.ts
                        ├── wss.js
                        └── wss.js.map
                    ├── uri.d.ts
                    ├── uri.js
                    ├── uri.js.map
                    ├── util.d.ts
                    ├── util.js
                    └── util.js.map
            ├── package.json
        ├── [util-deprecate]
            ├── History.md
            ├── LICENSE
            ├── README.md
            ├── browser.js
            ├── node.js
            └── package.json
        ├── [utils-merge]
            ├── .npmignore
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [v8-to-istanbul]
            ├── CHANGELOG.md
            ├── LICENSE.txt
            ├── README.md
            ├── index.d.ts
            ├── index.js
            ├── [lib]
                ├── branch.js
                ├── function.js
                ├── line.js
                ├── range.js
                ├── source.js
                └── v8-to-istanbul.js
            └── package.json
        ├── [vary]
            ├── HISTORY.md
            ├── LICENSE
            ├── README.md
            ├── index.js
            └── package.json
        ├── [walker]
            ├── .travis.yml
            ├── LICENSE
            ├── [lib]
                └── walker.js
            ├── package.json
            └── readme.md
        ├── [webidl-conversions]
            ├── LICENSE.md
            ├── README.md
            ├── [lib]
                └── index.js
            └── package.json
        ├── [whatwg-url]
            ├── LICENSE.txt
            ├── README.md
            ├── index.js
            ├── [lib]
                ├── Function.js
                ├── URL-impl.js
                ├── URL.js
                ├── URLSearchParams-impl.js
                ├── URLSearchParams.js
                ├── VoidFunction.js
                ├── encoding.js
                ├── infra.js
                ├── percent-encoding.js
                ├── url-state-machine.js
                ├── urlencoded.js
                └── utils.js
            ├── package.json
            └── webidl2js-wrapper.js
        ├── [which]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [bin]
                └── node-which
            ├── package.json
            └── which.js
        ├── [wide-align]
            ├── LICENSE
            ├── README.md
            ├── align.js
            ├── [node_modules]
                ├── [emoji-regex]
                    ├── LICENSE-MIT.txt
                    ├── README.md
                    ├── [es2015]
                        ├── index.js
                        └── text.js
                    ├── index.d.ts
                    ├── index.js
                    ├── package.json
                    └── text.js
                ├── [is-fullwidth-code-point]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [string-width]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            └── package.json
        ├── [winston]
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── [winston]
                    ├── common.js
                    ├── [config]
                        └── index.js
                    ├── container.js
                    ├── create-logger.js
                    ├── exception-handler.js
                    ├── exception-stream.js
                    ├── logger.js
                    ├── profiler.js
                    ├── rejection-handler.js
                    ├── rejection-stream.js
                    ├── tail-file.js
                    └── [transports]
                        ├── console.js
                        ├── file.js
                        ├── http.js
                        ├── index.js
                        └── stream.js
                └── winston.js
            ├── index.d.ts
            ├── [lib]
                ├── [winston]
                    ├── common.js
                    ├── [config]
                        ├── index.d.ts
                        └── index.js
                    ├── container.js
                    ├── create-logger.js
                    ├── exception-handler.js
                    ├── exception-stream.js
                    ├── logger.js
                    ├── profiler.js
                    ├── rejection-handler.js
                    ├── rejection-stream.js
                    ├── tail-file.js
                    └── [transports]
                        ├── console.js
                        ├── file.js
                        ├── http.js
                        ├── index.d.ts
                        ├── index.js
                        └── stream.js
                └── winston.js
            └── package.json
        ├── [winston-transport]
            ├── .babelrc
            ├── .eslintrc
            ├── .gitattributes
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [dist]
                ├── index.js
                ├── legacy.js
                └── modern.js
            ├── index.d.ts
            ├── index.js
            ├── legacy.js
            ├── modern.js
            └── package.json
        ├── [word-wrap]
            ├── LICENSE
            ├── README.md
            ├── index.d.ts
            ├── index.js
            └── package.json
        ├── [wrap-ansi]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── [node_modules]
                ├── [ansi-regex]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                ├── [ansi-styles]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [strip-ansi]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            └── readme.md
        ├── [wrappy]
            ├── LICENSE
            ├── README.md
            ├── package.json
            └── wrappy.js
        ├── [write-file-atomic]
            ├── LICENSE.md
            ├── README.md
            ├── [lib]
                └── index.js
            └── package.json
        ├── [y18n]
            ├── CHANGELOG.md
            ├── LICENSE
            ├── README.md
            ├── [build]
                ├── index.cjs
                └── [lib]
                    ├── cjs.js
                    ├── index.js
                    └── [platform-shims]
                        └── node.js
            ├── index.mjs
            └── package.json
        ├── [yallist]
            ├── LICENSE
            ├── README.md
            ├── iterator.js
            ├── package.json
            └── yallist.js
        ├── [yaml]
            ├── LICENSE
            ├── README.md
            ├── bin.mjs
            ├── [browser]
                ├── [dist]
                    ├── [compose]
                        ├── compose-collection.js
                        ├── compose-doc.js
                        ├── compose-node.js
                        ├── compose-scalar.js
                        ├── composer.js
                        ├── resolve-block-map.js
                        ├── resolve-block-scalar.js
                        ├── resolve-block-seq.js
                        ├── resolve-end.js
                        ├── resolve-flow-collection.js
                        ├── resolve-flow-scalar.js
                        ├── resolve-props.js
                        ├── util-contains-newline.js
                        ├── util-empty-scalar-position.js
                        ├── util-flow-indent-check.js
                        └── util-map-includes.js
                    ├── [doc]
                        ├── Document.js
                        ├── anchors.js
                        ├── applyReviver.js
                        ├── createNode.js
                        └── directives.js
                    ├── errors.js
                    ├── index.js
                    ├── log.js
                    ├── [nodes]
                        ├── Alias.js
                        ├── Collection.js
                        ├── Node.js
                        ├── Pair.js
                        ├── Scalar.js
                        ├── YAMLMap.js
                        ├── YAMLSeq.js
                        ├── addPairToJSMap.js
                        ├── identity.js
                        └── toJS.js
                    ├── [parse]
                        ├── cst-scalar.js
                        ├── cst-stringify.js
                        ├── cst-visit.js
                        ├── cst.js
                        ├── lexer.js
                        ├── line-counter.js
                        └── parser.js
                    ├── public-api.js
                    ├── [schema]
                        ├── Schema.js
                        ├── [common]
                            ├── map.js
                            ├── null.js
                            ├── seq.js
                            └── string.js
                        ├── [core]
                            ├── bool.js
                            ├── float.js
                            ├── int.js
                            └── schema.js
                        ├── [json]
                            └── schema.js
                        ├── tags.js
                        └── [yaml-1.1]
                            ├── binary.js
                            ├── bool.js
                            ├── float.js
                            ├── int.js
                            ├── merge.js
                            ├── omap.js
                            ├── pairs.js
                            ├── schema.js
                            ├── set.js
                            └── timestamp.js
                    ├── [stringify]
                        ├── foldFlowLines.js
                        ├── stringify.js
                        ├── stringifyCollection.js
                        ├── stringifyComment.js
                        ├── stringifyDocument.js
                        ├── stringifyNumber.js
                        ├── stringifyPair.js
                        └── stringifyString.js
                    ├── util.js
                    └── visit.js
                ├── index.js
                └── package.json
            ├── [dist]
                ├── cli.d.ts
                ├── cli.mjs
                ├── [compose]
                    ├── compose-collection.d.ts
                    ├── compose-collection.js
                    ├── compose-doc.d.ts
                    ├── compose-doc.js
                    ├── compose-node.d.ts
                    ├── compose-node.js
                    ├── compose-scalar.d.ts
                    ├── compose-scalar.js
                    ├── composer.d.ts
                    ├── composer.js
                    ├── resolve-block-map.d.ts
                    ├── resolve-block-map.js
                    ├── resolve-block-scalar.d.ts
                    ├── resolve-block-scalar.js
                    ├── resolve-block-seq.d.ts
                    ├── resolve-block-seq.js
                    ├── resolve-end.d.ts
                    ├── resolve-end.js
                    ├── resolve-flow-collection.d.ts
                    ├── resolve-flow-collection.js
                    ├── resolve-flow-scalar.d.ts
                    ├── resolve-flow-scalar.js
                    ├── resolve-props.d.ts
                    ├── resolve-props.js
                    ├── util-contains-newline.d.ts
                    ├── util-contains-newline.js
                    ├── util-empty-scalar-position.d.ts
                    ├── util-empty-scalar-position.js
                    ├── util-flow-indent-check.d.ts
                    ├── util-flow-indent-check.js
                    ├── util-map-includes.d.ts
                    └── util-map-includes.js
                ├── [doc]
                    ├── Document.d.ts
                    ├── Document.js
                    ├── anchors.d.ts
                    ├── anchors.js
                    ├── applyReviver.d.ts
                    ├── applyReviver.js
                    ├── createNode.d.ts
                    ├── createNode.js
                    ├── directives.d.ts
                    └── directives.js
                ├── errors.d.ts
                ├── errors.js
                ├── index.d.ts
                ├── index.js
                ├── log.d.ts
                ├── log.js
                ├── [nodes]
                    ├── Alias.d.ts
                    ├── Alias.js
                    ├── Collection.d.ts
                    ├── Collection.js
                    ├── Node.d.ts
                    ├── Node.js
                    ├── Pair.d.ts
                    ├── Pair.js
                    ├── Scalar.d.ts
                    ├── Scalar.js
                    ├── YAMLMap.d.ts
                    ├── YAMLMap.js
                    ├── YAMLSeq.d.ts
                    ├── YAMLSeq.js
                    ├── addPairToJSMap.d.ts
                    ├── addPairToJSMap.js
                    ├── identity.d.ts
                    ├── identity.js
                    ├── toJS.d.ts
                    └── toJS.js
                ├── options.d.ts
                ├── [parse]
                    ├── cst-scalar.d.ts
                    ├── cst-scalar.js
                    ├── cst-stringify.d.ts
                    ├── cst-stringify.js
                    ├── cst-visit.d.ts
                    ├── cst-visit.js
                    ├── cst.d.ts
                    ├── cst.js
                    ├── lexer.d.ts
                    ├── lexer.js
                    ├── line-counter.d.ts
                    ├── line-counter.js
                    ├── parser.d.ts
                    └── parser.js
                ├── public-api.d.ts
                ├── public-api.js
                ├── [schema]
                    ├── Schema.d.ts
                    ├── Schema.js
                    ├── [common]
                        ├── map.d.ts
                        ├── map.js
                        ├── null.d.ts
                        ├── null.js
                        ├── seq.d.ts
                        ├── seq.js
                        ├── string.d.ts
                        └── string.js
                    ├── [core]
                        ├── bool.d.ts
                        ├── bool.js
                        ├── float.d.ts
                        ├── float.js
                        ├── int.d.ts
                        ├── int.js
                        ├── schema.d.ts
                        └── schema.js
                    ├── [json]
                        ├── schema.d.ts
                        └── schema.js
                    ├── json-schema.d.ts
                    ├── tags.d.ts
                    ├── tags.js
                    ├── types.d.ts
                    └── [yaml-1.1]
                        ├── binary.d.ts
                        ├── binary.js
                        ├── bool.d.ts
                        ├── bool.js
                        ├── float.d.ts
                        ├── float.js
                        ├── int.d.ts
                        ├── int.js
                        ├── merge.d.ts
                        ├── merge.js
                        ├── omap.d.ts
                        ├── omap.js
                        ├── pairs.d.ts
                        ├── pairs.js
                        ├── schema.d.ts
                        ├── schema.js
                        ├── set.d.ts
                        ├── set.js
                        ├── timestamp.d.ts
                        └── timestamp.js
                ├── [stringify]
                    ├── foldFlowLines.d.ts
                    ├── foldFlowLines.js
                    ├── stringify.d.ts
                    ├── stringify.js
                    ├── stringifyCollection.d.ts
                    ├── stringifyCollection.js
                    ├── stringifyComment.d.ts
                    ├── stringifyComment.js
                    ├── stringifyDocument.d.ts
                    ├── stringifyDocument.js
                    ├── stringifyNumber.d.ts
                    ├── stringifyNumber.js
                    ├── stringifyPair.d.ts
                    ├── stringifyPair.js
                    ├── stringifyString.d.ts
                    └── stringifyString.js
                ├── test-events.d.ts
                ├── test-events.js
                ├── util.d.ts
                ├── util.js
                ├── visit.d.ts
                └── visit.js
            ├── package.json
            └── util.js
        ├── [yargs]
            ├── LICENSE
            ├── README.md
            ├── browser.d.ts
            ├── browser.mjs
            ├── [build]
                ├── index.cjs
                └── [lib]
                    ├── argsert.js
                    ├── command.js
                    ├── completion-templates.js
                    ├── completion.js
                    ├── middleware.js
                    ├── parse-command.js
                    ├── [typings]
                        ├── common-types.js
                        └── yargs-parser-types.js
                    ├── usage.js
                    ├── [utils]
                        ├── apply-extends.js
                        ├── is-promise.js
                        ├── levenshtein.js
                        ├── maybe-async-result.js
                        ├── obj-filter.js
                        ├── process-argv.js
                        ├── set-blocking.js
                        └── which-module.js
                    ├── validation.js
                    ├── yargs-factory.js
                    └── yerror.js
            ├── [helpers]
                ├── helpers.mjs
                ├── index.js
                └── package.json
            ├── index.cjs
            ├── index.mjs
            ├── [lib]
                └── [platform-shims]
                    ├── browser.mjs
                    └── esm.mjs
            ├── [locales]
                ├── be.json
                ├── cs.json
                ├── de.json
                ├── en.json
                ├── es.json
                ├── fi.json
                ├── fr.json
                ├── hi.json
                ├── hu.json
                ├── id.json
                ├── it.json
                ├── ja.json
                ├── ko.json
                ├── nb.json
                ├── nl.json
                ├── nn.json
                ├── pirate.json
                ├── pl.json
                ├── pt.json
                ├── pt_BR.json
                ├── ru.json
                ├── th.json
                ├── tr.json
                ├── uk_UA.json
                ├── uz.json
                ├── zh_CN.json
                └── zh_TW.json
            ├── [node_modules]
                ├── [emoji-regex]
                    ├── LICENSE-MIT.txt
                    ├── README.md
                    ├── [es2015]
                        ├── index.js
                        └── text.js
                    ├── index.d.ts
                    ├── index.js
                    ├── package.json
                    └── text.js
                ├── [is-fullwidth-code-point]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
                └── [string-width]
                    ├── index.d.ts
                    ├── index.js
                    ├── license
                    ├── package.json
                    └── readme.md
            ├── package.json
            ├── yargs
            └── yargs.mjs
        ├── [yargs-parser]
            ├── CHANGELOG.md
            ├── LICENSE.txt
            ├── README.md
            ├── browser.js
            ├── [build]
                ├── index.cjs
                └── [lib]
                    ├── index.js
                    ├── string-utils.js
                    ├── tokenize-arg-string.js
                    ├── yargs-parser-types.js
                    └── yargs-parser.js
            └── package.json
        └── [yocto-queue]
            ├── index.d.ts
            ├── index.js
            ├── license
            ├── package.json
            └── readme.md
    ├── package.json
    ├── [src]
        ├── [api]
            ├── [controllers]
                ├── authController.js
                ├── product.controller.js
                └── userController.js
            ├── [middleware]
                ├── error.middleware.js
                ├── logging.middleware.js
                └── validation.middleware.js
            └── [routes]
                ├── authRoutes.js
                ├── product.routes.js
                └── userRoutes.js
        ├── app.js
        ├── [common]
            ├── [errors]
            ├── [types]
            ├── [utils]
            └── [validators]
                ├── authValidator.js
                └── userValidator.js
        ├── [config]
            ├── database.js
            ├── environment.js
            ├── logger.js
            └── middleware.js
        ├── [data]
            ├── [dto]
                └── userDTO.js
            ├── [models]
                ├── cart.model.js
                ├── category.model.js
                ├── order.model.js
                ├── product.model.js
                ├── review.model.js
                └── user.model.js
            └── [repositories]
                ├── productRepository.js
                └── userRepository.js
        ├── [middleware]
            ├── apiError.js
            ├── authMiddleware.js
            └── validate.js
        ├── server.js
        ├── [services]
            ├── [auth]
                └── authService.js
            ├── [base]
                └── baseService.js
            ├── [email]
                ├── emailService.js
                └── [templates]
                    ├── resetPassword.hbs
                    └── verification.hbs
            ├── [product]
                └── product.service.js
            └── [user]
                └── userService.js
        ├── [types]
            └── express.d.ts
        └── [utils]
            ├── apiFeatures.js
            ├── catchAsync.js
            ├── responseHandler.js
            └── validatorUtils.js
    └── [tests]
        └── setup.js

--- File Contents ---

--- File: .github/workflows/ci.yml ---
name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Kiểm tra code và tests cho backend
  backend-test:
    runs-on: ubuntu-latest
    
    services:
      # Thiết lập MongoDB Service
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
    
    defaults:
      run:
        working-directory: ./server
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './server/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
      
      - name: Run tests
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_URI_TEST: mongodb://localhost:27017/runout_biliard_test
          JWT_SECRET: test_jwt_secret
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: ./server/coverage
  
  # Kiểm tra code và tests cho frontend
  frontend-test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./client
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './client/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
      
      - name: Run tests
        run: npm test
      
      - name: Build
        run: npm run build
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: ./client/build
  
  # Security scan cho dependencies
  security-scan:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run npm audit (Backend)
        run: npm audit --production
        working-directory: ./server
        continue-on-error: true
      
      - name: Run npm audit (Frontend)
        run: npm audit --production
        working-directory: ./client
        continue-on-error: true

--- File: .github/workflows/deploy.yml ---
name: CD Pipeline

on:
  push:
    branches: [ main ] # Chỉ triển khai khi push lên nhánh main
  workflow_dispatch: # Cho phép kích hoạt thủ công

jobs:
  # Deploy backend
  deploy-backend:
    runs-on: ubuntu-latest
    needs: []
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          file: ./docker/Dockerfile.server
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/runout-biliard-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          script: |
            cd /opt/runout-biliard
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/runout-biliard-server:latest
            docker-compose -f docker-compose.prod.yml up -d backend
            docker system prune -af
  
  # Deploy frontend
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: []
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: './client/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
        working-directory: ./client
      
      - name: Build frontend
        run: npm run build
        working-directory: ./client
        env:
          REACT_APP_API_URL: ${{ secrets.PRODUCTION_API_URL }}
      
      # Deploy to hosting service (có thể là Netlify, Vercel, hoặc S3)
      # Ví dụ với Netlify:
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './client/build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 10

  # Gửi thông báo sau khi deploy
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    
    steps:
      - name: Notify on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }} # Màu thông báo dựa trên status
          SLACK_TITLE: 'Deployment Status'
          SLACK_MESSAGE: 'RunOut-Biliard has been deployed to production :rocket:'
          SLACK_FOOTER: "© RunOut-Biliard - Steve"

--- File: .gitignore ---
# Dependencies
node_modules/
/.pnp
.pnp.js

# Production build
dist/
build/
.next/
out/

# Testing
/coverage
.nyc_output

# Environment
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.production

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# IDEs and editors
/.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# OS files
.DS_Store
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Package managers
yarn.lock
package-lock.json
npm-debug.log
.npmrc

# Misc
.cache/
.temp/
*.bak
*.swp
*.tmp
*.temp

--- File: README.md ---


--- File: cautructhumuc.md ---
```
runout-biliard/
├── server/                   # Backend Node.js/Express
│   ├── src/
│   │   ├── api/
│   │   ├── services/
│   │   ├── data/
│   │   ├── common/
│   │   ├── config/
│   │   ├── app.js
│   │   └── server.js
│   ├── tests/
│   ├── .eslintrc.js
│   ├── .prettierrc
│   ├── jest.config.js
│   ├── package.json
│   └── README.md
├── client/                   # Frontend React
│   ├── public/
│   ├── src/
│   │   ├── assets/
│   │   ├── components/
│   │   ├── hooks/
│   │   ├── pages/
│   │   ├── services/
│   │   ├── store/
│   │   ├── utils/
│   │   ├── routes/
│   │   ├── App.js
│   │   └── index.js
│   ├── .eslintrc.js
│   ├── .prettierrc
│   ├── package.json
│   └── README.md
├── docker/
│   ├── docker-compose.yml
│   ├── Dockerfile.server
│   └── Dockerfile.client
├── .github/
│   └── workflows/
│       ├── ci.yml
│       └── deploy.yml
├── .gitignore
└── README.md
```


--- File: client/.eslintrc.js ---
module.exports = {
    env: {
      browser: true,
      es2021: true,
      node: true,
      jest: true,
    },
    extends: [
      'eslint:recommended',
      'plugin:react/recommended',
      'plugin:react-hooks/recommended',
      'plugin:prettier/recommended',
    ],
    parserOptions: {
      ecmaFeatures: {
        jsx: true,
      },
      ecmaVersion: 12,
      sourceType: 'module',
    },
    plugins: ['react', 'react-hooks', 'prettier'],
    rules: {
      'react/react-in-jsx-scope': 'off',
      'react/prop-types': 'off',
      'prettier/prettier': 'error',
      'no-unused-vars': 'warn',
      'react-hooks/rules-of-hooks': 'error',
      'react-hooks/exhaustive-deps': 'warn',
    },
    settings: {
      react: {
        version: 'detect',
      },
    },
  };

--- File: client/.prettierrc ---
{
    "semi": true,
    "singleQuote": true,
    "tabWidth": 2,
    "trailingComma": "es5",
    "printWidth": 100,
    "bracketSpacing": true,
    "endOfLine": "auto"
  }

--- File: client/README.md ---


--- File: client/jsconfig.json ---
{
    "compilerOptions": {
      "baseUrl": "src",
      "paths": {
        "components/*": ["components/*"],
        "hooks/*": ["hooks/*"],
        "pages/*": ["pages/*"],
        "services/*": ["services/*"],
        "store/*": ["store/*"],
        "utils/*": ["utils/*"],
        "routes/*": ["routes/*"],
        "assets/*": ["assets/*"]
      }
    },
    "include": ["src"]
  }

--- File: client/package.json ---
{
    "name": "runout-biliard-client",
    "version": "0.1.0",
    "private": true,
    "dependencies": {
      "@reduxjs/toolkit": "^2.0.1",
      "axios": "^1.6.2",
      "react": "^18.2.0",
      "react-dom": "^18.2.0",
      "react-hook-form": "^7.49.0",
      "react-query": "^3.39.3",
      "react-redux": "^9.0.2",
      "react-router-dom": "^6.20.1",
      "tailwindcss": "^3.3.5",
      "yup": "^1.3.2"
    },
    "devDependencies": {
      "@testing-library/jest-dom": "^6.1.5",
      "@testing-library/react": "^14.1.2",
      "@testing-library/user-event": "^14.5.1",
      "autoprefixer": "^10.4.16",
      "eslint": "^8.55.0",
      "eslint-config-prettier": "^9.1.0",
      "eslint-plugin-prettier": "^5.0.1",
      "eslint-plugin-react": "^7.33.2",
      "eslint-plugin-react-hooks": "^4.6.0",
      "postcss": "^8.4.32",
      "prettier": "^3.1.0",
      "react-scripts": "5.0.1"
    },
    "scripts": {
      "start": "react-scripts start",
      "build": "react-scripts build",
      "test": "react-scripts test",
      "eject": "react-scripts eject",
      "lint": "eslint src",
      "lint:fix": "eslint src --fix",
      "format": "prettier --write \"src/**/*.{js,jsx}\""
    },
    "eslintConfig": {
      "extends": [
        "react-app",
        "react-app/jest"
      ]
    },
    "browserslist": {
      "production": [
        ">0.2%",
        "not dead",
        "not op_mini all"
      ],
      "development": [
        "last 1 chrome version",
        "last 1 firefox version",
        "last 1 safari version"
      ]
    },
    "proxy": "http://localhost:5000"
  }

--- File: client/public/index.html ---
<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="RunOut-Biliard - Cửa hàng Bi-a chuyên nghiệp"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>RunOut-Biliard</title>
    <meta name="copyright" content="© 2025 RunOut-Biliard. Tất cả các quyền thuộc về Steve." />
  </head>
  <body>
    <noscript>Bạn cần bật JavaScript để chạy ứng dụng này.</noscript>
    <div id="root"></div>
  </body>
</html>

--- File: client/src/App.js ---
import React, { Suspense } from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import { useSelector } from 'react-redux';
import MainLayout from './components/layout/MainLayout';
import AuthLayout from './components/layout/AuthLayout';
import LoadingSpinner from './components/common/LoadingSpinner';
import { selectIsAuthenticated } from './store/slices/authSlice';
import { ROUTES } from './routes/paths';

// Lazy-loaded pages
const HomePage = React.lazy(() => import('./pages/Home'));
const LoginPage = React.lazy(() => import('./pages/Auth/Login'));
const RegisterPage = React.lazy(() => import('./pages/Auth/Register'));
const NotFoundPage = React.lazy(() => import('./pages/NotFound'));

// Watermark
const Watermark = () => {
  return (
    <div className="fixed bottom-0 right-0 p-2 text-xs text-gray-500 opacity-70">
      © 2025 RunOut-Biliard. Chủ sở hữu: Steve
    </div>
  );
};

function App() {
  const isAuthenticated = useSelector(selectIsAuthenticated);

  return (
    <>
      <Suspense fallback={<LoadingSpinner fullScreen />}>
        <Routes>
          {/* Public routes */}
          <Route element={<MainLayout />}>
            <Route path={ROUTES.HOME} element={<HomePage />} />
          </Route>

          {/* Auth routes */}
          <Route element={<AuthLayout />}>
            <Route 
              path={ROUTES.LOGIN} 
              element={isAuthenticated ? <Navigate to="/" replace /> : <LoginPage />} 
            />
            <Route 
              path={ROUTES.REGISTER} 
              element={isAuthenticated ? <Navigate to="/" replace /> : <RegisterPage />} 
            />
          </Route>

          {/* 404 route */}
          <Route path={ROUTES.NOT_FOUND} element={<NotFoundPage />} />
          <Route path="*" element={<Navigate to={ROUTES.NOT_FOUND} replace />} />
        </Routes>
      </Suspense>
      <Watermark />
    </>
  );
}

export default App;

--- File: client/src/assets/css/index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

.content-wrapper {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;
}

--- File: client/src/components/common/Button/Button.js ---
import React from 'react';

/**
 * @param {Object} props
 * @param {'primary'|'secondary'|'outline'|'danger'} [props.variant='primary']
 * @param {'sm'|'md'|'lg'} [props.size='md']
 * @param {boolean} [props.isLoading=false]
 * @param {React.ReactNode} [props.leftIcon]
 * @param {React.ReactNode} [props.rightIcon]
 */
const Button = ({
  children,
  variant = 'primary',
  size = 'md',
  isLoading = false,
  leftIcon,
  rightIcon,
  className = '',
  disabled = false,
  ...rest
}) => {
  const baseClasses = 'font-medium rounded focus:outline-none transition-colors';
  
  const variantClasses = {
    primary: 'bg-blue-600 hover:bg-blue-700 text-white',
    secondary: 'bg-gray-600 hover:bg-gray-700 text-white',
    outline: 'bg-transparent border border-blue-600 text-blue-600 hover:bg-blue-50',
    danger: 'bg-red-600 hover:bg-red-700 text-white',
  };
  
  const sizeClasses = {
    sm: 'py-1 px-3 text-sm',
    md: 'py-2 px-4 text-base',
    lg: 'py-3 px-5 text-lg',
  };
  
  const buttonClasses = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

  return (
    <button
      className={buttonClasses}
      disabled={isLoading || disabled}
      {...rest}
    >
      {isLoading ? (
        <span className="flex items-center justify-center">
          <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
            <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Đang xử lý...
        </span>
      ) : (
        <span className="flex items-center justify-center">
          {leftIcon && <span className="mr-2">{leftIcon}</span>}
          {children}
          {rightIcon && <span className="ml-2">{rightIcon}</span>}
        </span>
      )}
    </button>
  );
};

export default Button;

--- File: client/src/components/common/Card/Card.js ---
import React from 'react';

/**
 * @param {Object} props
 * @param {React.ReactNode} props.children
 * @param {React.ReactNode} [props.header]
 * @param {React.ReactNode} [props.footer]
 * @param {string} [props.className]
 */
const Card = ({ children, header, footer, className = '', ...rest }) => {
  return (
    <div 
      className={`bg-white rounded-lg shadow-md overflow-hidden ${className}`}
      {...rest}
    >
      {header && (
        <div className="px-6 py-4 border-b border-gray-200">
          {header}
        </div>
      )}
      <div className="p-6">{children}</div>
      {footer && (
        <div className="px-6 py-4 border-t border-gray-200">
          {footer}
        </div>
      )}
    </div>
  );
};

export default Card;

--- File: client/src/components/common/Input/Input.js ---
import React, { forwardRef } from 'react';

/**
 * @param {Object} props
 * @param {string} [props.id]
 * @param {string} [props.label]
 * @param {string} [props.error]
 * @param {string} [props.helperText]
 * @param {React.ReactNode} [props.leftIcon]
 * @param {React.ReactNode} [props.rightIcon]
 */
const Input = forwardRef(({
  id,
  label,
  error,
  helperText,
  leftIcon,
  rightIcon,
  className = '',
  ...rest
}, ref) => {
  const inputId = id || `input-${Math.random().toString(36).substring(2, 9)}`;

  return (
    <div className="mb-4">
      {label && (
        <label 
          htmlFor={inputId} 
          className="block text-sm font-medium text-gray-700 mb-1"
        >
          {label}
        </label>
      )}
      
      <div className="relative">
        {leftIcon && (
          <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            {leftIcon}
          </div>
        )}
        
        <input
          id={inputId}
          ref={ref}
          className={`
            block w-full rounded-md shadow-sm 
            ${leftIcon ? 'pl-10' : 'pl-3'} 
            ${rightIcon ? 'pr-10' : 'pr-3'} 
            py-2 border 
            ${error ? 'border-red-500 focus:ring-red-500 focus:border-red-500' : 'border-gray-300 focus:ring-blue-500 focus:border-blue-500'} 
            ${className}
          `}
          {...rest}
        />
        
        {rightIcon && (
          <div className="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
            {rightIcon}
          </div>
        )}
      </div>
      
      {error && (
        <p className="mt-1 text-sm text-red-600">{error}</p>
      )}
      
      {helperText && !error && (
        <p className="mt-1 text-sm text-gray-500">{helperText}</p>
      )}
    </div>
  );
});

Input.displayName = 'Input';

export default Input;

--- File: client/src/components/common/LoadingSpiner/index.js ---
import React from 'react';

/**
 * @param {Object} props
 * @param {boolean} [props.fullScreen=false]
 * @param {string} [props.size='md']
 * @param {string} [props.className]
 */
const LoadingSpinner = ({ fullScreen = false, size = 'md', className = '' }) => {
  const sizeClasses = {
    sm: 'h-4 w-4',
    md: 'h-8 w-8',
    lg: 'h-12 w-12',
    xl: 'h-16 w-16',
  };

  const spinnerSize = sizeClasses[size] || sizeClasses.md;
  
  const spinner = (
    <svg 
      className={`animate-spin text-blue-600 ${spinnerSize} ${className}`} 
      xmlns="http://www.w3.org/2000/svg" 
      fill="none" 
      viewBox="0 0 24 24"
    >
      <circle 
        className="opacity-25" 
        cx="12" 
        cy="12" 
        r="10" 
        stroke="currentColor" 
        strokeWidth="4"
      ></circle>
      <path 
        className="opacity-75" 
        fill="currentColor" 
        d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
      ></path>
    </svg>
  );

  if (fullScreen) {
    return (
      <div className="fixed inset-0 flex items-center justify-center bg-white bg-opacity-75 z-50">
        {spinner}
      </div>
    );
  }

  return spinner;
};

export default LoadingSpinner;

--- File: client/src/hooks/useDebounce.js ---
import { useState, useEffect } from 'react';

/**
 * Custom hook để debounce một giá trị
 * @param {any} value - Giá trị cần debounce
 * @param {number} delay - Thời gian delay (ms)
 * @returns {any} - Giá trị đã debounce
 */
const useDebounce = (value, delay) => {
  // State và setter cho giá trị debounced
  const [debouncedValue, setDebouncedValue] = useState(value);

  useEffect(() => {
    // Cập nhật giá trị debounced sau một khoảng thời gian delay
    const handler = setTimeout(() => {
      setDebouncedValue(value);
    }, delay);

    // Hủy timeout nếu value thay đổi hoặc unmount
    return () => {
      clearTimeout(handler);
    };
  }, [value, delay]);

  return debouncedValue;
};

export default useDebounce;

--- File: client/src/hooks/useForm.js ---
import { useState } from 'react';

/**
 * Custom hook để quản lý form state
 * @param {Object} initialValues - Giá trị ban đầu của form
 * @param {Function} [validate] - Hàm validate form (optional)
 * @param {Function} [onSubmit] - Hàm xử lý submit form (optional)
 * @returns {Object} - Form state và các hàm xử lý
 */
const useForm = (initialValues, validate, onSubmit) => {
  const [values, setValues] = useState(initialValues);
  const [errors, setErrors] = useState({});
  const [touched, setTouched] = useState({});
  const [isSubmitting, setIsSubmitting] = useState(false);

  // Xử lý thay đổi input
  const handleChange = (e) => {
    const { name, value, type, checked } = e.target;
    
    // Xử lý giá trị dựa trên loại input
    const inputValue = type === 'checkbox' ? checked : value;
    
    setValues({
      ...values,
      [name]: inputValue,
    });
    
    // Nếu field đã được touched, chạy validate khi thay đổi
    if (touched[name] && validate) {
      const validationErrors = validate({ ...values, [name]: inputValue });
      setErrors(validationErrors);
    }
  };

  // Xử lý khi blur khỏi field
  const handleBlur = (e) => {
    const { name } = e.target;
    
    setTouched({
      ...touched,
      [name]: true,
    });
    
    // Chạy validate khi blur
    if (validate) {
      const validationErrors = validate(values);
      setErrors(validationErrors);
    }
  };

  // Xử lý submit form
  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Đánh dấu tất cả các field là touched
    const allTouched = Object.keys(values).reduce((acc, key) => {
      acc[key] = true;
      return acc;
    }, {});
    
    setTouched(allTouched);
    
    // Validate form trước khi submit
    let validationErrors = {};
    if (validate) {
      validationErrors = validate(values);
      setErrors(validationErrors);
    }
    
    // Nếu không có lỗi và có hàm onSubmit
    if (Object.keys(validationErrors).length === 0 && onSubmit) {
      setIsSubmitting(true);
      
      try {
        await onSubmit(values);
      } catch (error) {
        console.error('Form submission error:', error);
      } finally {
        setIsSubmitting(false);
      }
    }
  };

  // Reset form
  const resetForm = () => {
    setValues(initialValues);
    setErrors({});
    setTouched({});
    setIsSubmitting(false);
  };

  // Cập nhật giá trị form từ bên ngoài
  const setFieldValue = (name, value) => {
    setValues({
      ...values,
      [name]: value,
    });
  };

  return {
    values,
    errors,
    touched,
    isSubmitting,
    handleChange,
    handleBlur,
    handleSubmit,
    resetForm,
    setFieldValue,
  };
};

export default useForm;

--- File: client/src/hooks/useLocalStorage.js ---
import { useState, useEffect } from 'react';

/**
 * Custom hook để sử dụng localStorage
 * @param {string} key - Key để lưu trong localStorage
 * @param {any} initialValue - Giá trị ban đầu
 * @returns {Array} [storedValue, setValue]
 */
const useLocalStorage = (key, initialValue) => {
  // Tạo state ban đầu
  const [storedValue, setStoredValue] = useState(() => {
    try {
      // Lấy giá trị từ localStorage
      const item = window.localStorage.getItem(key);
      // Parse stored json or return initialValue
      return item ? JSON.parse(item) : initialValue;
    } catch (error) {
      // Nếu có lỗi, trả về giá trị ban đầu
      console.error(`Error getting localStorage key "${key}":`, error);
      return initialValue;
    }
  });

  // Hàm để cập nhật localStorage và state
  const setValue = (value) => {
    try {
      // Cho phép value là một function
      const valueToStore =
        value instanceof Function ? value(storedValue) : value;
      // Lưu state
      setStoredValue(valueToStore);
      // Lưu vào localStorage
      window.localStorage.setItem(key, JSON.stringify(valueToStore));
    } catch (error) {
      console.error(`Error setting localStorage key "${key}":`, error);
    }
  };

  // Đồng bộ với các tab khác
  useEffect(() => {
    const handleStorageChange = (e) => {
      if (e.key === key) {
        try {
          setStoredValue(JSON.parse(e.newValue));
        } catch (error) {
          console.error(`Error parsing localStorage key "${key}":`, error);
        }
      }
    };

    // Lắng nghe sự kiện storage
    window.addEventListener('storage', handleStorageChange);

    // Cleanup
    return () => {
      window.removeEventListener('storage', handleStorageChange);
    };
  }, [key]);

  return [storedValue, setValue];
};

export default useLocalStorage;

--- File: client/src/hooks/useOutsideClick.js ---
import { useEffect, useRef } from 'react';

/**
 * Custom hook để phát hiện click bên ngoài một element
 * @param {Function} callback - Hàm sẽ được gọi khi click bên ngoài
 * @returns {React.MutableRefObject} - Ref để gắn vào element cần theo dõi
 */
const useOutsideClick = (callback) => {
  const ref = useRef();

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (ref.current && !ref.current.contains(event.target)) {
        callback();
      }
    };

    // Thêm event listener
    document.addEventListener('mousedown', handleClickOutside);
    
    // Cleanup
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [callback]);

  return ref;
};

export default useOutsideClick;

--- File: client/src/index.js ---
import React from 'react';
import ReactDOM from 'react-dom/client';
import { BrowserRouter } from 'react-router-dom';
import { Provider } from 'react-redux';
import { QueryClient, QueryClientProvider } from 'react-query';
import { store } from './store';
import App from './App';
import './assets/css/index.css';

// Khởi tạo React Query client
const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      retry: 1,
      staleTime: 5 * 60 * 1000, // 5 phút
    },
  },
});

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <Provider store={store}>
      <QueryClientProvider client={queryClient}>
        <BrowserRouter>
          <App />
        </BrowserRouter>
      </QueryClientProvider>
    </Provider>
  </React.StrictMode>
);

--- File: client/src/pages/Auth/Login/index.js ---
import React, { useState, useEffect } from 'react';
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { login, clearError, selectAuth } from '../../../store/slices/authSlice';
import { ROUTES } from '../../../routes/paths';
import Button from '../../../components/common/Button/Button';
import Input from '../../../components/common/Input/Input';
import useForm from '../../../hooks/useForm';

const Login = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  const location = useLocation();
  const { isAuthenticated, error, loading } = useSelector(selectAuth);
  const [showPassword, setShowPassword] = useState(false);
  
  // Lấy redirect path từ location state hoặc mặc định về trang chủ
  const from = location.state?.from?.pathname || ROUTES.HOME;

  // Nếu đã đăng nhập, chuyển hướng
  useEffect(() => {
    if (isAuthenticated) {
      navigate(from, { replace: true });
    }
    
    // Xóa error khi unmount
    return () => {
      dispatch(clearError());
    };
  }, [isAuthenticated, navigate, from, dispatch]);

  // Validate form
  const validateForm = (values) => {
    const errors = {};
    
    if (!values.email) {
      errors.email = 'Email là bắt buộc';
    } else if (!/\S+@\S+\.\S+/.test(values.email)) {
      errors.email = 'Email không hợp lệ';
    }
    
    if (!values.password) {
      errors.password = 'Mật khẩu là bắt buộc';
    }
    
    return errors;
  };

  // Xử lý submit form
  const handleSubmit = async (values) => {
    await dispatch(login(values));
  };

  // Khởi tạo form với useForm hook
  const {
    values,
    errors,
    touched,
    handleChange,
    handleBlur,
    handleSubmit: submitForm,
  } = useForm(
    { email: '', password: '' },
    validateForm,
    handleSubmit
  );

  return (
    <div className="max-w-md mx-auto">
      <h2 className="text-center text-2xl font-extrabold mb-6">Đăng Nhập</h2>
      
      {error && (
        <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
          {error}
        </div>
      )}
      
      <form onSubmit={submitForm}>
        <Input
          type="email"
          id="email"
          name="email"
          label="Email"
          placeholder="Nhập email của bạn"
          value={values.email}
          onChange={handleChange}
          onBlur={handleBlur}
          error={touched.email && errors.email}
          leftIcon={
            <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
          }
        />
        
        <Input
          type={showPassword ? 'text' : 'password'}
          id="password"
          name="password"
          label="Mật khẩu"
          placeholder="Nhập mật khẩu của bạn"
          value={values.password}
          onChange={handleChange}
          onBlur={handleBlur}
          error={touched.password && errors.password}
          leftIcon={
            <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
            </svg>
          }
          rightIcon={
            <button
              type="button"
              onClick={() => setShowPassword(!showPassword)}
              className="focus:outline-none"
            >
              {showPassword ? (
                <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21"></path>
                </svg>
              ) : (
                <svg className="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                </svg>
              )}
            </button>
          }
        />
        
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center">
            <input
              id="remember-me"
              name="remember-me"
              type="checkbox"
              className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
            />
            <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-900">
              Ghi nhớ đăng nhập
            </label>
          </div>
          
          <div className="text-sm">
            <Link
              to={ROUTES.FORGOT_PASSWORD}
              className="font-medium text-blue-600 hover:text-blue-500"
            >
              Quên mật khẩu?
            </Link>
          </div>
        </div>
        
        <Button
          type="submit"
          variant="primary"
          className="w-full"
          isLoading={loading}
        >
          Đăng Nhập
        </Button>
      </form>
      
      <div className="text-center mt-6">
        <p className="text-sm text-gray-600">
          Chưa có tài khoản?{' '}
          <Link to={ROUTES.REGISTER} className="font-medium text-blue-600 hover:text-blue-500">
            Đăng ký ngay
          </Link>
        </p>
      </div>
    </div>
  );
};

export default Login;

--- File: client/src/pages/Home/index.js ---
import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { Link } from 'react-router-dom';
import { fetchProducts, fetchCategories } from '../../store/slices/productSlice';
import { ROUTES } from '../../routes/paths';
import LoadingSpinner from '../../components/common/LoadingSpinner';
import Card from '../../components/common/Card/Card';
import Button from '../../components/common/Button/Button';
import { formatPrice } from '../../utils/formatters';

const HomePage = () => {
  const dispatch = useDispatch();
  const { products, categories, loading } = useSelector((state) => state.product);

  useEffect(() => {
    // Lấy sản phẩm nổi bật
    dispatch(fetchProducts({ limit: 8, featured: true }));
    
    // Lấy danh mục
    dispatch(fetchCategories());
  }, [dispatch]);

  if (loading && products.length === 0) {
    return <LoadingSpinner fullScreen />;
  }

  return (
    <div>
      {/* Hero Section */}
      <section className="bg-blue-900 text-white py-16 mb-12 rounded-lg">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-4xl md:text-5xl font-bold mb-6">RunOut-Biliard</h1>
          <p className="text-xl mb-8 max-w-3xl mx-auto">
            Chuyên cung cấp các sản phẩm Bi-a chất lượng cao, đa dạng mẫu mã,
            phù hợp với mọi nhu cầu từ người chơi nghiệp dư đến chuyên nghiệp.
          </p>
          <div className="flex justify-center space-x-4">
            <Link to={ROUTES.PRODUCTS}>
              <Button variant="primary" size="lg">
                Mua Ngay
              </Button>
            </Link>
            <Link to={ROUTES.ABOUT}>
              <Button variant="outline" size="lg">
                Tìm Hiểu Thêm
              </Button>
            </Link>
          </div>
        </div>
      </section>

      {/* Categories Section */}
      <section className="mb-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold mb-8 text-center">Danh Mục Sản Phẩm</h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {categories.slice(0, 4).map((category) => (
              <Link 
                key={category._id} 
                to={`${ROUTES.PRODUCTS}?category=${category.slug}`}
                className="block"
              >
                <div className="bg-gray-100 rounded-lg p-6 transition-transform hover:transform hover:scale-105 hover:shadow-lg text-center">
                  {category.image && (
                    <img 
                      src={category.image.url} 
                      alt={category.name} 
                      className="w-16 h-16 mx-auto mb-4"
                    />
                  )}
                  <h3 className="text-xl font-semibold mb-2">{category.name}</h3>
                  <p className="text-gray-600 mb-4">
                    {category.description ? category.description.substring(0, 100) : 'Xem các sản phẩm'}
                  </p>
                  <span className="text-blue-600 hover:text-blue-800 font-medium">
                    Xem sản phẩm →
                  </span>
                </div>
              </Link>
            ))}
          </div>
        </div>
      </section>

      {/* Featured Products Section */}
      <section className="mb-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold mb-8 text-center">Sản Phẩm Nổi Bật</h2>
          
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {products.map((product) => (
              <Link 
                key={product._id} 
                to={`${ROUTES.PRODUCTS}/${product._id}`}
              >
                <Card className="h-full flex flex-col transition-all hover:shadow-lg">
                  <div className="relative pb-[75%] overflow-hidden rounded-t-lg">
                    <img 
                      src={product.images[0]?.url || '/placeholder.png'} 
                      alt={product.name} 
                      className="absolute top-0 left-0 w-full h-full object-cover"
                    />
                  </div>
                  <div className="p-4 flex-grow flex flex-col">
                    <h3 className="text-lg font-semibold mb-2">{product.name}</h3>
                    <p className="text-gray-600 text-sm mb-4 flex-grow">
                      {product.description?.short?.substring(0, 100) || 'Không có mô tả'}
                    </p>
                    <div className="flex justify-between items-center">
                      <span className="text-lg font-bold text-blue-700">
                        {formatPrice(product.price)}
                      </span>
                      <span className="text-sm text-gray-500">
                        {product.ratings?.average > 0 ? (
                          <span className="flex items-center">
                            <svg 
                              className="w-4 h-4 text-yellow-500 mr-1" 
                              fill="currentColor" 
                              viewBox="0 0 20 20"
                            >
                              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                            </svg>
                            {product.ratings.average.toFixed(1)}
                          </span>
                        ) : 'Chưa có đánh giá'}
                      </span>
                    </div>
                  </div>
                </Card>
              </Link>
            ))}
          </div>
          
          <div className="text-center mt-10">
            <Link to={ROUTES.PRODUCTS}>
              <Button variant="outline" size="lg">
                Xem Tất Cả Sản Phẩm
              </Button>
            </Link>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section className="mb-16 bg-gray-100 py-16 rounded-lg">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row items-center">
            <div className="md:w-1/2 mb-8 md:mb-0 md:pr-8">
              <h2 className="text-3xl font-bold mb-6">Về RunOut-Biliard</h2>
              <p className="text-lg mb-6">
                RunOut-Biliard là nhà cung cấp hàng đầu các sản phẩm Bi-a chất lượng cao tại Việt Nam.
                Chúng tôi tự hào mang đến cho khách hàng những sản phẩm chính hãng với giá cả hợp lý.
              </p>
              <p className="text-lg mb-6">
                Với đội ngũ nhân viên nhiều kinh nghiệm và am hiểu về Bi-a, chúng tôi cam kết mang
                đến sự tư vấn tận tâm và chuyên nghiệp cho khách hàng.
              </p>
              <Link to={ROUTES.ABOUT}>
                <Button variant="primary">Xem Thêm</Button>
              </Link>
            </div>
            <div className="md:w-1/2">
              <img 
                src="/assets/about.jpg" 
                alt="RunOut-Biliard Store" 
                className="rounded-lg shadow-lg"
              />
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default HomePage;

--- File: client/src/pages/NotFound/index.js ---
import React from 'react';
import { Link } from 'react-router-dom';
import { ROUTES } from '../../routes/paths';
import Button from '../../components/common/Button/Button';

const NotFoundPage = () => {
  return (
    <div className="min-h-[70vh] flex flex-col items-center justify-center text-center px-4">
      <h1 className="text-9xl font-bold text-blue-600 mb-4">404</h1>
      <h2 className="text-3xl font-semibold mb-6">Trang Không Tìm Thấy</h2>
      <p className="text-lg text-gray-600 max-w-md mb-8">
        Xin lỗi, trang bạn đang tìm kiếm không tồn tại hoặc đã được di chuyển.
      </p>
      <div className="flex flex-col sm:flex-row gap-4">
        <Link to={ROUTES.HOME}>
          <Button variant="primary" size="lg">
            Quay Lại Trang Chủ
          </Button>
        </Link>
        <Link to={ROUTES.PRODUCTS}>
          <Button variant="outline" size="lg">
            Xem Sản Phẩm
          </Button>
        </Link>
      </div>
    </div>
  );
};

export default NotFoundPage;

--- File: client/src/routes/PrivateRoute.js ---
import React from 'react';
import { Navigate, Outlet, useLocation } from 'react-router-dom';
import { useSelector } from 'react-redux';
import { selectIsAuthenticated, selectUser } from '../store/slices/authSlice';
import { ROUTES } from './paths';

/**
 * @param {Object} props
 * @param {string} [props.requiredRole] - Vai trò yêu cầu để truy cập route
 */
const PrivateRoute = ({ requiredRole }) => {
  const isAuthenticated = useSelector(selectIsAuthenticated);
  const user = useSelector(selectUser);
  const location = useLocation();
  
  // Nếu người dùng chưa đăng nhập, chuyển hướng đến trang đăng nhập
  if (!isAuthenticated) {
    return <Navigate to={ROUTES.LOGIN} state={{ from: location }} replace />;
  }
  
  // Nếu cần vai trò cụ thể và người dùng không có vai trò đó
  if (requiredRole && user.role !== requiredRole) {
    return <Navigate to={ROUTES.HOME} replace />;
  }
  
  // Người dùng đã đăng nhập (và có vai trò phù hợp nếu cần), cho phép truy cập
  return <Outlet />;
};

export default PrivateRoute;

--- File: client/src/routes/PublicRoute.js ---
import React from 'react';
import { Navigate, Outlet, useLocation } from 'react-router-dom';
import { useSelector } from 'react-redux';
import { selectIsAuthenticated } from '../store/slices/authSlice';
import { ROUTES } from './paths';

/**
 * @param {Object} props
 * @param {boolean} [props.restricted=false] - Nếu true, người dùng đã đăng nhập sẽ được chuyển hướng
 */
const PublicRoute = ({ restricted = false }) => {
  const isAuthenticated = useSelector(selectIsAuthenticated);
  const location = useLocation();
  
  // Lấy đường dẫn chuyển hướng từ location state hoặc sử dụng trang chủ làm mặc định
  const from = location.state?.from || { pathname: ROUTES.HOME };
  
  // Nếu route bị hạn chế và người dùng đã đăng nhập, chuyển hướng đến đường dẫn trước đó
  if (restricted && isAuthenticated) {
    return <Navigate to={from} replace />;
  }
  
  // Route không bị hạn chế, hoặc người dùng chưa đăng nhập, cho phép truy cập
  return <Outlet />;
};

export default PublicRoute;

--- File: client/src/routes/index.js ---
import React, { lazy, Suspense } from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import { ROUTES } from './paths';
import PrivateRoute from './PrivateRoute';
import PublicRoute from './PublicRoute';
import LoadingSpinner from '../components/common/LoadingSpinner';

// Layouts
import MainLayout from '../components/layout/MainLayout';
import AuthLayout from '../components/layout/AuthLayout';
import AdminLayout from '../components/layout/AdminLayout';

// Lazy-loaded pages
const HomePage = lazy(() => import('../pages/Home'));
const ProductsPage = lazy(() => import('../pages/Products'));
const ProductDetailPage = lazy(() => import('../pages/ProductDetail'));
const CartPage = lazy(() => import('../pages/Cart'));
const CheckoutPage = lazy(() => import('../pages/Checkout'));
const LoginPage = lazy(() => import('../pages/Auth/Login'));
const RegisterPage = lazy(() => import('../pages/Auth/Register'));
const ForgotPasswordPage = lazy(() => import('../pages/Auth/ForgotPassword'));
const ProfilePage = lazy(() => import('../pages/Profile'));
const OrdersPage = lazy(() => import('../pages/Orders'));
const OrderDetailPage = lazy(() => import('../pages/OrderDetail'));
const NotFoundPage = lazy(() => import('../pages/NotFound'));

// Admin Pages
const AdminDashboardPage = lazy(() => import('../pages/Admin/Dashboard'));
const AdminProductsPage = lazy(() => import('../pages/Admin/Products'));
const AdminProductFormPage = lazy(() => import('../pages/Admin/ProductForm'));
const AdminCategoriesPage = lazy(() => import('../pages/Admin/Categories'));
const AdminOrdersPage = lazy(() => import('../pages/Admin/Orders'));
const AdminUsersPage = lazy(() => import('../pages/Admin/Users'));

const AppRoutes = () => {
  return (
    <Suspense fallback={<LoadingSpinner fullScreen />}>
      <Routes>
        {/* Public routes with MainLayout */}
        <Route element={<MainLayout />}>
          <Route path={ROUTES.HOME} element={<HomePage />} />
          <Route path={ROUTES.PRODUCTS} element={<ProductsPage />} />
          <Route path={ROUTES.PRODUCT_DETAIL} element={<ProductDetailPage />} />
          <Route path={ROUTES.CART} element={<CartPage />} />
          
          {/* Protected routes within MainLayout */}
          <Route element={<PrivateRoute />}>
            <Route path={ROUTES.CHECKOUT} element={<CheckoutPage />} />
            <Route path={ROUTES.PROFILE} element={<ProfilePage />} />
            <Route path={ROUTES.ORDERS} element={<OrdersPage />} />
            <Route path={ROUTES.ORDER_DETAIL} element={<OrderDetailPage />} />
          </Route>
        </Route>
        
        {/* Auth routes */}
        <Route element={<AuthLayout />}>
          <Route element={<PublicRoute restricted />}>
            <Route path={ROUTES.LOGIN} element={<LoginPage />} />
            <Route path={ROUTES.REGISTER} element={<RegisterPage />} />
            <Route path={ROUTES.FORGOT_PASSWORD} element={<ForgotPasswordPage />} />
          </Route>
        </Route>
        
        {/* Admin routes */}
        <Route element={<PrivateRoute requiredRole="admin" />}>
          <Route element={<AdminLayout />}>
            <Route path={ROUTES.ADMIN_DASHBOARD} element={<AdminDashboardPage />} />
            <Route path={ROUTES.ADMIN_PRODUCTS} element={<AdminProductsPage />} />
            <Route path={ROUTES.ADMIN_PRODUCT_ADD} element={<AdminProductFormPage />} />
            <Route path={ROUTES.ADMIN_PRODUCT_EDIT} element={<AdminProductFormPage />} />
            <Route path={ROUTES.ADMIN_CATEGORIES} element={<AdminCategoriesPage />} />
            <Route path={ROUTES.ADMIN_ORDERS} element={<AdminOrdersPage />} />
            <Route path={ROUTES.ADMIN_USERS} element={<AdminUsersPage />} />
          </Route>
        </Route>
        
        {/* Redirect for admin path */}
        <Route path={ROUTES.ADMIN} element={<Navigate to={ROUTES.ADMIN_DASHBOARD} replace />} />
        
        {/* 404 route */}
        <Route path={ROUTES.NOT_FOUND} element={<NotFoundPage />} />
        <Route path="*" element={<Navigate to={ROUTES.NOT_FOUND} replace />} />
      </Routes>
    </Suspense>
  );
};

export default AppRoutes;

--- File: client/src/routes/paths.js ---
export const ROUTES = {
    // Public routes
    HOME: '/',
    PRODUCTS: '/products',
    PRODUCT_DETAIL: '/products/:id',
    CART: '/cart',
    
    // Auth routes
    LOGIN: '/auth/login',
    REGISTER: '/auth/register',
    FORGOT_PASSWORD: '/auth/forgot-password',
    RESET_PASSWORD: '/auth/reset-password/:token',
    
    // Protected routes
    PROFILE: '/profile',
    ORDERS: '/orders',
    ORDER_DETAIL: '/orders/:id',
    CHECKOUT: '/checkout',
    
    // Admin routes
    ADMIN: '/admin',
    ADMIN_DASHBOARD: '/admin/dashboard',
    ADMIN_PRODUCTS: '/admin/products',
    ADMIN_PRODUCT_ADD: '/admin/products/add',
    ADMIN_PRODUCT_EDIT: '/admin/products/:id',
    ADMIN_CATEGORIES: '/admin/categories',
    ADMIN_ORDERS: '/admin/orders',
    ADMIN_USERS: '/admin/users',
    
    // Legal & Info
    ABOUT: '/about',
    CONTACT: '/contact',
    TERMS: '/terms',
    PRIVACY: '/privacy',
    SHIPPING: '/shipping',
    RETURN: '/return',
    
    // Error
    NOT_FOUND: '/404',
  };

--- File: client/src/services/api.js ---
import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';
import { refreshToken } from '../utils/authToken';

// URL cơ sở của API
const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';

// Truy vấn cơ sở tùy chỉnh với khả năng làm mới token
const baseQueryWithReauth = async (args, api, extraOptions) => {
  const baseQuery = fetchBaseQuery({
    baseUrl,
    prepareHeaders: (headers, { getState }) => {
      // Lấy token từ state
      const token = getState().auth.token;
      
      // Nếu có token, thêm vào header
      if (token) {
        headers.set('Authorization', `Bearer ${token}`);
      }
      
      return headers;
    },
  });

  // Thử nghiệm đầu tiên với token hiện tại
  let result = await baseQuery(args, api, extraOptions);
  
  // Nếu nhận được phản hồi 401 Unauthorized, thử làm mới token
  if (result.error && result.error.status === 401) {
    try {
      // Cố gắng lấy token mới
      const newToken = await refreshToken();
      
      // Lưu trữ token mới
      api.dispatch({ 
        type: 'auth/tokenRefreshed', 
        payload: newToken 
      });
      
      // Thử lại truy vấn ban đầu với token mới
      result = await baseQuery(args, api, extraOptions);
    } catch (refreshError) {
      // Xử lý khi làm mới token thất bại - chuyển hướng đến trang đăng nhập
      window.location.href = '/login';
    }
  }
  
  return result;
};

// RTK Query API
export const api = createApi({
  reducerPath: 'api',
  baseQuery: baseQueryWithReauth,
  tagTypes: ['Product', 'Category', 'User', 'Cart', 'Order', 'Review'],
  endpoints: () => ({}),
});

export default api;

--- File: client/src/services/authService.js ---
import axios from 'axios';
import { api } from './api';

// API base URL
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';
const AUTH_URL = `${API_URL}/auth`;

// Auth API endpoints
export const authApi = api.injectEndpoints({
  endpoints: (builder) => ({
    login: builder.mutation({
      query: (credentials) => ({
        url: '/auth/login',
        method: 'POST',
        body: credentials,
      }),
    }),
    register: builder.mutation({
      query: (userData) => ({
        url: '/auth/register',
        method: 'POST',
        body: userData,
      }),
    }),
    forgotPassword: builder.mutation({
      query: (email) => ({
        url: '/auth/forgot-password',
        method: 'POST',
        body: { email },
      }),
    }),
    resetPassword: builder.mutation({
      query: ({ token, password }) => ({
        url: '/auth/reset-password',
        method: 'POST',
        body: { token, password },
      }),
    }),
    getCurrentUser: builder.query({
      query: () => '/auth/me',
      providesTags: ['User'],
    }),
  }),
});

// Export hooks
export const {
  useLoginMutation,
  useRegisterMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
  useGetCurrentUserQuery,
} = authApi;

// Regular API service for use with Redux Thunk
const authService = {
  // Đăng nhập
  login: async (credentials) => {
    return await axios.post(`${AUTH_URL}/login`, credentials);
  },
  
  // Đăng ký
  register: async (userData) => {
    return await axios.post(`${AUTH_URL}/register`, userData);
  },
  
  // Quên mật khẩu
  forgotPassword: async (email) => {
    return await axios.post(`${AUTH_URL}/forgot-password`, { email });
  },
  
  // Đặt lại mật khẩu
  resetPassword: async (token, password) => {
    return await axios.post(`${AUTH_URL}/reset-password`, { token, password });
  },
  
  // Lấy thông tin người dùng hiện tại
  getCurrentUser: async () => {
    return await axios.get(`${AUTH_URL}/me`);
  },
  
  // Cập nhật thông tin người dùng
  updateProfile: async (userData) => {
    return await axios.put(`${API_URL}/users/profile`, userData);
  },
  
  // Đổi mật khẩu
  changePassword: async (passwordData) => {
    return await axios.put(`${API_URL}/users/password`, passwordData);
  },
};

export default authService;

--- File: client/src/services/cartService.js ---
import axios from 'axios';
import { api } from './api';

// API base URL
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';
const CART_URL = `${API_URL}/cart`;

// Cart API endpoints
export const cartApi = api.injectEndpoints({
  endpoints: (builder) => ({
    getCart: builder.query({
      query: () => '/cart',
      providesTags: ['Cart'],
    }),
    addToCart: builder.mutation({
      query: (item) => ({
        url: '/cart',
        method: 'POST',
        body: item,
      }),
      invalidatesTags: ['Cart'],
    }),
    updateCartItem: builder.mutation({
      query: ({ productId, quantity }) => ({
        url: `/cart/${productId}`,
        method: 'PUT',
        body: { quantity },
      }),
      invalidatesTags: ['Cart'],
    }),
    removeFromCart: builder.mutation({
      query: (productId) => ({
        url: `/cart/${productId}`,
        method: 'DELETE',
      }),
      invalidatesTags: ['Cart'],
    }),
    clearCart: builder.mutation({
      query: () => ({
        url: '/cart',
        method: 'DELETE',
      }),
      invalidatesTags: ['Cart'],
    }),
  }),
});

// Export hooks
export const {
  useGetCartQuery,
  useAddToCartMutation,
  useUpdateCartItemMutation,
  useRemoveFromCartMutation,
  useClearCartMutation,
} = cartApi;

// Regular API service for use with Redux Thunk
const cartService = {
  // Lấy giỏ hàng
  getCart: async () => {
    return await axios.get(CART_URL);
  },
  
  // Thêm sản phẩm vào giỏ hàng
  addToCart: async (item) => {
    return await axios.post(CART_URL, item);
  },
  
  // Cập nhật số lượng sản phẩm trong giỏ hàng
  updateCartItem: async (productId, quantity) => {
    return await axios.put(`${CART_URL}/${productId}`, { quantity });
  },
  
  // Xóa sản phẩm khỏi giỏ hàng
  removeFromCart: async (productId) => {
    return await axios.delete(`${CART_URL}/${productId}`);
  },
  
  // Xóa giỏ hàng
  clearCart: async () => {
    return await axios.delete(CART_URL);
  },
  
  // Áp dụng mã giảm giá
  applyCoupon: async (couponCode) => {
    return await axios.post(`${CART_URL}/coupon`, { code: couponCode });
  },
  
  // Xóa mã giảm giá
  removeCoupon: async () => {
    return await axios.delete(`${CART_URL}/coupon`);
  },
};

export default cartService;

--- File: client/src/services/productService.js ---
import axios from 'axios';
import { api } from './api';

// API base URL
const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';
const PRODUCTS_URL = `${API_URL}/products`;
const CATEGORIES_URL = `${API_URL}/categories`;

// Products API endpoints
export const productApi = api.injectEndpoints({
  endpoints: (builder) => ({
    getProducts: builder.query({
      query: (params) => ({
        url: '/products',
        params,
      }),
      providesTags: (result) =>
        result
          ? [
              ...result.products.map(({ id }) => ({ type: 'Product', id })),
              { type: 'Product', id: 'LIST' },
            ]
          : [{ type: 'Product', id: 'LIST' }],
    }),
    getProductById: builder.query({
      query: (id) => `/products/${id}`,
      providesTags: (result, error, id) => [{ type: 'Product', id }],
    }),
    getCategories: builder.query({
      query: () => '/categories',
      providesTags: [{ type: 'Category', id: 'LIST' }],
    }),
    getProductReviews: builder.query({
      query: (id) => `/products/${id}/reviews`,
      providesTags: (result, error, id) => [
        { type: 'Review', id: `product-${id}` },
      ],
    }),
  }),
});

// Export hooks
export const {
  useGetProductsQuery,
  useGetProductByIdQuery,
  useGetCategoriesQuery,
  useGetProductReviewsQuery,
} = productApi;

// Regular API service for use with Redux Thunk
const productService = {
  // Lấy danh sách sản phẩm
  getProducts: async (params = {}) => {
    return await axios.get(PRODUCTS_URL, { params });
  },
  
  // Lấy sản phẩm theo ID
  getProductById: async (id) => {
    return await axios.get(`${PRODUCTS_URL}/${id}`);
  },
  
  // Lấy danh sách danh mục
  getCategories: async () => {
    return await axios.get(CATEGORIES_URL);
  },
  
  // Lấy danh mục theo ID
  getCategoryById: async (id) => {
    return await axios.get(`${CATEGORIES_URL}/${id}`);
  },
  
  // Lấy đánh giá của sản phẩm
  getProductReviews: async (productId) => {
    return await axios.get(`${PRODUCTS_URL}/${productId}/reviews`);
  },
  
  // Thêm đánh giá cho sản phẩm
  addProductReview: async (productId, reviewData) => {
    return await axios.post(`${PRODUCTS_URL}/${productId}/reviews`, reviewData);
  },
  
  // Tìm kiếm sản phẩm
  searchProducts: async (keyword) => {
    return await axios.get(`${PRODUCTS_URL}/search`, { params: { keyword } });
  },
};

export default productService;

--- File: client/src/store/hooks.js ---
import { useDispatch, useSelector } from 'react-redux';

// Sử dụng hooks này thay vì useDispatch và useSelector thông thường
export const useAppDispatch = () => useDispatch();
export const useAppSelector = useSelector;

--- File: client/src/store/index.js ---
import { configureStore } from '@reduxjs/toolkit';
import { setupListeners } from '@reduxjs/toolkit/query';
import authReducer from './slices/authSlice';
import cartReducer from './slices/cartSlice';
import productReducer from './slices/productSlice';
import uiReducer from './slices/uiSlice';
import { api } from '../services/api';

export const store = configureStore({
  reducer: {
    auth: authReducer,
    cart: cartReducer,
    product: productReducer,
    ui: uiReducer,
    [api.reducerPath]: api.reducer,
  },
  middleware: (getDefaultMiddleware) =>
    getDefaultMiddleware().concat(api.middleware),
  devTools: process.env.NODE_ENV !== 'production',
});

// Cấu hình listeners cho RTK Query
setupListeners(store.dispatch);

// Hooks typing
export * from './hooks';

--- File: client/src/store/slices/authSlice.js ---
import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import authService from '../../services/authService';
import { setAuthToken, removeAuthToken } from '../../utils/authToken';

// Async thunks
export const login = createAsyncThunk(
  'auth/login',
  async (credentials, { rejectWithValue }) => {
    try {
      const response = await authService.login(credentials);
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Đăng nhập thất bại');
    }
  }
);

export const register = createAsyncThunk(
  'auth/register',
  async (userData, { rejectWithValue }) => {
    try {
      const response = await authService.register(userData);
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Đăng ký thất bại');
    }
  }
);

export const fetchCurrentUser = createAsyncThunk(
  'auth/fetchCurrentUser',
  async (_, { rejectWithValue }) => {
    try {
      const response = await authService.getCurrentUser();
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể lấy thông tin người dùng');
    }
  }
);

// Initial state
const initialState = {
  user: null,
  token: localStorage.getItem('token'),
  isAuthenticated: !!localStorage.getItem('token'),
  loading: false,
  error: null,
};

// Slice
const authSlice = createSlice({
  name: 'auth',
  initialState,
  reducers: {
    logout: (state) => {
      state.user = null;
      state.token = null;
      state.isAuthenticated = false;
      removeAuthToken();
      localStorage.removeItem('token');
    },
    clearError: (state) => {
      state.error = null;
    },
  },
  extraReducers: (builder) => {
    builder
      // Login
      .addCase(login.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(login.fulfilled, (state, action) => {
        state.loading = false;
        state.isAuthenticated = true;
        state.user = action.payload.user;
        state.token = action.payload.token;
        
        // Lưu token vào localStorage và thiết lập header cho axios
        localStorage.setItem('token', action.payload.token);
        setAuthToken(action.payload.token);
      })
      .addCase(login.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Register
      .addCase(register.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(register.fulfilled, (state, action) => {
        state.loading = false;
        state.isAuthenticated = true;
        state.user = action.payload.user;
        state.token = action.payload.token;
        
        // Lưu token vào localStorage và thiết lập header cho axios
        localStorage.setItem('token', action.payload.token);
        setAuthToken(action.payload.token);
      })
      .addCase(register.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Fetch current user
      .addCase(fetchCurrentUser.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(fetchCurrentUser.fulfilled, (state, action) => {
        state.loading = false;
        state.user = action.payload;
      })
      .addCase(fetchCurrentUser.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
        // Nếu token không hợp lệ, đăng xuất người dùng
        if (action.payload === 'Unauthorized' || action.payload === 'Invalid token') {
          state.user = null;
          state.token = null;
          state.isAuthenticated = false;
          removeAuthToken();
          localStorage.removeItem('token');
        }
      });
  },
});

// Actions
export const { logout, clearError } = authSlice.actions;

// Selectors
export const selectAuth = (state) => state.auth;
export const selectIsAuthenticated = (state) => state.auth.isAuthenticated;
export const selectUser = (state) => state.auth.user;
export const selectAuthLoading = (state) => state.auth.loading;
export const selectAuthError = (state) => state.auth.error;

// Reducer
export default authSlice.reducer;

--- File: client/src/store/slices/cartSlice.js ---
import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import cartService from '../../services/cartService';

// Async thunks
export const fetchCart = createAsyncThunk(
  'cart/fetchCart',
  async (_, { rejectWithValue }) => {
    try {
      const response = await cartService.getCart();
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể lấy giỏ hàng');
    }
  }
);

export const addToCart = createAsyncThunk(
  'cart/addToCart',
  async (item, { rejectWithValue }) => {
    try {
      const response = await cartService.addToCart(item);
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể thêm vào giỏ hàng');
    }
  }
);

export const updateCartItem = createAsyncThunk(
  'cart/updateCartItem',
  async ({ productId, quantity }, { rejectWithValue }) => {
    try {
      const response = await cartService.updateCartItem(productId, quantity);
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể cập nhật giỏ hàng');
    }
  }
);

export const removeFromCart = createAsyncThunk(
  'cart/removeFromCart',
  async (productId, { rejectWithValue }) => {
    try {
      const response = await cartService.removeFromCart(productId);
      return { ...response.data, productId };
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể xóa khỏi giỏ hàng');
    }
  }
);

export const clearCart = createAsyncThunk(
  'cart/clearCart',
  async (_, { rejectWithValue }) => {
    try {
      const response = await cartService.clearCart();
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể xóa giỏ hàng');
    }
  }
);

// Initial state
const initialState = {
  items: [],
  subtotal: 0,
  total: 0,
  count: 0,
  loading: false,
  error: null,
};

// Slice
const cartSlice = createSlice({
  name: 'cart',
  initialState,
  reducers: {
    clearCartError: (state) => {
      state.error = null;
    },
    // Tính toán tổng số tiền và số lượng
    calculateTotals: (state) => {
      state.count = state.items.reduce((total, item) => total + item.quantity, 0);
      state.subtotal = state.items.reduce(
        (total, item) => total + item.price * item.quantity, 
        0
      );
      // Tổng = Tổng phụ (có thể thêm thuế, phí vận chuyển sau này)
      state.total = state.subtotal;
    },
  },
  extraReducers: (builder) => {
    builder
      // Fetch cart
      .addCase(fetchCart.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(fetchCart.fulfilled, (state, action) => {
        state.loading = false;
        state.items = action.payload.items || [];
        state.subtotal = action.payload.subtotal || 0;
        state.total = action.payload.total || 0;
        state.count = state.items.reduce((total, item) => total + item.quantity, 0);
      })
      .addCase(fetchCart.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Add to cart
      .addCase(addToCart.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(addToCart.fulfilled, (state, action) => {
        state.loading = false;
        state.items = action.payload.items || [];
        state.subtotal = action.payload.subtotal || 0;
        state.total = action.payload.total || 0;
        state.count = state.items.reduce((total, item) => total + item.quantity, 0);
      })
      .addCase(addToCart.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Update cart item
      .addCase(updateCartItem.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(updateCartItem.fulfilled, (state, action) => {
        state.loading = false;
        state.items = action.payload.items || [];
        state.subtotal = action.payload.subtotal || 0;
        state.total = action.payload.total || 0;
        state.count = state.items.reduce((total, item) => total + item.quantity, 0);
      })
      .addCase(updateCartItem.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Remove from cart
      .addCase(removeFromCart.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(removeFromCart.fulfilled, (state, action) => {
        state.loading = false;
        state.items = action.payload.items || [];
        state.subtotal = action.payload.subtotal || 0;
        state.total = action.payload.total || 0;
        state.count = state.items.reduce((total, item) => total + item.quantity, 0);
      })
      .addCase(removeFromCart.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Clear cart
      .addCase(clearCart.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(clearCart.fulfilled, (state) => {
        state.loading = false;
        state.items = [];
        state.subtotal = 0;
        state.total = 0;
        state.count = 0;
      })
      .addCase(clearCart.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      });
  },
});

// Actions
export const { clearCartError, calculateTotals } = cartSlice.actions;

// Selectors
export const selectCart = (state) => state.cart;
export const selectCartItems = (state) => state.cart.items;
export const selectCartCount = (state) => state.cart.count;
export const selectCartSubtotal = (state) => state.cart.subtotal;
export const selectCartTotal = (state) => state.cart.total;
export const selectCartLoading = (state) => state.cart.loading;
export const selectCartError = (state) => state.cart.error;

// Reducer
export default cartSlice.reducer;

--- File: client/src/store/slices/productSlice.js ---
import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';
import productService from '../../services/productService';

// Async thunks
export const fetchProducts = createAsyncThunk(
  'product/fetchProducts',
  async (params, { rejectWithValue }) => {
    try {
      const response = await productService.getProducts(params);
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể lấy danh sách sản phẩm');
    }
  }
);

export const fetchProductById = createAsyncThunk(
  'product/fetchProductById',
  async (id, { rejectWithValue }) => {
    try {
      const response = await productService.getProductById(id);
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể lấy thông tin sản phẩm');
    }
  }
);

export const fetchCategories = createAsyncThunk(
  'product/fetchCategories',
  async (_, { rejectWithValue }) => {
    try {
      const response = await productService.getCategories();
      return response.data;
    } catch (error) {
      return rejectWithValue(error.response?.data?.message || 'Không thể lấy danh mục sản phẩm');
    }
  }
);

// Initial state
const initialState = {
  products: [],
  product: null,
  categories: [],
  filters: {
    category: '',
    priceRange: { min: 0, max: 0 },
    sort: 'newest',
  },
  pagination: {
    page: 1,
    limit: 12,
    total: 0,
    pages: 0,
  },
  loading: false,
  error: null,
};

// Slice
const productSlice = createSlice({
  name: 'product',
  initialState,
  reducers: {
    setFilters: (state, action) => {
      state.filters = { ...state.filters, ...action.payload };
      // Reset trang về 1 khi thay đổi bộ lọc
      state.pagination.page = 1;
    },
    setPage: (state, action) => {
      state.pagination.page = action.payload;
    },
    clearProductError: (state) => {
      state.error = null;
    },
    clearSelectedProduct: (state) => {
      state.product = null;
    },
  },
  extraReducers: (builder) => {
    builder
      // Fetch products
      .addCase(fetchProducts.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(fetchProducts.fulfilled, (state, action) => {
        state.loading = false;
        state.products = action.payload.products;
        state.pagination = {
          page: action.payload.page,
          limit: action.payload.limit,
          total: action.payload.total,
          pages: action.payload.pages,
        };
      })
      .addCase(fetchProducts.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Fetch product by id
      .addCase(fetchProductById.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(fetchProductById.fulfilled, (state, action) => {
        state.loading = false;
        state.product = action.payload;
      })
      .addCase(fetchProductById.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      })
      
      // Fetch categories
      .addCase(fetchCategories.pending, (state) => {
        state.loading = true;
        state.error = null;
      })
      .addCase(fetchCategories.fulfilled, (state, action) => {
        state.loading = false;
        state.categories = action.payload;
      })
      .addCase(fetchCategories.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      });
  },
});

// Actions
export const { setFilters, setPage, clearProductError, clearSelectedProduct } = productSlice.actions;

// Selectors
export const selectProducts = (state) => state.product.products;
export const selectSelectedProduct = (state) => state.product.product;
export const selectCategories = (state) => state.product.categories;
export const selectFilters = (state) => state.product.filters;
export const selectPagination = (state) => state.product.pagination;
export const selectProductLoading = (state) => state.product.loading;
export const selectProductError = (state) => state.product.error;

// Reducer
export default productSlice.reducer;

--- File: client/src/store/slices/uiSlice.js ---
import { createSlice } from '@reduxjs/toolkit';

// Initial state
const initialState = {
  sidebarOpen: false,
  notifications: [],
  theme: localStorage.getItem('theme') || 'light',
};

// Slice
const uiSlice = createSlice({
  name: 'ui',
  initialState,
  reducers: {
    toggleSidebar: (state) => {
      state.sidebarOpen = !state.sidebarOpen;
    },
    setSidebarOpen: (state, action) => {
      state.sidebarOpen = action.payload;
    },
    addNotification: (state, action) => {
      const id = Date.now().toString();
      state.notifications.push({
        id,
        type: action.payload.type || 'info',
        message: action.payload.message,
        duration: action.payload.duration || 5000,
      });
    },
    removeNotification: (state, action) => {
      state.notifications = state.notifications.filter(
        (notification) => notification.id !== action.payload
      );
    },
    clearNotifications: (state) => {
      state.notifications = [];
    },
    setTheme: (state, action) => {
      state.theme = action.payload;
      localStorage.setItem('theme', action.payload);
      
      // Áp dụng theme vào document
      document.documentElement.classList.remove('light', 'dark');
      document.documentElement.classList.add(action.payload);
    },
  },
});

// Actions
export const {
  toggleSidebar,
  setSidebarOpen,
  addNotification,
  removeNotification,
  clearNotifications,
  setTheme,
} = uiSlice.actions;

// Selectors
export const selectSidebarOpen = (state) => state.ui.sidebarOpen;
export const selectNotifications = (state) => state.ui.notifications;
export const selectTheme = (state) => state.ui.theme;

// Reducer
export default uiSlice.reducer;

--- File: client/src/utils/authToken.js ---
import axios from 'axios';
// client/src/utils/authToken.js
const TOKEN_KEY = 'auth_token';
const REFRESH_TOKEN_KEY = 'refresh_token';

export const setAuthToken = (token) => {
  localStorage.setItem(TOKEN_KEY, token);
};

export const getAuthToken = () => {
  return localStorage.getItem(TOKEN_KEY);
};

export const removeAuthToken = () => {
  localStorage.removeItem(TOKEN_KEY);
};

export const setRefreshToken = (token) => {
  localStorage.setItem(REFRESH_TOKEN_KEY, token);
};

export const getRefreshToken = () => {
  return localStorage.getItem(REFRESH_TOKEN_KEY);
};

export const removeRefreshToken = () => {
  localStorage.removeItem(REFRESH_TOKEN_KEY);
};

export const refreshToken = async () => {
  try {
    const refreshToken = getRefreshToken();
    
    if (!refreshToken) {
      throw new Error('No refresh token available');
    }
    
    const response = await fetch(`${process.env.REACT_APP_API_URL}/auth/refresh-token`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ refreshToken }),
    });
    
    if (!response.ok) {
      throw new Error('Failed to refresh token');
    }
    
    const data = await response.json();
    setAuthToken(data.token);
    
    if (data.refreshToken) {
      setRefreshToken(data.refreshToken);
    }
    
    return data.token;
  } catch (error) {
    removeAuthToken();
    removeRefreshToken();
    throw error;
  }
};

export const isAuthenticated = () => {
  return !!getAuthToken();
};
/**
 * Thiết lập token vào header của Axios
 * @param {string} token - JWT token
 */
// export const setAuthToken = (token) => {
//   if (token) {
//     // Áp dụng token cho tất cả các request
//     axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;
//   } else {
//     // Xóa header nếu không có token
//     delete axios.defaults.headers.common['Authorization'];
//   }
// };

// /**
//  * Xóa token khỏi header của Axios
//  */
// export const removeAuthToken = () => {
//   delete axios.defaults.headers.common['Authorization'];
// };

--- File: client/src/utils/formatters.js ---
/**
 * Định dạng giá tiền theo VND
 * @param {number} price - Số tiền cần định dạng
 * @returns {string} Giá tiền đã định dạng
 */
export const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND',
    }).format(price);
  };
  
  /**
   * Định dạng ngày theo định dạng chuẩn VN
   * @param {string|Date} date - Ngày cần định dạng
   * @returns {string} Ngày đã định dạng
   */
  export const formatDate = (date) => {
    const dateObj = new Date(date);
    return new Intl.DateTimeFormat('vi-VN', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
    }).format(dateObj);
  };
  
  /**
   * Định dạng ngày giờ theo định dạng chuẩn VN
   * @param {string|Date} datetime - Ngày giờ cần định dạng
   * @returns {string} Ngày giờ đã định dạng
   */
  export const formatDateTime = (datetime) => {
    const dateObj = new Date(datetime);
    return new Intl.DateTimeFormat('vi-VN', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    }).format(dateObj);
  };
  
  /**
   * Rút gọn văn bản nếu quá dài
   * @param {string} text - Văn bản cần rút gọn
   * @param {number} maxLength - Độ dài tối đa
   * @returns {string} Văn bản đã rút gọn
   */
  export const truncateText = (text, maxLength = 100) => {
    if (!text || text.length <= maxLength) return text;
    return text.substr(0, maxLength) + '...';
  };
  
  /**
   * Tạo slug từ text
   * @param {string} text - Text cần chuyển đổi
   * @returns {string} Slug
   */
  export const createSlug = (text) => {
    return text
      .toLowerCase()
      .trim()
      .replace(/[^\w\s-]/g, '')
      .replace(/[\s_-]+/g, '-')
      .replace(/^-+|-+$/g, '');
  };

--- File: client/tailwind.config.js ---
module.exports = {
    content: [
      './src/**/*.{js,jsx,ts,tsx}',
      './public/index.html',
    ],
    theme: {
      extend: {
        colors: {
          primary: {
            50: '#e6f1fe',
            100: '#cce3fd',
            200: '#99c7fb',
            300: '#66aaf9',
            400: '#338ef7',
            500: '#0072f5', // Primary color
            600: '#005bc4',
            700: '#004493',
            800: '#002e62',
            900: '#001731',
          },
        },
        fontFamily: {
          sans: ['Roboto', 'Arial', 'sans-serif'],
          heading: ['Montserrat', 'Arial', 'sans-serif'],
        },
        spacing: {
          '72': '18rem',
          '84': '21rem',
          '96': '24rem',
        },
        borderRadius: {
          'xl': '0.75rem',
          '2xl': '1rem',
        },
        boxShadow: {
          'outline-blue': '0 0 0 3px rgba(0, 114, 245, 0.3)',
        },
        transitionProperty: {
          'height': 'height',
          'spacing': 'margin, padding',
        },
      },
    },
    plugins: [
      require('@tailwindcss/forms'),
    ],
  };

--- File: docker/Dockerfile.client ---
# Sử dụng multi-stage build để tối ưu image size

# Stage 1: Build stage
FROM node:18-alpine AS build

# Tạo thư mục làm việc
WORKDIR /app

# Sao chép package.json và package-lock.json
COPY package*.json ./

# Cài đặt dependencies
RUN npm ci

# Sao chép source code của ứng dụng
COPY . .

# Build ứng dụng React
RUN npm run build

# Stage 2: Production stage
FROM nginx:alpine

# Sao chép build files từ build stage vào thư mục root của Nginx
COPY --from=build /app/build /usr/share/nginx/html

# Sao chép cấu hình Nginx tùy chỉnh (nếu có)
# COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Khởi chạy Nginx
CMD ["nginx", "-g", "daemon off;"]

--- File: docker/Dockerfile.server ---
# Sử dụng Node.js 18 với Alpine Linux cho nhẹ và bảo mật
FROM node:18-alpine

# Tạo thư mục làm việc
WORKDIR /app

# Sao chép package.json và package-lock.json trước để tận dụng Docker caching
COPY package*.json ./

# Cài đặt dependencies
RUN npm ci --only=production

# Sao chép source code của ứng dụng
COPY . .

# Tạo thư mục logs
RUN mkdir -p logs

# Set node user cho bảo mật tốt hơn (không chạy ứng dụng với quyền root)
USER node

# Expose port
EXPOSE 5000

# Biến môi trường
ENV NODE_ENV=production

# Khởi chạy ứng dụng
CMD ["node", "src/server.js"] 

--- File: docker/docker-compose.yml ---
version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6
    container_name: runout_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: runout_biliard
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init/:/docker-entrypoint-initdb.d/
      - ./mongodb_backup:/backup
    networks:
      - runout_network
    # Không expose port ra ngoài trong môi trường production
    ports:
      - "127.0.0.1:27017:27017"
    command: ["--auth", "--wiredTigerCacheSizeGB", "1"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
  
  # MongoDB Backup Service
  mongo-backup:
    image: mongo:6
    container_name: runout_mongodb_backup
    restart: always
    depends_on:
      - mongodb
    volumes:
      - ./mongodb_backup:/backup
      - ./scripts:/scripts
    entrypoint: ["sh", "/scripts/mongodb-backup.sh"]
    networks:
      - runout_network
    environment:
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DATABASE=runout_biliard
      - BACKUP_CRON="0 2 * * *" # Chạy lúc 2 giờ sáng hàng ngày

  # Backend Service
  backend:
    image: ${DOCKER_HUB_USERNAME}/runout-biliard-server:latest
    container_name: runout_backend_prod
    restart: always
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/runout_biliard?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - APP_NAME=RunOut-Biliard
      - SIGNATURE=${SIGNATURE}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - backend_logs:/app/logs
    networks:
      - runout_network
    # Sử dụng Nginx làm reverse proxy, chỉ expose trong internal network
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: runout_nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
      - ./nginx/www:/var/www/html
    networks:
      - runout_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: runout_prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    networks:
      - runout_network
    expose:
      - "9090"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: runout_grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - runout_network
    expose:
      - "3000"
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: runout_node_exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    networks:
      - runout_network
    expose:
      - "9100"

  # Watchtower for automatic container updates
  watchtower:
    image: containrrr/watchtower
    container_name: runout_watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 86400 --cleanup
    environment:
      - WATCHTOWER_NOTIFICATIONS=slack
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${SLACK_WEBHOOK_URL}
      - WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=watchtower
      - WATCHTOWER_NOTIFICATION_SLACK_CHANNEL=${SLACK_CHANNEL:-deployments}
    networks:
      - runout_network

networks:
  runout_network:
    driver: bridge

volumes:
  mongodb_data:
  backend_logs:
  prometheus_data:
  grafana_data:

--- File: docker-compose.prod.yml ---
version: '3.8'

services:
  # MongoDB Service
  mongodb:
    image: mongo:6
    container_name: runout_mongodb_prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - runout_network
    # Không expose port ra ngoài trong môi trường production
    ports:
      - "127.0.0.1:27017:27017"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend Service
  backend:
    image: ${DOCKER_HUB_USERNAME}/runout-biliard-server:latest
    container_name: runout_backend_prod
    restart: always
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/runout_biliard?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - APP_NAME=RunOut-Biliard
      - SIGNATURE=${SIGNATURE}
    volumes:
      - backend_logs:/app/logs
    networks:
      - runout_network
    # Sử dụng Nginx làm reverse proxy, chỉ expose trong internal network
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: runout_nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - runout_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  runout_network:
    driver: bridge

volumes:
  mongodb_data:
  backend_logs:
    driver: local
    driver_opts:
      type: none
      device: /opt/runout-biliard/logs
      o: bind
  nginx_logs:
    driver: local
    driver_opts:
      type: none
      device: /opt/runout-biliard/nginx/logs
      o: bind
  nginx_ssl:
    driver: local
    driver_opts:
      type: none
      device: /opt/runout-biliard/nginx/ssl
      o: bind
  # Chú ý: Đảm bảo rằng các thư mục /opt/runout-biliard/logs, /opt/runout-biliard/nginx/logs và /opt/runout-biliard/nginx/ssl đã tồn tại trên server trước khi chạy docker-compose.
  # Nếu chưa tồn tại, bạn có thể tạo chúng bằng lệnh sau:
  # mkdir -p /opt/runout-biliard/logs /opt/runout-biliard/nginx/logs /opt/runout-biliard/nginx/ssl
  # Hoặc bạn có thể thay đổi đường dẫn trong driver_opts để phù hợp với cấu trúc thư mục của bạn.
  # Nếu bạn muốn sử dụng volume mặc định của Docker, bạn có thể bỏ qua phần này và chỉ cần định nghĩa mongodb_data.
  # Tuy nhiên, việc sử dụng volume bind mount như trên sẽ giúp bạn dễ dàng truy cập và quản lý các file log và ssl certificate từ bên ngoài container.

--- File: docs/CI-CD-Guide.md ---
# Hướng Dẫn CI/CD cho Dự Án RunOut-Biliard

## Tổng Quan

RunOut-Biliard sử dụng GitHub Actions để tự động hóa quy trình Continuous Integration (CI) và Continuous Deployment (CD). Tài liệu này mô tả cách thức hoạt động của các pipeline CI/CD và cách các developer có thể làm việc với chúng.

## Quy Trình Làm Việc (Workflow)

### 1. Quy Trình Phát Triển

1. **Tạo Branch Mới**: Bắt đầu từ nhánh `develop`, tạo một branch mới cho tính năng hoặc sửa lỗi của bạn:
   ```bash
   git checkout develop
   git pull
   git checkout -b feature/your-feature-name
   ```

2. **Phát Triển**: Viết code, tests và commit thường xuyên:
   ```bash
   git add .
   git commit -m "feat: implement xyz feature"
   ```

3. **Push Branch**: Đẩy branch lên GitHub:
   ```bash
   git push -u origin feature/your-feature-name
   ```

4. **Tạo Pull Request**: Tạo Pull Request (PR) từ branch của bạn vào nhánh `develop`.
   - Điền thông tin theo template PR
   - Chỉ định reviewer thích hợp

5. **CI Tự Động Chạy**: Khi PR được tạo, workflow CI sẽ tự động chạy.

6. **Merge**: Sau khi PR được approve và tất cả checks đã thành công, bạn có thể merge PR vào nhánh `develop`.

### 2. Quy Trình Release

1. **Tạo Release Branch**: Khi chuẩn bị release, tạo branch từ `develop`:
   ```bash
   git checkout develop
   git checkout -b release/v1.0.0
   ```

2. **Cập Nhật Version**: Cập nhật version trong package.json và các tài liệu khác.

3. **Tạo PR vào Main**: Tạo Pull Request từ branch release vào nhánh `main`.

4. **Chạy Tests**: Đảm bảo CI hoàn thành thành công.

5. **Merge vào Main**: Sau khi PR được approve, merge vào `main`.

6. **Tạo Tag**: Tạo tag cho version mới:
   ```bash
   git checkout main
   git pull
   git tag -a v1.0.0 -m "Version 1.0.0"
   git push origin v1.0.0
   ```

7. **Đồng Bộ về Develop**: Tạo PR để merge `main` trở lại `develop`.

## Chi Tiết về CI Pipeline

Pipeline CI sẽ tự động chạy khi:
- Push vào nhánh `main` hoặc `develop`
- Tạo Pull Request vào `main` hoặc `develop`

### Các bước trong CI Pipeline

1. **Backend Tests**:
   - Khởi tạo môi trường với Node.js và MongoDB
   - Cài đặt dependencies
   - Kiểm tra linting
   - Chạy unit tests và integration tests
   - Tạo coverage report

2. **Frontend Tests**:
   - Cài đặt dependencies
   - Kiểm tra linting
   - Chạy unit tests
   - Build ứng dụng

3. **Security Scan**:
   - Chạy npm audit để kiểm tra các dependencies có vấn đề bảo mật không

## Chi Tiết về CD Pipeline

Pipeline CD sẽ tự động chạy khi:
- Push vào nhánh `main`
- Kích hoạt thủ công qua GitHub

### Các bước trong CD Pipeline

1. **Deploy Backend**:
   - Build Docker image
   - Push image lên Docker Hub
   - SSH vào production server và cập nhật container

2. **Deploy Frontend**:
   - Build ứng dụng React với biến môi trường production
   - Deploy lên service hosting (Netlify/Vercel)

3. **Notify**:
   - Gửi thông báo tới Slack về status của deployment

## Biến Môi Trường trong GitHub Secrets

Các GitHub Secrets sau cần được cấu hình:

- `DOCKER_HUB_USERNAME`: Username Docker Hub
- `DOCKER_HUB_TOKEN`: Token để authenticate với Docker Hub
- `PRODUCTION_HOST`: Hostname hoặc IP của production server
- `PRODUCTION_USERNAME`: Username SSH cho server
- `PRODUCTION_SSH_KEY`: Private key SSH
- `PRODUCTION_API_URL`: URL của API production
- `NETLIFY_AUTH_TOKEN`: Token Netlify (nếu sử dụng)
- `NETLIFY_SITE_ID`: ID site Netlify (nếu sử dụng)
- `SLACK_WEBHOOK`: Webhook URL cho thông báo Slack

## Troubleshooting

### Pipeline CI Failed

1. Kiểm tra build logs trong tab Actions của GitHub
2. Sửa các lỗi được báo cáo trong logs
3. Push changes vào PR branch
4. CI pipeline sẽ tự động chạy lại

### Pipeline CD Failed

1. Kiểm tra logs và errors
2. Đảm bảo tất cả secrets được cấu hình đúng
3. Kiểm tra kết nối đến production server
4. Thử deploy lại thủ công bằng cách kích hoạt workflow CD trong tab Actions

## Quy Ước Commit

Dự án này sử dụng quy ước [Conventional Commits](https://www.conventionalcommits.org/):

- `feat`: Thêm tính năng mới
- `fix`: Sửa lỗi
- `docs`: Thay đổi documentation
- `style`: Thay đổi không ảnh hưởng đến code (format, spaces, etc.)
- `refactor`: Thay đổi code không thêm tính năng hoặc sửa lỗi
- `perf`: Cải thiện hiệu suất
- `test`: Thêm hoặc sửa tests
- `chore`: Thay đổi build process, tools, etc.

Ví dụ:
```
feat: add user authentication
fix: correct product pagination
docs: update deployment instructions
```

---

© 2025 RunOut-Biliard. Tất cả các quyền thuộc về Steve.

--- File: init-structure.sh ---
#!/bin/bash

# Tạo thư mục gốc
mkdir -p runout-biliard

# Server (Backend Node.js/Express)
mkdir -p runout-biliard/server/src/{api,services,data,common,config}
touch runout-biliard/server/src/{app.js,server.js}
mkdir -p runout-biliard/server/tests
touch runout-biliard/server/{.eslintrc.js,.prettierrc,jest.config.js,package.json,README.md}

# Client (Frontend React)
mkdir -p runout-biliard/client/public
mkdir -p runout-biliard/client/src/{assets,components,hooks,pages,services,store,utils,routes}
touch runout-biliard/client/src/{App.js,index.js}
touch runout-biliard/client/{.eslintrc.js,.prettierrc,package.json,README.md}

# Docker files
mkdir -p runout-biliard/docker
touch runout-biliard/docker/{docker-compose.yml,Dockerfile.server,Dockerfile.client}

# GitHub Actions
mkdir -p runout-biliard/.github/workflows
touch runout-biliard/.github/workflows/{ci.yml,deploy.yml}

# Root files
touch runout-biliard/.gitignore
touch runout-biliard/README.md

echo "✅ Cấu trúc thư mục dự án runout-biliard đã được tạo thành công."


--- File: nginx/conf.d/default.conf ---
server {
    listen 80;
    server_name example.com www.example.com;
    
    # Redirect tất cả các request HTTP sang HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name example.com www.example.com;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # API Endpoints
    location /api {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Cache settings
        proxy_cache_bypass $http_upgrade;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Root location - Serve SPA frontend
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Caching static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }
        
        # No cache for HTML files
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
        }
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Favicon
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    # Robots.txt
    location = /robots.txt {
        log_not_found off;
        access_log off;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Custom header to identify website owner
    add_header X-Owner "RunOut-Biliard - Steve" always;
}

--- File: prometheus/prometheus.yml ---
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Rule files to load
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']

  # MongoDB Exporter
  - job_name: 'mongodb'
    static_configs:
      - targets: ['mongodb-exporter:9216']

  # Backend Service
  - job_name: 'backend'
    metrics_path: '/api/metrics'
    static_configs:
      - targets: ['backend:5000']

  # Nginx Exporter
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']

--- File: scripts/mongodb-backup.sh ---
#!/bin/sh

# Script thực hiện sao lưu MongoDB
# Tác giả: Steve
# Dự án: RunOut-Biliard

# Biến môi trường
MONGO_HOST=${MONGO_HOST:-mongodb}
MONGO_PORT=${MONGO_PORT:-27017}
MONGO_USERNAME=${MONGO_USERNAME:-root}
MONGO_PASSWORD=${MONGO_PASSWORD:-example}
MONGO_DATABASE=${MONGO_DATABASE:-runout_biliard}
BACKUP_DIR=${BACKUP_DIR:-/backup}
BACKUP_CRON=${BACKUP_CRON:-"0 2 * * *"} # Mặc định: 2 giờ sáng hàng ngày
BACKUP_RETENTION=${BACKUP_RETENTION:-7} # Giữ lại backup trong 7 ngày

# Đảm bảo thư mục backup tồn tại
mkdir -p ${BACKUP_DIR}

# Hàm thực hiện backup
perform_backup() {
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_FILENAME="${MONGO_DATABASE}_${TIMESTAMP}.gz"
    BACKUP_PATH="${BACKUP_DIR}/${BACKUP_FILENAME}"
    
    echo "$(date): Bắt đầu sao lưu ${MONGO_DATABASE} vào ${BACKUP_PATH}..."
    
    # Thực hiện backup với mongodump
    mongodump \
        --host=${MONGO_HOST} \
        --port=${MONGO_PORT} \
        --username=${MONGO_USERNAME} \
        --password=${MONGO_PASSWORD} \
        --authenticationDatabase=admin \
        --db=${MONGO_DATABASE} \
        --gzip \
        --archive=${BACKUP_PATH}
    
    # Kiểm tra kết quả
    if [ $? -eq 0 ]; then
        echo "$(date): Sao lưu thành công: ${BACKUP_PATH}"
        
        # Cập nhật chủ sở hữu file
        chmod 600 ${BACKUP_PATH}
        
        # Lưu thông tin meta
        echo "Database: ${MONGO_DATABASE}" > "${BACKUP_PATH}.meta"
        echo "Created at: $(date)" >> "${BACKUP_PATH}.meta"
        echo "Server: ${MONGO_HOST}:${MONGO_PORT}" >> "${BACKUP_PATH}.meta"
        echo "Signature: RunOut-Biliard - Steve" >> "${BACKUP_PATH}.meta"
    else
        echo "$(date): Sao lưu thất bại: ${BACKUP_PATH}"
    fi
}

# Hàm xóa backup cũ
cleanup_old_backups() {
    echo "$(date): Xóa các bản sao lưu cũ hơn ${BACKUP_RETENTION} ngày..."
    find ${BACKUP_DIR} -name "${MONGO_DATABASE}_*.gz" -type f -mtime +${BACKUP_RETENTION} -delete
    find ${BACKUP_DIR} -name "${MONGO_DATABASE}_*.gz.meta" -type f -mtime +${BACKUP_RETENTION} -delete
    echo "$(date): Đã xóa các bản sao lưu cũ."
}

# Thực hiện backup ngay lập tức
perform_backup
cleanup_old_backups

# Nếu được chạy như một container độc lập, thiết lập cron job
if [ "$1" = "schedule" ]; then
    echo "Thiết lập cron job: ${BACKUP_CRON}"
    echo "${BACKUP_CRON} /scripts/mongodb-backup.sh backup" > /etc/crontabs/root
    crond -f -d 8
else
    echo "Backup thủ công hoàn tất. Thoát..."
fi

--- File: server/.eslintrc.js ---
module.exports = {
    env: {
      node: true,
      commonjs: true,
      es2021: true,
      jest: true,
    },
    extends: [
      'eslint:recommended',
      'plugin:node/recommended',
      'plugin:jest/recommended',
      'prettier'
    ],
    parserOptions: {
      ecmaVersion: 'latest',
    },
    plugins: ['prettier', 'jest'],
    rules: {
      'prettier/prettier': 'error',
      'no-console': 'warn',
      'no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
      'node/exports-style': ['error', 'module.exports'],
      'node/file-extension-in-import': ['error', 'always'],
      'node/prefer-global/buffer': ['error', 'always'],
      'node/prefer-global/console': ['error', 'always'],
      'node/prefer-global/process': ['error', 'always'],
      'node/prefer-global/url-search-params': ['error', 'always'],
      'node/prefer-global/url': ['error', 'always'],
      'node/prefer-promises/dns': 'error',
      'node/prefer-promises/fs': 'error',
      'jest/no-disabled-tests': 'warn',
      'jest/no-focused-tests': 'error',
      'jest/no-identical-title': 'error',
      'jest/valid-expect': 'error'
    },
  };

--- File: server/.prettierrc ---
{
    "semi": true,
    "singleQuote": true,
    "trailingComma": "es5",
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false,
    "bracketSpacing": true,
    "arrowParens": "always",
    "endOfLine": "lf"
  }

--- File: server/README.md ---
# RunOut-Biliard Backend

## Giới Thiệu

Backend cho hệ thống RunOut-Biliard, xây dựng trên nền tảng Node.js, Express và MongoDB. Hệ thống được thiết kế với kiến trúc phân lớp, tách biệt rõ ràng các thành phần và dễ dàng mở rộng.

## Cấu Trúc Dự Án

```
server/
├── src/                    # Source code
│   ├── api/                # API endpoints
│   │   ├── controllers/    # Xử lý requests và responses
│   │   ├── routes/         # Định nghĩa routes
│   │   └── middleware/     # Middleware cho routes
│   │
│   ├── services/           # Business logic
│   │   ├── auth/           # Xác thực và phân quyền
│   │   ├── user/           # Quản lý người dùng
│   │   ├── email/          # Gửi email
│   │   └── base/           # Service cơ sở
│   │
│   ├── data/               # Data layer
│   │   ├── models/         # MongoDB models
│   │   ├── repositories/   # Repository patterns
│   │   └── dto/            # Data Transfer Objects
│   │
│   ├── common/             # Shared code
│   │   ├── validators/     # Validation logic
│   │   ├── errors/         # Error classes
│   │   └── types/          # Type definitions
│   │
│   ├── middleware/         # Middleware ứng dụng
│   │   ├── auth.js         # Authentication middleware
│   │   ├── errorHandler.js # Error handling middleware
│   │   └── validate.js     # Validation middleware
│   │
│   ├── utils/              # Utility functions
│   │   ├── catchAsync.js   # Async error handler
│   │   ├── apiFeatures.js  # API features (filtering, sorting, pagination)
│   │   └── responseHandler.js # Response formatter
│   │
│   ├── config/             # Cấu hình ứng dụng
│   │   ├── environment.js  # Biến môi trường
│   │   ├── database.js     # Cấu hình database
│   │   ├── logger.js       # Cấu hình logger
│   │   └── middleware.js   # Cấu hình middleware
│   │
│   ├── app.js              # Express application setup
│   └── server.js           # Entry point
│
├── tests/                  # Test files
│   ├── unit/               # Unit tests
│   ├── integration/        # Integration tests
│   └── setup.js            # Test setup
│
├── logs/                   # Log files
├── uploads/                # Uploaded files
├── .env.example            # Example environment variables
├── .eslintrc.js            # ESLint configuration
├── .prettierrc             # Prettier configuration
├── jest.config.js          # Jest configuration
├── package.json            # Dependencies & scripts
└── README.md               # This file
```

## Kiến Trúc Phần Mềm

Backend được xây dựng theo kiến trúc phân lớp:

1. **API Layer**: Xử lý HTTP requests và responses, định tuyến và các middleware.
2. **Service Layer**: Chứa business logic, điều phối dữ liệu và xử lý các quy trình.
3. **Data Access Layer**: Tương tác với database, truy xuất và cập nhật dữ liệu.
4. **Common Layer**: Chứa các code dùng chung trong toàn ứng dụng.

## Cài Đặt và Chạy

### Yêu Cầu

- Node.js >= 18.x
- MongoDB >= 6.0
- npm hoặc yarn

### Cài Đặt Phụ Thuộc

```bash
# Cài đặt dependencies
npm install

# Hoặc sử dụng yarn
yarn install
```

### Cấu Hình Môi Trường

```bash
# Sao chép file .env.example thành .env
cp .env.example .env

# Chỉnh sửa file .env với cấu hình của bạn
nano .env
```

### Chạy Ứng Dụng

```bash
# Chạy trong môi trường development
npm run dev

# Chạy trong môi trường production
npm start
```

### Chạy Tests

```bash
# Chạy tất cả tests
npm test

# Chạy tests và theo dõi thay đổi
npm run test:watch
```

## API Endpoints

API của RunOut-Biliard tuân theo chuẩn RESTful và có các endpoints chính sau:

- **Authentication**: `/api/auth/*`
- **Users**: `/api/users/*`
- **Products**: `/api/products/*`
- **Categories**: `/api/categories/*`
- **Carts**: `/api/carts/*`
- **Orders**: `/api/orders/*`
- **Reviews**: `/api/reviews/*`

Chi tiết về các API endpoints có thể được tìm thấy trong API documentation.

## Docker

Dự án được containerized với Docker:

```bash
# Build image
docker build -t runout-biliard-server .

# Chạy container
docker run -p 5000:5000 runout-biliard-server
```

Hoặc sử dụng Docker Compose:

```bash
# Khởi động tất cả services
docker-compose up

# Chạy trong background
docker-compose up -d
```

## Tính Năng

- **Authentication & Authorization**: JWT-based authentication và role-based authorization.
- **User Management**: Đăng ký, đăng nhập, quản lý profile.
- **Email Service**: Gửi email xác thực và đặt lại mật khẩu.
- **Product Management**: CRUD cho sản phẩm, danh mục, và đánh giá.
- **Cart & Order**: Quản lý giỏ hàng và đơn hàng.
- **Payment Integration**: Tích hợp cổng thanh toán VNPay.
- **Error Handling**: Xử lý lỗi thống nhất.
- **Logging**: Logging đầy đủ cho debugging và monitoring.
- **Validation**: Validation dữ liệu đầu vào.

## Đóng Góp

1. Fork repository
2. Tạo branch mới (`git checkout -b feature/amazing-feature`)
3. Commit thay đổi của bạn (`git commit -m 'feat: add some amazing feature'`)
4. Push lên branch (`git push origin feature/amazing-feature`)
5. Tạo Pull Request

## Giấy Phép

© 2025 RunOut-Biliard. Tất cả các quyền thuộc về Steve.

--- File: server/jest.config.js ---
module.exports = {
    testEnvironment: 'node',
    collectCoverage: true,
    coverageDirectory: 'coverage',
    collectCoverageFrom: [
      'src/**/*.js',
      '!src/server.js',
      '!**/node_modules/**',
      '!**/vendor/**'
    ],
    coverageThreshold: {
      global: {
        branches: 80,
        functions: 80,
        lines: 80,
        statements: 80
      }
    },
    testMatch: ['**/__tests__/**/*.js', '**/?(*.)+(spec|test).js'],
    testPathIgnorePatterns: ['/node_modules/'],
    // Setup file trước khi chạy tests
    setupFilesAfterEnv: ['<rootDir>/tests/setup.js'],
    // Tùy chọn đối với môi trường test
    testEnvironmentOptions: {
      NODE_ENV: 'test',
    },
    verbose: true,
    // Tự động xóa các mocks giữa các tests
    clearMocks: true,
    // Timeout cho tests
    testTimeout: 10000
  };

--- File: server/jsconfig.json ---
{
    "compilerOptions": {
      "target": "es2020",
      "module": "commonjs",
      "baseUrl": ".",
      "paths": {
        "*": ["src/*"]
      },
      "checkJs": true,
      "resolveJsonModule": true,
      "allowSyntheticDefaultImports": true,
      "moduleResolution": "node"
    },
    "include": ["src/**/*"],
    "exclude": ["node_modules", "**/node_modules/*", "dist", "build"]
  }

--- File: server/package.json ---
{
    "name": "runout-biliard-server",
    "version": "1.0.0",
    "description": "Backend server cho hệ thống RunOut-Biliard",
    "main": "src/server.js",
    "scripts": {
      "start": "node src/server.js",
      "dev": "nodemon src/server.js",
      "test": "jest --coverage",
      "test:watch": "jest --watch",
      "lint": "eslint --ext .js src/",
      "lint:fix": "eslint --ext .js src/ --fix",
      "format": "prettier --write \"src/**/*.js\"",
      "prepare": "husky install"
    },
    "author": "Steve",
    "license": "UNLICENSED",
    "private": true,
    "dependencies": {
      "bcrypt": "^5.1.1",
      "compression": "^1.7.4",
      "cors": "^2.8.5",
      "dotenv": "^16.3.1",
      "express": "^4.18.2",
      "helmet": "^7.1.0",
      "joi": "^17.11.0",
      "jsonwebtoken": "^9.0.2",
      "mongoose": "^8.0.3",
      "morgan": "^1.10.0",
      "winston": "^3.11.0"
    },
    "devDependencies": {
      "eslint": "^8.55.0",
      "eslint-config-prettier": "^9.1.0",
      "eslint-plugin-jest": "^27.6.0",
      "eslint-plugin-node": "^11.1.0",
      "eslint-plugin-prettier": "^5.0.1",
      "husky": "^8.0.3",
      "jest": "^29.7.0",
      "lint-staged": "^15.2.0",
      "nodemon": "^3.0.2",
      "prettier": "^3.1.1",
      "supertest": "^6.3.3"
    },
    "engines": {
      "node": ">=18.0.0"
    },
    "lint-staged": {
      "*.js": [
        "eslint --fix",
        "prettier --write"
      ]
    }
  }

--- File: server/src/api/controllers/authController.js ---
// @ts-nocheck
/**
 * Controller cho xác thực người dùng
 * @author Steve
 * @project RunOut-Biliard
 */

const jwt = require('jsonwebtoken');
const crypto = require('crypto');
const { ApiError } = require('../../middleware/errorHandler');
const User = require('../../data/models/user.model');
const catchAsync = require('../../utils/catchAsync');
const logger = require('../../config/logger');
const environment = require('../../config/environment');
const { sendEmail } = require('../../services/email/emailService');

/**
 * Tạo JWT token
 * @param {Object} user - User object
 * @returns {String} JWT token
 */
const generateToken = (user) => {
  return jwt.sign(
    { id: user._id, role: user.role },
    environment.auth.jwtSecret,
    { expiresIn: environment.auth.jwtExpiresIn }
  );
};

/**
 * Tạo refresh token
 * @param {Object} user - User object
 * @returns {String} Refresh token
 */
const generateRefreshToken = (user) => {
  return jwt.sign(
    { id: user._id },
    environment.auth.jwtRefreshSecret,
    { expiresIn: environment.auth.jwtRefreshExpiresIn }
  );
};

/**
 * Đăng ký người dùng mới
 */
exports.register = catchAsync(async (req, res, next) => {
  const { name, email, password, phone } = req.body;
  
  // Kiểm tra email đã tồn tại chưa
  const existingUser = await User.findOne({ email });
  if (existingUser) {
    return next(new ApiError(409, 'Email đã được sử dụng'));
  }
  
  // Tạo verification token
  const verificationToken = crypto.randomBytes(32).toString('hex');
  const verificationTokenExpires = Date.now() + 24 * 60 * 60 * 1000; // 24 giờ
  
  // Tạo user mới
  const newUser = await User.create({
    name,
    email,
    password,
    phone,
    emailVerificationToken: crypto
      .createHash('sha256')
      .update(verificationToken)
      .digest('hex'),
    emailVerificationExpires: verificationTokenExpires,
  });
  
  try {
    // Gửi email xác thực
    const verifyURL = `${req.protocol}://${req.get('host')}/api/auth/verify-email/${verificationToken}`;
    
    await sendEmail({
      to: email,
      subject: 'Xác thực tài khoản RunOut-Biliard',
      template: 'verification',
      context: {
        name,
        verifyURL,
      },
    });
    
    res.status(201).json({
      status: 'success',
      message: 'Người dùng đã được tạo. Vui lòng kiểm tra email để xác thực tài khoản.',
    });
  } catch (error) {
    // Xử lý lỗi gửi email
    logger.error(`Không thể gửi email xác thực: ${error.message}`);
    
    // Xóa user trong trường hợp email không gửi được
    await User.findByIdAndDelete(newUser._id);
    
    return next(new ApiError(
      500,
      'Đã xảy ra lỗi khi gửi email xác thực. Vui lòng thử lại sau.'
    ));
  }
});

/**
 * Đăng nhập
 */
exports.login = catchAsync(async (req, res, next) => {
  const { email, password } = req.body;
  
  // Kiểm tra email và password
  if (!email || !password) {
    return next(new ApiError(400, 'Vui lòng cung cấp email và mật khẩu'));
  }
  
  // Tìm user trong database
  const user = await User.findOne({ email }).select('+password');
  
  // Kiểm tra user tồn tại và password đúng
  if (!user || !(await user.correctPassword(password, user.password))) {
    return next(new ApiError(401, 'Email hoặc mật khẩu không đúng'));
  }
  
  // Kiểm tra email đã xác thực chưa
  if (!user.emailVerified) {
    return next(new ApiError(401, 'Vui lòng xác thực email trước khi đăng nhập'));
  }
  
  // Kiểm tra user có active không
  if (!user.isActive) {
    return next(new ApiError(401, 'Tài khoản của bạn đã bị vô hiệu hóa'));
  }
  
  // Tạo token
  const token = generateToken(user);
  const refreshToken = generateRefreshToken(user);
  
  // Cập nhật thông tin đăng nhập
  user.lastLogin = Date.now();
  user.loginCount += 1;
  await user.save({ validateBeforeSave: false });
  
  // Không gửi password trong response
  user.password = undefined;
  
  res.status(200).json({
    status: 'success',
    data: {
      user,
      token,
      refreshToken,
    },
  });
});

/**
 * Đăng xuất
 */
exports.logout = catchAsync(async (req, res, next) => {
  // Đối với JWT, không cần làm gì ở phía server
  // Client cần xóa token
  
  res.status(200).json({
    status: 'success',
    message: 'Đăng xuất thành công',
  });
});

/**
 * Làm mới access token bằng refresh token
 */
exports.refreshToken = catchAsync(async (req, res, next) => {
  const { refreshToken } = req.body;
  
  if (!refreshToken) {
    return next(new ApiError(400, 'Refresh token không được cung cấp'));
  }
  
  try {
    // Xác thực refresh token
    const decoded = jwt.verify(refreshToken, environment.auth.jwtRefreshSecret);
    
    // Tìm user
    const user = await User.findById(decoded.id);
    
    if (!user || !user.isActive) {
      return next(new ApiError(401, 'Người dùng không tồn tại hoặc đã bị vô hiệu hóa'));
    }
    
    // Tạo token mới
    const newToken = generateToken(user);
    
    res.status(200).json({
      status: 'success',
      data: {
        token: newToken,
      },
    });
  } catch (error) {
    return next(new ApiError(401, 'Refresh token không hợp lệ hoặc đã hết hạn'));
  }
});

/**
 * Quên mật khẩu
 */
exports.forgotPassword = catchAsync(async (req, res, next) => {
  const { email } = req.body;
  
  // Tìm user theo email
  const user = await User.findOne({ email });
  
  if (!user) {
    return next(new ApiError(404, 'Không tìm thấy người dùng với email này'));
  }
  
  // Tạo reset token
  const resetToken = user.createPasswordResetToken();
  await user.save({ validateBeforeSave: false });
  
  try {
    // Tạo URL reset password
    const resetURL = `${req.protocol}://${req.get('host')}/reset-password/${resetToken}`;
    
    // Gửi email
    await sendEmail({
      to: user.email,
      subject: 'Đặt lại mật khẩu (có hiệu lực trong 10 phút)',
      template: 'resetPassword',
      context: {
        name: user.name,
        resetURL,
      },
    });
    
    res.status(200).json({
      status: 'success',
      message: 'Token đã được gửi đến email',
    });
  } catch (error) {
    // Xử lý lỗi gửi email
    user.resetPasswordToken = undefined;
    user.resetPasswordExpires = undefined;
    await user.save({ validateBeforeSave: false });
    
    logger.error(`Không thể gửi email đặt lại mật khẩu: ${error.message}`);
    
    return next(new ApiError(
      500,
      'Có lỗi xảy ra khi gửi email. Vui lòng thử lại sau!'
    ));
  }
});

/**
 * Đặt lại mật khẩu
 */
exports.resetPassword = catchAsync(async (req, res, next) => {
  const { token, password } = req.body;
  
  // Hash token
  const hashedToken = crypto
    .createHash('sha256')
    .update(token)
    .digest('hex');
  
  // Tìm user với token và kiểm tra thời hạn
  const user = await User.findOne({
    resetPasswordToken: hashedToken,
    resetPasswordExpires: { $gt: Date.now() },
  });
  
  // Kiểm tra nếu token hợp lệ
  if (!user) {
    return next(new ApiError(400, 'Token không hợp lệ hoặc đã hết hạn'));
  }
  
  // Cập nhật mật khẩu
  user.password = password;
  user.resetPasswordToken = undefined;
  user.resetPasswordExpires = undefined;
  await user.save();
  
  // Đăng nhập người dùng
  const jwtToken = generateToken(user);
  const refreshToken = generateRefreshToken(user);
  
  res.status(200).json({
    status: 'success',
    message: 'Mật khẩu đã được cập nhật',
    data: {
      token: jwtToken,
      refreshToken,
    },
  });
});

/**
 * Xác thực email
 */
exports.verifyEmail = catchAsync(async (req, res, next) => {
  const { token } = req.body;
  
  // Hash token
  const hashedToken = crypto
    .createHash('sha256')
    .update(token)
    .digest('hex');
  
  // Tìm user và kiểm tra thời hạn
  const user = await User.findOne({
    emailVerificationToken: hashedToken,
    emailVerificationExpires: { $gt: Date.now() },
  });
  
  // Kiểm tra nếu token hợp lệ
  if (!user) {
    return next(new ApiError(400, 'Token không hợp lệ hoặc đã hết hạn'));
  }
  
  // Cập nhật trạng thái xác thực
  user.emailVerified = true;
  user.emailVerificationToken = undefined;
  user.emailVerificationExpires = undefined;
  await user.save({ validateBeforeSave: false });
  
  res.status(200).json({
    status: 'success',
    message: 'Email đã được xác thực thành công',
  });
});

--- File: server/src/api/controllers/product.controller.js ---
const productService = require('../../services/product/product.service');

const getAllProducts = (req, res) => {
  const products = productService.getAllProducts();
  res.json(products);
};

const getProductById = (req, res) => {
  const product = productService.getProductById(req.params.id);

  if (!product) {
    return res.status(404).json({ error: 'Product not found' });
  }

  res.json(product);
};

const createProduct = (req, res) => {
  const product = productService.createProduct(req.body);
  res.status(201).json(product);
};

module.exports = {
  getAllProducts,
  getProductById,
  createProduct,
};


--- File: server/src/api/controllers/userController.js ---
/**
 * Controller cho quản lý người dùng
 * @author Steve
 * @project RunOut-Biliard
 */

const User = require('../../data/models/user.model');
const { ApiError } = require('../../middleware/authMiddleware');
const catchAsync = require('../../utils/catchAsync');
const logger = require('../../config/logger');

/**
 * Lấy danh sách người dùng (với phân trang và filter)
 */
exports.getUsers = catchAsync(async (req, res, next) => {
  // Xử lý query params
  const page = parseInt(req.query.page, 10) || 1;
  const limit = parseInt(req.query.limit, 10) || 10;
  const skip = (page - 1) * limit;
  const sort = req.query.sort || '-createdAt';
  
  // Xây dựng filter
  const filter = {};
  
  // Lọc theo role nếu có
  if (req.query.role) {
    filter.role = req.query.role;
  }
  
  // Lọc theo trạng thái active
  if (req.query.isActive) {
    filter.isActive = req.query.isActive === 'true';
  }
  
  // Tìm kiếm theo tên hoặc email
  if (req.query.search) {
    const searchRegex = new RegExp(req.query.search, 'i');
    filter.$or = [
      { name: searchRegex },
      { email: searchRegex }
    ];
  }
  
  // Thực hiện query
  const users = await User.find(filter)
    .sort(sort)
    .skip(skip)
    .limit(limit)
    .select('-password');
  
  // Đếm tổng số users phù hợp với filter
  const total = await User.countDocuments(filter);
  
  // Tính toán thông tin phân trang
  const totalPages = Math.ceil(total / limit);
  const hasNext = page < totalPages;
  const hasPrev = page > 1;
  
  res.status(200).json({
    status: 'success',
    results: users.length,
    pagination: {
      total,
      page,
      limit,
      totalPages,
      hasNext,
      hasPrev,
    },
    data: users,
  });
});

/**
 * Lấy thông tin người dùng theo ID
 */
exports.getUserById = catchAsync(async (req, res, next) => {
  const userId = req.params.id;
  
  // Kiểm tra quyền truy cập
  // Người dùng thường chỉ có thể xem thông tin của chính họ
  if (req.user.role !== 'admin' && req.user.id !== userId) {
    return next(new ApiError(403, 'Bạn không có quyền xem thông tin của người dùng khác'));
  }
  
  // Tìm user
  const user = await User.findById(userId).select('-password');
  
  if (!user) {
    return next(new ApiError(404, 'Không tìm thấy người dùng'));
  }
  
  res.status(200).json({
    status: 'success',
    data: user,
  });
});

/**
 * Tạo người dùng mới (chỉ admin)
 */
exports.createUser = catchAsync(async (req, res, next) => {
  const { name, email, password, role, phone } = req.body;
  
  // Kiểm tra email đã tồn tại chưa
  const existingUser = await User.findOne({ email });
  if (existingUser) {
    return next(new ApiError(409, 'Email đã được sử dụng'));
  }
  
  // Tạo user mới
  const newUser = await User.create({
    name,
    email,
    password,
    role,
    phone,
    // Admin tạo user thì mặc định đã xác thực email
    emailVerified: true,
  });
  
  // Không gửi password trong response
  newUser.password = undefined;
  
  res.status(201).json({
    status: 'success',
    data: newUser,
  });
});

/**
 * Cập nhật thông tin người dùng
 */
exports.updateUser = catchAsync(async (req, res, next) => {
  const userId = req.params.id;
  
  // Kiểm tra quyền truy cập
  // Người dùng thường chỉ có thể cập nhật thông tin của chính họ
  // Admin có thể cập nhật thông tin của bất kỳ ai
  if (req.user.role !== 'admin' && req.user.id !== userId) {
    return next(new ApiError(403, 'Bạn không có quyền cập nhật thông tin của người dùng khác'));
  }
  
  // Loại bỏ các trường không được phép cập nhật
  const { password, emailVerified, role, loginCount, lastLogin, ...updateData } = req.body;
  
  // Admin có thể cập nhật role
  if (req.user.role === 'admin' && role) {
    updateData.role = role;
  }
  
  // Tìm và cập nhật user
  const updatedUser = await User.findByIdAndUpdate(
    userId,
    updateData,
    { new: true, runValidators: true }
  ).select('-password');
  
  if (!updatedUser) {
    return next(new ApiError(404, 'Không tìm thấy người dùng'));
  }
  
  res.status(200).json({
    status: 'success',
    data: updatedUser,
  });
});

/**
 * Xóa người dùng
 */
exports.deleteUser = catchAsync(async (req, res, next) => {
  const userId = req.params.id;
  
  // Xóa user
  const user = await User.findByIdAndDelete(userId);
  
  if (!user) {
    return next(new ApiError(404, 'Không tìm thấy người dùng'));
  }
  
  logger.info(`User ${user.email} đã bị xóa bởi ${req.user.email}`);
  
  res.status(200).json({
    status: 'success',
    message: 'Người dùng đã được xóa thành công',
  });
});

/**
 * Lấy thông tin profile người dùng hiện tại
 */
exports.getProfile = catchAsync(async (req, res, next) => {
  // Thông tin người dùng đã được lưu trong req.user từ middleware authenticate
  const user = req.user;
  
  res.status(200).json({
    status: 'success',
    data: user,
  });
});

/**
 * Thay đổi mật khẩu
 * @param {import('express').Request} req - Express request object
 * @param {import('express').Response} res - Express response object
 * @param {import('express').NextFunction} next - Express next function
 */
exports.changePassword = catchAsync(async (req, res, next) => {
  const { currentPassword, newPassword } = req.body;
  
  // Lấy user hiện tại với password
    /**
   * @type {import('mongoose').Document & {
    *   password: string,
    *   correctPassword: (candidatePassword: string, userPassword: string) => Promise<boolean>
    * }}
    */
  const user = await User.findById(req.user.id).select('+password');
  
  // Kiểm tra mật khẩu hiện tại
  
  if (!(await user.correctPassword(currentPassword, user.password))) {
    return next(new ApiError(401, 'Mật khẩu hiện tại không đúng'));
  }
  
  // Cập nhật mật khẩu
  user.password = newPassword;
  await user.save();
  
  // Không gửi password trong response
  user.password = undefined;
  
  res.status(200).json({
    status: 'success',
    message: 'Mật khẩu đã được cập nhật thành công',
  });
});

--- File: server/src/api/middleware/error.middleware.js ---
const errorHandler = (err, req, res, next) => {
    console.error(err.stack);
    res.status(err.statusCode || 500).json({
      status: 'error',
      message: err.message || 'Internal Server Error',
    });
  };
  
  module.exports = { errorHandler };
  

--- File: server/src/api/middleware/logging.middleware.js ---
const loggingMiddleware = (req, res, next) => {
    console.log(`[${new Date().toISOString()}] ${req.method} ${req.originalUrl}`);
    next();
  };
  
  module.exports = { loggingMiddleware };
  

--- File: server/src/api/middleware/validation.middleware.js ---
const Joi = require('joi');

const productSchema = Joi.object({
  name: Joi.string().min(3).max(100).required(),
  price: Joi.number().min(0).required(),
  description: Joi.string().max(500).required(),
});

const validateProduct = (req, res, next) => {
  const { error } = productSchema.validate(req.body);
  if (error) {
    return res.status(400).json({ error: error.details[0].message });
  }
  next();
};

module.exports = { validateProduct };


--- File: server/src/api/routes/authRoutes.js ---
/**
 * Routes cho quản lý người dùng
 * @author Steve
 * @project RunOut-Biliard
 * 
 * @typedef {import('express').Request} Request
 * @typedef {import('express').Response} Response
 * @typedef {import('express').NextFunction} NextFunction
 * @typedef {(req: Request, res: Response, next: NextFunction) => any} ExpressMiddleware
 */

const express = require('express');
const userController = require('../controllers/userController');
const { authenticate, authorize } = require('../../middleware/authMiddleware'); // Cập nhật đường dẫn từ auth thành authMiddleware
const { validateMongoId, validate } = require('../../middleware/validate');
const userValidator = require('../../common/validators/userValidator');

/**
 * @type {express.Router}
 */
const router = express.Router();

/**
 * @route   POST /api/users
 * @desc    Tạo người dùng mới (chỉ admin)
 * @access  Private/Admin
 */
router.post(
  '/',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (authorize('admin')),
  /** @type {ExpressMiddleware} */ (validate(userValidator.createUser)),
  /** @type {ExpressMiddleware} */ (userController.createUser)
);

/**
 * @route   GET /api/users
 * @desc    Lấy danh sách người dùng (chỉ admin)
 * @access  Private/Admin
 */
router.get(
  '/',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (authorize('admin')),
  /** @type {ExpressMiddleware} */ (userController.getUsers)
);

/**
 * @route   GET /api/users/:id
 * @desc    Lấy thông tin người dùng theo ID
 * @access  Private
 */
router.get(
  '/:id',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (validateMongoId()),
  /** @type {ExpressMiddleware} */ (userController.getUserById)
);

/**
 * @route   PUT /api/users/:id
 * @desc    Cập nhật thông tin người dùng
 * @access  Private
 */
router.put(
  '/:id',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (validateMongoId()),
  /** @type {ExpressMiddleware} */ (validate(userValidator.updateUser)),
  /** @type {ExpressMiddleware} */ (userController.updateUser)
);

/**
 * @route   DELETE /api/users/:id
 * @desc    Xóa người dùng (chỉ admin)
 * @access  Private/Admin
 */
router.delete(
  '/:id',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (authorize('admin')),
  /** @type {ExpressMiddleware} */ (validateMongoId()),
  /** @type {ExpressMiddleware} */ (userController.deleteUser)
);

/**
 * @route   GET /api/users/profile/me
 * @desc    Lấy thông tin người dùng hiện tại
 * @access  Private
 */
router.get(
  '/profile/me',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (userController.getProfile)
);

/**
 * @route   PUT /api/users/change-password
 * @desc    Thay đổi mật khẩu
 * @access  Private
 */
router.put(
  '/change-password',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (validate(userValidator.changePassword)),
  /** @type {ExpressMiddleware} */ (userController.changePassword)
);

module.exports = router;

--- File: server/src/api/routes/product.routes.js ---
const express = require('express');
const { getAllProducts, getProductById, createProduct } = require('../controllers/product.controller');
const { validateProduct } = require('../middleware/validation.middleware');

const router = express.Router();

router.get('/', getAllProducts);
router.get('/:id', getProductById);
router.post('/', validateProduct, createProduct);

module.exports = router;


--- File: server/src/api/routes/userRoutes.js ---
/**
 * Routes cho quản lý người dùng
 * @author Steve
 * @project RunOut-Biliard
 * 
 * @typedef {import('express').Request} Request
 * @typedef {import('express').Response} Response
 * @typedef {import('express').NextFunction} NextFunction
 * @typedef {(req: Request, res: Response, next: NextFunction) => any} ExpressMiddleware
 */

const express = require('express');
const userController = require('../controllers/userController');
const { authenticate, authorize } = require('../../middleware/authMiddleware'); // Cập nhật từ auth thành authMiddleware
const { validateMongoId, validate } = require('../../middleware/validate');
const userValidator = require('../../common/validators/userValidator');

/**
 * @type {express.Router}
 */
const router = express.Router();

/**
 * @route   POST /api/users
 * @desc    Tạo người dùng mới (chỉ admin)
 * @access  Private/Admin
 */
router.post(
  '/',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (authorize('admin')),
  /** @type {ExpressMiddleware} */ (validate(userValidator.createUser)),
  /** @type {ExpressMiddleware} */ (userController.createUser)
);

/**
 * @route   GET /api/users
 * @desc    Lấy danh sách người dùng (chỉ admin)
 * @access  Private/Admin
 */
router.get(
  '/',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (authorize('admin')),
  /** @type {ExpressMiddleware} */ (userController.getUsers)
);

/**
 * @route   GET /api/users/:id
 * @desc    Lấy thông tin người dùng theo ID
 * @access  Private
 */
router.get(
  '/:id',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (validateMongoId()),
  /** @type {ExpressMiddleware} */ (userController.getUserById)
);

/**
 * @route   PUT /api/users/:id
 * @desc    Cập nhật thông tin người dùng
 * @access  Private
 */
router.put(
  '/:id',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (validateMongoId()),
  /** @type {ExpressMiddleware} */ (validate(userValidator.updateUser)),
  /** @type {ExpressMiddleware} */ (userController.updateUser)
);

/**
 * @route   DELETE /api/users/:id
 * @desc    Xóa người dùng (chỉ admin)
 * @access  Private/Admin
 */
router.delete(
  '/:id',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (authorize('admin')),
  /** @type {ExpressMiddleware} */ (validateMongoId()),
  /** @type {ExpressMiddleware} */ (userController.deleteUser)
);

/**
 * @route   GET /api/users/profile/me
 * @desc    Lấy thông tin người dùng hiện tại
 * @access  Private
 */
router.get(
  '/profile/me',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (userController.getProfile)
);

/**
 * @route   PUT /api/users/change-password
 * @desc    Thay đổi mật khẩu
 * @access  Private
 */
router.put(
  '/change-password',
  /** @type {ExpressMiddleware} */ (authenticate),
  /** @type {ExpressMiddleware} */ (validate(userValidator.changePassword)),
  /** @type {ExpressMiddleware} */ (userController.changePassword)
);

module.exports = router;

--- File: server/src/app.js ---
const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const compression = require('compression');
require('dotenv').config();
const productRoutes = require('./api/routes/product.routes');// import  product routes

const { connectToDatabase } = require('./config/database');

const app = express();


connectToDatabase(); // Gọi ở đầu file

// Middleware cơ bản
app.use(helmet());
app.use(cors());
app.use(compression());
app.use(express.json());

app.use('/api/products', productRoutes);

app.use(express.urlencoded({ extended: true }));
const { loggingMiddleware } = require('./api/middleware/logging.middleware');
app.use(loggingMiddleware);

// Routes (sẽ thêm sau)
app.get('/', (req, res) => {
  res.json({ message: 'API is working!' });
});


const { errorHandler } = require('./api/middleware/error.middleware');
app.use(errorHandler);

// Export app cho server.js dùng
module.exports = app;



--- File: server/src/common/validators/authValidator.js ---
/**
 * Auth Validator - Định nghĩa các schema validation cho authentication
 * @author Steve
 * @project RunOut-Biliard
 */

const Joi = require('joi');

// Schema đăng ký
const registerSchema = Joi.object({
  name: Joi.string()
    .min(2)
    .max(50)
    .required()
    .messages({
      'string.min': 'Tên phải có ít nhất {#limit} ký tự',
      'string.max': 'Tên không được vượt quá {#limit} ký tự',
      'string.empty': 'Tên không được để trống',
      'any.required': 'Tên là trường bắt buộc'
    }),
    
  email: Joi.string()
    .email({ tlds: { allow: false } })
    .required()
    .messages({
      'string.email': 'Email không hợp lệ',
      'string.empty': 'Email không được để trống',
      'any.required': 'Email là trường bắt buộc'
    }),
    
  password: Joi.string()
    .min(8)
    .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@$!%*?&]+$/)
    .required()
    .messages({
      'string.min': 'Mật khẩu phải có ít nhất {#limit} ký tự',
      'string.pattern.base': 'Mật khẩu phải chứa ít nhất một chữ hoa, một chữ thường và một chữ số',
      'string.empty': 'Mật khẩu không được để trống',
      'any.required': 'Mật khẩu là trường bắt buộc'
    }),
    
  confirmPassword: Joi.string()
    .valid(Joi.ref('password'))
    .required()
    .messages({
      'any.only': 'Xác nhận mật khẩu phải khớp với mật khẩu',
      'string.empty': 'Xác nhận mật khẩu không được để trống',
      'any.required': 'Xác nhận mật khẩu là trường bắt buộc'
    }),
    
  phone: Joi.string()
    .pattern(/^(0|\+84)[3|5|7|8|9][0-9]{8}$/)
    .allow('', null)
    .messages({
      'string.pattern.base': 'Số điện thoại không hợp lệ'
    })
});

// Schema đăng nhập
const loginSchema = Joi.object({
  email: Joi.string()
    .email({ tlds: { allow: false } })
    .required()
    .messages({
      'string.email': 'Email không hợp lệ',
      'string.empty': 'Email không được để trống',
      'any.required': 'Email là trường bắt buộc'
    }),
    
  password: Joi.string()
    .required()
    .messages({
      'string.empty': 'Mật khẩu không được để trống',
      'any.required': 'Mật khẩu là trường bắt buộc'
    }),
    
  rememberMe: Joi.boolean().default(false)
});

// Schema refresh token
const refreshTokenSchema = Joi.object({
  refreshToken: Joi.string()
    .required()
    .messages({
      'string.empty': 'Refresh token không được để trống',
      'any.required': 'Refresh token là trường bắt buộc'
    })
});

// Schema quên mật khẩu
const forgotPasswordSchema = Joi.object({
  email: Joi.string()
    .email({ tlds: { allow: false } })
    .required()
    .messages({
      'string.email': 'Email không hợp lệ',
      'string.empty': 'Email không được để trống',
      'any.required': 'Email là trường bắt buộc'
    })
});

// Schema đặt lại mật khẩu
const resetPasswordSchema = Joi.object({
  token: Joi.string()
    .required()
    .messages({
      'string.empty': 'Token không được để trống',
      'any.required': 'Token là trường bắt buộc'
    }),
    
  password: Joi.string()
    .min(8)
    .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@$!%*?&]+$/)
    .required()
    .messages({
      'string.min': 'Mật khẩu phải có ít nhất {#limit} ký tự',
      'string.pattern.base': 'Mật khẩu phải chứa ít nhất một chữ hoa, một chữ thường và một chữ số',
      'string.empty': 'Mật khẩu không được để trống',
      'any.required': 'Mật khẩu là trường bắt buộc'
    }),
    
  confirmPassword: Joi.string()
    .valid(Joi.ref('password'))
    .required()
    .messages({
      'any.only': 'Xác nhận mật khẩu phải khớp với mật khẩu',
      'string.empty': 'Xác nhận mật khẩu không được để trống',
      'any.required': 'Xác nhận mật khẩu là trường bắt buộc'
    })
});

// Schema xác thực email
const verifyEmailSchema = Joi.object({
  token: Joi.string()
    .required()
    .messages({
      'string.empty': 'Token không được để trống',
      'any.required': 'Token là trường bắt buộc'
    })
});

module.exports = {
  register: registerSchema,
  login: loginSchema,
  refreshToken: refreshTokenSchema,
  forgotPassword: forgotPasswordSchema,
  resetPassword: resetPasswordSchema,
  verifyEmail: verifyEmailSchema
};

--- File: server/src/common/validators/userValidator.js ---
/**
 * User Validator - Định nghĩa các schema validation cho user
 * @author Steve
 * @project RunOut-Biliard
 */

const Joi = require('joi');

// Validator cho email
const emailSchema = Joi.string()
  .email({ tlds: { allow: false } })
  .required()
  .messages({
    'string.email': 'Email không hợp lệ',
    'string.empty': 'Email không được để trống',
    'any.required': 'Email là trường bắt buộc'
  });

// Validator cho mật khẩu
const passwordSchema = Joi.string()
  .min(8)
  .pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@$!%*?&]+$/)
  .required()
  .messages({
    'string.min': 'Mật khẩu phải có ít nhất {#limit} ký tự',
    'string.pattern.base': 'Mật khẩu phải chứa ít nhất một chữ hoa, một chữ thường và một chữ số',
    'string.empty': 'Mật khẩu không được để trống',
    'any.required': 'Mật khẩu là trường bắt buộc'
  });

// Validator cho tên
const nameSchema = Joi.string()
  .min(2)
  .max(50)
  .required()
  .messages({
    'string.min': 'Tên phải có ít nhất {#limit} ký tự',
    'string.max': 'Tên không được vượt quá {#limit} ký tự',
    'string.empty': 'Tên không được để trống',
    'any.required': 'Tên là trường bắt buộc'
  });

// Validator cho số điện thoại
const phoneSchema = Joi.string()
  .pattern(/^(0|\+84)[3|5|7|8|9][0-9]{8}$/)
  .allow('', null)
  .messages({
    'string.pattern.base': 'Số điện thoại không hợp lệ'
  });

// Validator cho role
const roleSchema = Joi.string()
  .valid('user', 'staff', 'admin')
  .default('user')
  .messages({
    'any.only': 'Vai trò phải là một trong: user, staff, admin'
  });

// Validator cho object địa chỉ
const addressSchema = Joi.object({
  street: Joi.string().allow('', null),
  city: Joi.string().allow('', null),
  state: Joi.string().allow('', null),
  zipCode: Joi.string().allow('', null),
  country: Joi.string().allow('', null)
});

// Validator cho object preferences
const preferencesSchema = Joi.object({
  language: Joi.string().valid('vi', 'en').default('vi'),
  notifications: Joi.object({
    email: Joi.boolean().default(true),
    marketing: Joi.boolean().default(true)
  })
});

// Schema tạo user
const createUserSchema = Joi.object({
  name: nameSchema,
  email: emailSchema,
  password: passwordSchema,
  phone: phoneSchema,
  role: roleSchema,
  address: addressSchema,
  preferences: preferencesSchema
});

// Schema cập nhật user
const updateUserSchema = Joi.object({
  name: nameSchema.optional(),
  phone: phoneSchema,
  role: roleSchema,
  address: addressSchema,
  avatar: Joi.string().uri().allow('', null),
  preferences: preferencesSchema,
  isActive: Joi.boolean()
});

// Schema đổi mật khẩu
const changePasswordSchema = Joi.object({
  currentPassword: Joi.string().required().messages({
    'string.empty': 'Mật khẩu hiện tại không được để trống',
    'any.required': 'Mật khẩu hiện tại là trường bắt buộc'
  }),
  newPassword: passwordSchema,
  confirmPassword: Joi.string().valid(Joi.ref('newPassword')).required().messages({
    'any.only': 'Xác nhận mật khẩu phải khớp với mật khẩu mới',
    'string.empty': 'Xác nhận mật khẩu không được để trống',
    'any.required': 'Xác nhận mật khẩu là trường bắt buộc'
  })
});

// Schema tìm kiếm user
const searchUserSchema = Joi.object({
  name: Joi.string(),
  email: Joi.string(),
  phone: Joi.string(),
  role: roleSchema,
  isActive: Joi.boolean(),
  search: Joi.string(),
  page: Joi.number().integer().min(1).default(1),
  limit: Joi.number().integer().min(1).max(100).default(10),
  sort: Joi.string().default('-createdAt')
});

module.exports = {
  createUser: createUserSchema,
  updateUser: updateUserSchema,
  changePassword: changePasswordSchema,
  searchUser: searchUserSchema
};

--- File: server/src/config/database.js ---
const mongoose = require('mongoose');
const logger = require('./logger');

// Tùy chọn kết nối Mongoose
const options = {
  autoIndex: process.env.NODE_ENV !== 'production', // Tự động tạo index trong môi trường dev
  serverSelectionTimeoutMS: 5000, // Timeout cho việc lựa chọn server
  socketTimeoutMS: 45000, // Đóng socket sau 45 giây không hoạt động
  family: 4 // Sử dụng IPv4, bỏ qua IPv6
};

// Kết nối đến MongoDB
const connectToDatabase = async () => {
  try {
    // Xác định URI dựa vào môi trường
    const uri = process.env.NODE_ENV === 'test'
      ? process.env.MONGODB_URI_TEST
      : process.env.MONGODB_URI;
    
    await mongoose.connect(uri, options);
    
    logger.info('Kết nối thành công đến MongoDB');
    
    // Xử lý sự kiện khi kết nối bị ngắt
    mongoose.connection.on('disconnected', () => {
      logger.warn('Mất kết nối MongoDB, đang thử kết nối lại...');
      setTimeout(connectToDatabase, 5000);
    });
    
    // Xử lý sự kiện khi có lỗi
    mongoose.connection.on('error', (err) => {
      logger.error(`Lỗi kết nối MongoDB: ${err.message}`);
    });
    
    return mongoose.connection;
  } catch (error) {
    logger.error(`Không thể kết nối đến MongoDB: ${error.message}`);
    process.exit(1);
  }
};

// Ngắt kết nối từ MongoDB
const disconnectFromDatabase = async () => {
  try {
    await mongoose.disconnect();
    logger.info('Đã ngắt kết nối từ MongoDB');
  } catch (error) {
    logger.error(`Lỗi khi ngắt kết nối từ MongoDB: ${error.message}`);
    process.exit(1);
  }
};

module.exports = {
  connectToDatabase,
  disconnectFromDatabase
};

--- File: server/src/config/environment.js ---
/**
 * Cấu hình biến môi trường
 * @author Steve
 * @project RunOut-Biliard
 */

// Load biến môi trường từ file .env
require('dotenv').config();

// Lấy biến môi trường hoặc giá trị mặc định
const getEnv = (key, defaultValue = undefined) => {
  return process.env[key] || defaultValue;
};

// Biến môi trường
const environment = {
  // Thông tin ứng dụng
  app: {
    name: getEnv('APP_NAME', 'RunOut-Biliard'),
    signature: getEnv('SIGNATURE', 'Steve'),
    environment: getEnv('NODE_ENV', 'development'),
    port: parseInt(getEnv('PORT', '5000'), 10),
    host: getEnv('HOST', 'localhost'),
  },

  // Cơ sở dữ liệu
  db: {
    uri: getEnv('MONGODB_URI', 'mongodb://localhost:27017/runout_biliard'),
    uriTest: getEnv('MONGODB_URI_TEST', 'mongodb://localhost:27017/runout_biliard_test'),
  },

  // Xác thực
  auth: {
    jwtSecret: getEnv('JWT_SECRET', 'your_jwt_secret_key_here'),
    jwtExpiresIn: getEnv('JWT_EXPIRES_IN', '7d'),
    jwtRefreshSecret: getEnv('JWT_REFRESH_SECRET', 'your_refresh_secret_key_here'),
    jwtRefreshExpiresIn: getEnv('JWT_REFRESH_EXPIRES_IN', '30d'),
  },

  // CORS
  cors: {
    origin: getEnv('CORS_ORIGIN', 'http://localhost:3000'),
    methods: getEnv('CORS_METHODS', 'GET,HEAD,PUT,PATCH,POST,DELETE'),
  },

  // Logging
  logging: {
    level: getEnv('LOG_LEVEL', 'info'),
    colorize: getEnv('NODE_ENV', 'development') === 'development',
  },

  // Đường dẫn tĩnh
  paths: {
    uploads: getEnv('UPLOAD_PATH', 'uploads'),
  },
  
  // Thanh toán
  payment: {
    vnpay: {
      tmnCode: getEnv('VNPAY_TMN_CODE', ''),
      secretKey: getEnv('VNPAY_SECRET_KEY', ''),
      returnUrl: getEnv('VNPAY_RETURN_URL', 'http://localhost:5000/api/payments/vnpay-return'),
      ipnUrl: getEnv('VNPAY_IPN_URL', 'http://localhost:5000/api/payments/vnpay-ipn'),
    },
  },
};

// Validate các biến môi trường quan trọng
const validateEnvironment = () => {
  // Kiểm tra biến môi trường quan trọng
  if (environment.app.environment === 'production') {
    if (!process.env.JWT_SECRET) {
      throw new Error('JWT_SECRET không được cấu hình cho môi trường production');
    }
    
    if (!process.env.MONGODB_URI) {
      throw new Error('MONGODB_URI không được cấu hình cho môi trường production');
    }
  }
};

// Nếu ở môi trường production, validate các biến môi trường
if (environment.app.environment === 'production') {
  validateEnvironment();
}

module.exports = environment;

--- File: server/src/config/logger.js ---
const winston = require('winston');
const path = require('path');

// Định nghĩa các levels của logger
const levels = {
  error: 0,
  warn: 1,
  info: 2,
  http: 3,
  debug: 4
};

// Chọn level dựa trên môi trường
const level = () => {
  const env = process.env.NODE_ENV || 'development';
  const isDevelopment = env === 'development';
  return isDevelopment ? 'debug' : 'warn';
};

// Tùy chỉnh format cho logs
const format = winston.format.combine(
  winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),
  winston.format.colorize({ all: true }),
  winston.format.printf(
    (info) => `${info.timestamp} ${info.level}: ${info.message}`
  )
);

// Định nghĩa các transports cho logger
const transports = [
  // Ghi log đến console
  new winston.transports.Console(),
  
  // Ghi log errors vào file
  new winston.transports.File({
    filename: path.join('logs', 'error.log'),
    level: 'error',
  }),
  
  // Ghi tất cả logs vào file
  new winston.transports.File({ 
    filename: path.join('logs', 'all.log') 
  }),
];

// Tạo logger với các tùy chọn đã định nghĩa
const logger = winston.createLogger({
  level: level(),
  levels,
  format,
  transports,
  // Thêm metadata custom để nhận diện ứng dụng
  defaultMeta: { 
    service: process.env.APP_NAME || 'runout-biliard',
    signature: process.env.SIGNATURE || 'Steve' 
  }
});

module.exports = logger;

--- File: server/src/config/middleware.js ---
/**
 * Cấu hình middleware
 * @author Steve
 * @project RunOut-Biliard
 */

const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const morgan = require('morgan');
const compression = require('compression');
const { rateLimit } = require('express-rate-limit');
const environment = require('./environment');
const logger = require('./logger');

/**
 * Cấu hình và áp dụng các middleware cơ bản cho ứng dụng Express
 * @param {express.Application} app - Ứng dụng Express
 */
const setupCommonMiddleware = (app) => {
  // Security middleware
  app.use(helmet()); // Bảo mật HTTP headers
  
  // CORS middleware
  app.use(cors({
    origin: environment.cors.origin,
    methods: environment.cors.methods.split(','),
    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],
    exposedHeaders: ['Content-Disposition'],
    credentials: true,
    maxAge: 86400, // 24 giờ
  }));
  
  // Body parsing middleware
  app.use(express.json({ limit: '10kb' })); // Limit JSON body size
  app.use(express.urlencoded({ extended: true, limit: '10kb' }));
  
  // Compression middleware
  app.use(compression());
  
  // Logger middleware
  if (environment.app.environment === 'development') {
    app.use(morgan('dev'));
  } else {
    // Sử dụng winston cho production
    app.use(morgan('combined', {
      stream: {
        write: (message) => logger.http(message.trim())
      }
    }));
  }
};

/**
 * Cấu hình middleware bảo mật bổ sung
 * @param {express.Application} app - Ứng dụng Express
 */
const setupSecurityMiddleware = (app) => {
  // Rate limiting middleware
  const apiLimiter = rateLimit({
    windowMs: 15 * 60 * 1000, // 15 phút
    max: 100, // Limit mỗi IP 100 requests mỗi windowMs
    standardHeaders: true,
    legacyHeaders: false,
    message: {
      status: 'error',
      message: 'Quá nhiều yêu cầu từ IP này, vui lòng thử lại sau 15 phút'
    },
    handler: (req, res, next, options) => {
      logger.warn(`Rate limit exceeded for IP: ${req.ip}`);
      res.status(429).json(options.message);
    }
  });
  
  // Áp dụng rate limit cho tất cả các routes /api
  app.use('/api', apiLimiter);
  
  // Middleware chống brute force cho authentication
  const authLimiter = rateLimit({
    windowMs: 60 * 60 * 1000, // 1 giờ
    max: 5, // Giới hạn 5 lần thử trong 1 giờ
    standardHeaders: true,
    legacyHeaders: false,
    message: {
      status: 'error',
      message: 'Quá nhiều lần thử đăng nhập, vui lòng thử lại sau 1 giờ'
    },
    handler: (req, res, next, options) => {
      logger.warn(`Auth rate limit exceeded for IP: ${req.ip}`);
      res.status(429).json(options.message);
    }
  });
  
  // Áp dụng auth limiter cho routes đăng nhập/đăng ký
  app.use('/api/auth/login', authLimiter);
  app.use('/api/auth/register', authLimiter);
  
  // Các middleware bảo mật khác có thể được thêm vào đây
};

/**
 * Setup tất cả middleware
 * @param {express.Application} app - Ứng dụng Express
 */
const setupAllMiddleware = (app) => {
  setupCommonMiddleware(app);
  setupSecurityMiddleware(app);
  
  // Middleware cho static files
  app.use('/uploads', express.static(environment.paths.uploads));
  
  // Middleware thêm signature cho tất cả các responses
  app.use((req, res, next) => {
    res.setHeader('X-Powered-By', `RunOut-Biliard - ${environment.app.signature}`);
    next();
  });
};

module.exports = {
  setupCommonMiddleware,
  setupSecurityMiddleware,
  setupAllMiddleware
};

--- File: server/src/data/dto/userDTO.js ---
/**
 * DTO cho User - chuyển đổi dữ liệu giữa service layer và client
 * @author Steve
 * @project RunOut-Biliard
 */

/**
 * Class UserDTO - chuyển đổi dữ liệu User cho response
 */
class UserDTO {
    /**
     * Chuyển đổi từ model User sang DTO
     * @param {Object} user - User model
     * @returns {Object} - User DTO
     */
    static toDTO(user) {
      if (!user) return null;
      
      // Chuyển đổi user model thành plain object nếu chưa phải
      const userObj = user.toObject ? user.toObject() : user;
      
      return {
        id: userObj._id.toString(),
        name: userObj.name,
        email: userObj.email,
        role: userObj.role,
        avatar: userObj.avatar,
        phone: userObj.phone || '',
        address: userObj.address || {},
        isActive: userObj.isActive,
        emailVerified: userObj.emailVerified,
        lastLogin: userObj.lastLogin,
        loginCount: userObj.loginCount,
        preferences: userObj.preferences || {
          language: 'vi',
          notifications: {
            email: true,
            marketing: true
          }
        },
        createdAt: userObj.createdAt,
        updatedAt: userObj.updatedAt
      };
    }
    
    /**
     * Chuyển đổi một mảng User models sang DTO
     * @param {Array} users - Mảng User models
     * @returns {Array} - Mảng User DTOs
     */
    static toList(users) {
      if (!users || !Array.isArray(users)) return [];
      return users.map(user => UserDTO.toDTO(user));
    }
    
    /**
     * Chuyển đổi dữ liệu phân trang từ service
     * @param {Object} paginatedResult - Kết quả phân trang từ service
     * @returns {Object} - Kết quả phân trang đã chuyển đổi
     */
    static toPagination(paginatedResult) {
      return {
        data: UserDTO.toList(paginatedResult.data || paginatedResult.users),
        pagination: {
          total: paginatedResult.totalCount || paginatedResult.pagination.total,
          page: paginatedResult.page || paginatedResult.pagination.page,
          limit: paginatedResult.limit || paginatedResult.pagination.limit,
          totalPages: paginatedResult.totalPages || paginatedResult.pagination.totalPages,
          hasNext: paginatedResult.hasNext || paginatedResult.pagination.hasNext,
          hasPrev: paginatedResult.hasPrev || paginatedResult.pagination.hasPrev
        }
      };
    }
    
    /**
     * Chuyển đổi dữ liệu cho profile
     * @param {Object} user - User model
     * @returns {Object} - User profile DTO
     */
    static toProfile(user) {
      if (!user) return null;
      
      const dto = UserDTO.toDTO(user);
      
      // Thêm các thông tin bổ sung cho profile nếu cần
      return {
        ...dto,
        // Có thể thêm các trường khác ở đây
      };
    }
    
    /**
     * Chuyển đổi dữ liệu cho admin (bao gồm thông tin nhạy cảm hơn)
     * @param {Object} user - User model
     * @returns {Object} - Admin User DTO
     */
    static toAdminDTO(user) {
      if (!user) return null;
      
      const dto = UserDTO.toDTO(user);
      
      // Thêm các thông tin admin cần
      return {
        ...dto,
        emailVerified: user.emailVerified,
        isActive: user.isActive,
        createdAt: user.createdAt,
        updatedAt: user.updatedAt,
        lastLogin: user.lastLogin,
        loginCount: user.loginCount
      };
    }
  }
  
  module.exports = UserDTO;

--- File: server/src/data/models/cart.model.js ---
// server/src/data/models/cart.model.js
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const CartSchema = new Schema({
  // Thông tin chủ sở hữu
  user: {
    type: Schema.Types.ObjectId,
    ref: "User",
    sparse: true
  },
  sessionId: {
    type: String,
    sparse: true
  },
  
  // Danh sách sản phẩm
  items: [{
    product: {
      type: Schema.Types.ObjectId,
      ref: "Product",
      required: true
    },
    quantity: {
      type: Number,
      required: true,
      min: 1
    },
    price: {
      type: Number,
      required: true,
      min: 0
    },
    attributes: {
      type: Object,
      default: {}
    },
    addedAt: {
      type: Date,
      default: Date.now
    },
    updatedAt: Date
  }],
  
  // Tính toán giá
  subtotal: {
    type: Number,
    default: 0
  },
  
  // Mã giảm giá
  coupon: {
    code: String,
    discount: Number,
    appliedAt: Date
  },
  
  // Trạng thái
  status: {
    type: String,
    enum: ["active", "converted", "abandoned", "merged"],
    default: "active"
  },
  
  // Thời gian hoạt động và hết hạn
  lastActivity: {
    type: Date,
    default: Date.now
  },
  expiresAt: {
    type: Date,
    sparse: true
  }
}, {
  timestamps: true
});

// Indexes
CartSchema.index({ user: 1 }, { sparse: true });
CartSchema.index({ sessionId: 1 }, { sparse: true });
CartSchema.index({ status: 1 });
CartSchema.index({ user: 1, status: 1 });
CartSchema.index({ sessionId: 1, status: 1 }, { sparse: true });
CartSchema.index({ expiresAt: 1 }, { expireAfterSeconds: 0 });
CartSchema.index({ "items.product": 1 });

module.exports = mongoose.model('Cart', CartSchema);

--- File: server/src/data/models/category.model.js ---
// server/src/data/models/category.model.js
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const CategorySchema = new Schema({
  name: {
    type: String,
    required: true,
    trim: true
  },
  slug: {
    type: String,
    required: true,
    unique: true
  },
  description: String,
  
  // Cấu trúc phân cấp
  parent: {
    type: Schema.Types.ObjectId,
    ref: "Category",
    default: null
  },
  ancestors: [{
    _id: {
      type: Schema.Types.ObjectId,
      ref: "Category"
    },
    name: String,
    slug: String
  }],
  level: {
    type: Number,
    default: 0
  },
  
  // Hiển thị
  image: {
    url: String,
    alt: String
  },
  icon: String,
  
  // Thứ tự và trạng thái
  order: {
    type: Number,
    default: 0
  },
  isActive: {
    type: Boolean,
    default: true
  },
  isVisible: {
    type: Boolean,
    default: true
  }
}, {
  timestamps: true
});

// Indexes
CategorySchema.index({ name: 1 });
CategorySchema.index({ slug: 1 }, { unique: true });
CategorySchema.index({ parent: 1 });
CategorySchema.index({ "ancestors._id": 1 });
CategorySchema.index({ level: 1 });
CategorySchema.index({ order: 1 });
CategorySchema.index({ isActive: 1, isVisible: 1 });
CategorySchema.index({ name: "text", description: "text" });

module.exports = mongoose.model('Category', CategorySchema);

--- File: server/src/data/models/order.model.js ---
// server/src/data/models/order.model.js
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const OrderSchema = new Schema({
  // Thông tin cơ bản
  orderNumber: {
    type: String,
    required: true,
    unique: true
  },
  user: {
    type: Schema.Types.ObjectId,
    ref: "User"
  },
  
  // Thông tin liên hệ
  customerInfo: {
    name: {
      type: String,
      required: true
    },
    email: {
      type: String,
      required: true
    },
    phone: {
      type: String,
      required: true
    }
  },
  
  // Chi tiết sản phẩm
  items: [{
    product: {
      type: Schema.Types.ObjectId,
      ref: "Product",
      required: true
    },
    name: {
      type: String,
      required: true
    },
    price: {
      type: Number,
      required: true,
      min: 0
    },
    quantity: {
      type: Number,
      required: true,
      min: 1
    },
    totalPrice: {
      type: Number,
      required: true,
      min: 0
    },
    attributes: {
      type: Object,
      default: {}
    },
    sku: String,
    image: String
  }],
  
  // Tổng tiền
  subtotal: {
    type: Number,
    required: true,
    min: 0
  },
  shippingCost: {
    type: Number,
    required: true,
    default: 0
  },
  tax: {
    type: Number,
    required: true,
    default: 0
  },
  discount: {
    amount: {
      type: Number,
      default: 0
    },
    code: String
  },
  totalAmount: {
    type: Number,
    required: true,
    min: 0
  },
  
  // Thông tin vận chuyển
  shippingAddress: {
    name: String,
    phone: String,
    street: {
      type: String,
      required: true
    },
    city: {
      type: String,
      required: true
    },
    state: String,
    zipCode: {
      type: String,
      required: true
    },
    country: {
      type: String,
      required: true
    },
    notes: String
  },
  shippingMethod: {
    type: String,
    required: true
  },
  trackingNumber: String,
  
  // Thông tin thanh toán
  paymentMethod: {
    type: String,
    required: true
  },
  paymentStatus: {
    type: String,
    enum: ["pending", "authorized", "paid", "failed", "refunded", "partially_refunded"],
    default: "pending"
  },
  paymentDetails: {
    provider: String,
    transactionId: String,
    paymentDate: Date
  },
  
  // Trạng thái đơn hàng
  status: {
    type: String,
    enum: ["pending", "processing", "packed", "shipped", "delivered", "cancelled", "returned"],
    default: "pending"
  },
  
  // Lịch sử trạng thái
  statusHistory: [{
    status: {
      type: String,
      enum: ["pending", "processing", "packed", "shipped", "delivered", "cancelled", "returned"]
    },
    date: {
      type: Date,
      default: Date.now
    },
    note: String,
    updatedBy: {
      type: Schema.Types.ObjectId,
      ref: "User"
    }
  }],
  
  // Ghi chú
  customerNotes: String,
  adminNotes: String,
  
  // Thời gian hoàn thành hoặc hủy
  completedAt: Date,
  cancelledAt: Date
}, {
  timestamps: true
});

// Indexes
OrderSchema.index({ orderNumber: 1 }, { unique: true });
OrderSchema.index({ user: 1 });
OrderSchema.index({ "customerInfo.email": 1 });
OrderSchema.index({ "customerInfo.phone": 1 });
OrderSchema.index({ status: 1 });
OrderSchema.index({ paymentStatus: 1 });
OrderSchema.index({ createdAt: -1 });
OrderSchema.index({ completedAt: -1 });
OrderSchema.index({ user: 1, createdAt: -1 });
OrderSchema.index({ status: 1, createdAt: -1 });
OrderSchema.index({ "items.product": 1 });

module.exports = mongoose.model('Order', OrderSchema);

--- File: server/src/data/models/product.model.js ---
// server/src/data/models/product.model.js
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const ProductSchema = new Schema({
  name: {
    type: String,
    required: true,
    trim: true
  },
  slug: {
    type: String,
    required: true,
    unique: true
  },
  description: {
    short: String,
    long: String
  },
  
  // Danh mục
  category: {
    type: Schema.Types.ObjectId,
    ref: "Category",
    required: true
  },
  
  // Thương hiệu và nguồn gốc
  brand: {
    type: String,
    required: true
  },
  
  // Giá và tồn kho
  price: {
    type: Number,
    required: true,
    min: 0
  },
  salePrice: Number,
  stock: {
    type: Number,
    required: true,
    default: 0,
    min: 0
  },
  sku: {
    type: String,
    unique: true,
    sparse: true
  },
  
  // Hình ảnh sản phẩm
  images: [{
    url: String,
    alt: String,
    isPrimary: Boolean
  }],
  
  // Đặc điểm sản phẩm
  features: [String],
  
  // Thông số kỹ thuật
  specifications: {
    weight: Number,
    length: Number,
    diameter: Number,
    material: String,
    tipSize: String,
    wrap: String
  },
  
  // Đánh giá
  ratings: {
    average: {
      type: Number,
      default: 0,
      min: 0,
      max: 5
    },
    count: {
      type: Number,
      default: 0
    }
  },
  
  // Trạng thái
  isActive: {
    type: Boolean,
    default: true
  },
  isPromoted: {
    type: Boolean,
    default: false
  },
  isFeatured: {
    type: Boolean,
    default: false
  }
}, {
  timestamps: true
});

// Indexes
ProductSchema.index({ name: 1 });
ProductSchema.index({ slug: 1 }, { unique: true });
ProductSchema.index({ sku: 1 }, { unique: true, sparse: true });
ProductSchema.index({ category: 1 });
ProductSchema.index({ brand: 1 });
ProductSchema.index({ price: 1 });
ProductSchema.index({ isActive: 1 });
ProductSchema.index({ isPromoted: 1 });
ProductSchema.index({ isFeatured: 1 });
ProductSchema.index({ category: 1, price: 1 });
ProductSchema.index({ isActive: 1, category: 1, price: 1 });
ProductSchema.index({ "ratings.average": -1, isActive: 1 });
ProductSchema.index(
  { name: "text", "description.short": "text", "description.long": "text", brand: "text" },
  { weights: { name: 10, "description.short": 5, "description.long": 3, brand: 3 } }
);

module.exports = mongoose.model('Product', ProductSchema);

--- File: server/src/data/models/review.model.js ---
// server/src/data/models/review.model.js
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const ReviewSchema = new Schema({
  // Thông tin cơ bản
  product: {
    type: Schema.Types.ObjectId,
    ref: "Product",
    required: true
  },
  user: {
    type: Schema.Types.ObjectId,
    ref: "User",
    required: true
  },
  order: {
    type: Schema.Types.ObjectId,
    ref: "Order"
  },
  
  // Nội dung đánh giá
  rating: {
    type: Number,
    required: true,
    min: 1,
    max: 5
  },
  title: {
    type: String,
    trim: true,
    maxlength: 100
  },
  review: {
    type: String,
    trim: true,
    maxlength: 2000
  },
  
  // Hình ảnh đính kèm
  images: [{
    url: String,
    thumbnail: String,
    caption: String
  }],
  
  // Metadata
  isVerifiedPurchase: {
    type: Boolean,
    default: false
  },
  purchaseDate: Date,
  
  // Tương tác với đánh giá
  helpfulness: {
    upvotes: {
      type: Number,
      default: 0
    },
    downvotes: {
      type: Number,
      default: 0
    },
    voters: [{
      user: {
        type: Schema.Types.ObjectId,
        ref: "User"
      },
      vote: {
        type: Number,
        enum: [1, -1]
      },
      votedAt: {
        type: Date,
        default: Date.now
      }
    }]
  },
  
  // Phản hồi
  responses: [{
    user: {
      type: Schema.Types.ObjectId,
      ref: "User"
    },
    isAdmin: {
      type: Boolean,
      default: false
    },
    content: {
      type: String,
      required: true,
      trim: true,
      maxlength: 1000
    },
    createdAt: {
      type: Date,
      default: Date.now
    },
    updatedAt: Date
  }],
  
  // Trạng thái
  isVisible: {
    type: Boolean,
    default: true
  },
  
  // Thông tin kiểm duyệt
  moderation: {
    status: {
      type: String,
      enum: ["pending", "approved", "rejected"],
      default: "pending"
    },
    moderatedBy: {
      type: Schema.Types.ObjectId,
      ref: "User"
    },
    moderatedAt: Date,
    reason: String
  }
}, {
  timestamps: true
});

// Indexes
ReviewSchema.index({ product: 1 });
ReviewSchema.index({ user: 1 });
ReviewSchema.index({ product: 1, createdAt: -1 });
ReviewSchema.index({ product: 1, rating: -1 });
ReviewSchema.index({ product: 1, "helpfulness.upvotes": -1 });
ReviewSchema.index({ "moderation.status": 1 });
ReviewSchema.index({ product: 1, "moderation.status": 1, isVisible: 1 });
ReviewSchema.index({ title: "text", review: "text" });

module.exports = mongoose.model('Review', ReviewSchema);

--- File: server/src/data/models/user.model.js ---
// server/src/data/models/user.model.js
const mongoose = require('mongoose');
const bcrypt = require('bcrypt');
const Schema = mongoose.Schema;

const UserSchema = new Schema({
  name: {
    type: String,
    required: true,
    trim: true
  },
  email: {
    type: String,
    required: true,
    unique: true,
    lowercase: true,
    trim: true
  },
  password: {
    type: String,
    required: true
  },
  role: {
    type: String,
    enum: ["user", "admin", "staff"],
    default: "user"
  },
  avatar: String,
  
  // Thông tin liên hệ
  phone: String,
  address: {
    street: String,
    city: String,
    state: String,
    zipCode: String,
    country: String
  },
  
  // Trạng thái tài khoản
  isActive: {
    type: Boolean,
    default: true
  },
  emailVerified: {
    type: Boolean,
    default: false
  },
  
  // Bảo mật
  resetPasswordToken: String,
  resetPasswordExpires: Date,
  emailVerificationToken: String,
  emailVerificationExpires: Date,
  
  // Dữ liệu theo dõi
  lastLogin: Date,
  loginCount: {
    type: Number,
    default: 0
  }
}, {
  timestamps: true
});

// Indexes
UserSchema.index({ email: 1 }, { unique: true });
UserSchema.index({ role: 1 });
UserSchema.index({ resetPasswordToken: 1 });
UserSchema.index({ emailVerificationToken: 1 });

// Pre-save middleware để hash password
UserSchema.pre('save', async function(next) {
  // Chỉ hash password nếu nó đã được sửa đổi hoặc là document mới
  if (!this.isModified('password')) return next();
  
  try {
    const salt = await bcrypt.genSalt(10);
    this.password = await bcrypt.hash(this.password, salt);
    next();
  } catch (error) {
    next(error);
  }
});

// Method so sánh password
UserSchema.methods.comparePassword = async function(candidatePassword) {
  return bcrypt.compare(candidatePassword, this.password);
};

module.exports = mongoose.model('User', UserSchema);

--- File: server/src/data/repositories/productRepository.js ---
// server/src/data/repositories/productRepository.js
const Product = require('../models/product.model');
const ApiError = require('../../common/errors/apiError');

class ProductRepository {
  async findAll(filter = {}, options = {}) {
    const { sort = { createdAt: -1 }, limit = 50, page = 1, populate = [] } = options;
    const skip = (page - 1) * limit;
    
    const query = Product.find(filter)
                        .sort(sort)
                        .skip(skip)
                        .limit(limit);
    
    if (populate.length > 0) {
      query.populate(populate);
    }
    
    const [products, totalCount] = await Promise.all([
      query.exec(),
      Product.countDocuments(filter)
    ]);
    
    return {
      data: products,
      pagination: {
        total: totalCount,
        page,
        limit,
        pages: Math.ceil(totalCount / limit)
      }
    };
  }
  
  async findById(id, options = {}) {
    const { populate = [] } = options;
    
    const query = Product.findById(id);
    
    if (populate.length > 0) {
      query.populate(populate);
    }
    
    const product = await query.exec();
    
    if (!product) {
      throw new ApiError(404, 'Product not found');
    }
    
    return product;
  }
  
  async findBySlug(slug, options = {}) {
    const { populate = [] } = options;
    
    const query = Product.findOne({ slug });
    
    if (populate.length > 0) {
      query.populate(populate);
    }
    
    const product = await query.exec();
    
    if (!product) {
      throw new ApiError(404, 'Product not found');
    }
    
    return product;
  }
  
  async create(data) {
    const product = new Product(data);
    return await product.save();
  }
  
  async update(id, data) {
    const product = await Product.findByIdAndUpdate(
      id,
      { ...data, updatedAt: Date.now() },
      { new: true, runValidators: true }
    );
    
    if (!product) {
      throw new ApiError(404, 'Product not found');
    }
    
    return product;
  }
  
  async delete(id) {
    const product = await Product.findByIdAndDelete(id);
    
    if (!product) {
      throw new ApiError(404, 'Product not found');
    }
    
    return { success: true };
  }
  
  async searchProducts(query, options = {}) {
    const { sort = { score: { $meta: 'textScore' } }, limit = 50, page = 1 } = options;
    const skip = (page - 1) * limit;
    
    const textSearchQuery = {
      $text: { $search: query },
      isActive: true
    };
    
    const [products, totalCount] = await Promise.all([
      Product.find(textSearchQuery, { score: { $meta: 'textScore' } })
            .sort(sort)
            .skip(skip)
            .limit(limit)
            .exec(),
      Product.countDocuments(textSearchQuery)
    ]);
    
    return {
      data: products,
      pagination: {
        total: totalCount,
        page,
        limit,
        pages: Math.ceil(totalCount / limit)
      }
    };
  }
  
  async updateRating(productId, rating) {
    return await Product.findByIdAndUpdate(
      productId,
      { ratings: rating },
      { new: true }
    );
  }
}

module.exports = new ProductRepository();

--- File: server/src/data/repositories/userRepository.js ---
// server/src/data/repositories/userRepository.js
const User = require('../models/user.model');
const ApiError = require('../../common/errors/apiError');

class UserRepository {
  async findAll(filter = {}, options = {}) {
    const { sort = { createdAt: -1 }, limit = 50, page = 1, select = '' } = options;
    const skip = (page - 1) * limit;
    
    const [users, totalCount] = await Promise.all([
      User.find(filter)
          .sort(sort)
          .skip(skip)
          .limit(limit)
          .select(select)
          .exec(),
      User.countDocuments(filter)
    ]);
    
    return {
      data: users,
      pagination: {
        total: totalCount,
        page,
        limit,
        pages: Math.ceil(totalCount / limit)
      }
    };
  }
  
  async findById(id, select = '') {
    const user = await User.findById(id).select(select).exec();
    
    if (!user) {
      throw new ApiError(404, 'User not found');
    }
    
    return user;
  }
  
  async findByEmail(email) {
    const user = await User.findOne({ email }).exec();
    return user;
  }
  
  async create(data) {
    // Kiểm tra email đã tồn tại chưa
    const existingUser = await this.findByEmail(data.email);
    
    if (existingUser) {
      throw new ApiError(409, 'Email already exists');
    }
    
    const user = new User(data);
    return await user.save();
  }
  
  async update(id, data) {
    // Nếu có cập nhật email, kiểm tra email đã tồn tại chưa
    if (data.email) {
      const existingUser = await User.findOne({ email: data.email, _id: { $ne: id } }).exec();
      
      if (existingUser) {
        throw new ApiError(409, 'Email already exists');
      }
    }
    
    const user = await User.findByIdAndUpdate(
      id,
      data,
      { new: true, runValidators: true }
    );
    
    if (!user) {
      throw new ApiError(404, 'User not found');
    }
    
    return user;
  }
  
  async delete(id) {
    const user = await User.findByIdAndDelete(id);
    
    if (!user) {
      throw new ApiError(404, 'User not found');
    }
    
    return { success: true };
  }
  
  async updatePassword(id, newPassword) {
    const user = await User.findById(id);
    
    if (!user) {
      throw new ApiError(404, 'User not found');
    }
    
    user.password = newPassword;
    return await user.save();
  }
  
  async findByResetToken(token) {
    return await User.findOne({
      resetPasswordToken: token,
      resetPasswordExpires: { $gt: Date.now() }
    });
  }
  
  async findByVerificationToken(token) {
    return await User.findOne({
      emailVerificationToken: token,
      emailVerificationExpires: { $gt: Date.now() }
    });
  }
  
  async updateLoginStats(id) {
    return await User.findByIdAndUpdate(id, {
      $inc: { loginCount: 1 },
      lastLogin: Date.now()
    });
  }
}

module.exports = new UserRepository();

--- File: server/src/middleware/apiError.js ---
/**
 * Lớp xử lý lỗi API
 * @author Steve
 * @project RunOut-Biliard
 */

/**
 * Lớp ApiError mở rộng từ Error để xử lý lỗi API
 * @class ApiError
 * @extends Error
 */
class ApiError extends Error {
  /**
   * Tạo một instance của ApiError
   * @param {number} statusCode - HTTP status code
   * @param {string} message - Thông báo lỗi
   * @param {boolean} isOperational - Xác định lỗi là operational hay programming
   * @param {string} stack - Stack trace
   */
  constructor(statusCode, message, isOperational = true, stack = '') {
    super(message);
    this.statusCode = statusCode;
    this.isOperational = isOperational;
    this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error';
    
    if (stack) {
      this.stack = stack;
    } else {
      Error.captureStackTrace(this, this.constructor);
    }
  }
}

module.exports = ApiError;

--- File: server/src/middleware/authMiddleware.js ---
/**
 * Middleware xác thực và phân quyền
 * @author Steve
 * @project RunOut-Biliard
 * @typedef {import('express').Response} Response
 * @typedef {import('express').NextFunction} NextFunction
 * 
 * @typedef {Object} UserData
 * @property {string} name - Tên người dùng
 * @property {string} email - Email người dùng
 * @property {string} password - Mật khẩu đã mã hóa
 * @property {'user' | 'admin' | 'staff'} role - Vai trò của người dùng
 * @property {boolean} isActive - Trạng thái hoạt động
 * 
 * @typedef {import('mongoose').Document & UserData & {
*   id: string, // Thêm id là bắt buộc
*   correctPassword(candidatePassword: string, userPassword: string): Promise<boolean>,
*   changedPasswordAfter(timestamp: number): boolean
* }} UserDocument
* 
* @typedef {import('express').Request & {
*   user: UserDocument,
*   resource?: any
* }} AuthRequest
*/
const jwt = require('jsonwebtoken');
const { promisify } = require('util');
const ApiError = require('./apiError');
const environment = require('../config/environment');
const logger = require('../config/logger');

/**
* @typedef {import('jsonwebtoken')} jwt
* @typedef {(token: string, secret: string) => Promise<any>} VerifyPromise
*/

/**
* Middleware xác thực người dùng thông qua JWT token
* @param {AuthRequest} req - Express request object
* @param {Response} res - Express response object
* @param {NextFunction} next - Express next function
*/
const authenticate = async (req, res, next) => {
 try {
   // 1) Lấy token từ header
   let token;
   if (
     req.headers.authorization &&
     req.headers.authorization.startsWith('Bearer')
   ) {
     token = req.headers.authorization.split(' ')[1];
   }

   // Nếu không có token
   if (!token) {
     return next(new ApiError(401, 'Vui lòng đăng nhập để truy cập'));
   }

   // 2) Xác thực token
   const decoded = await new Promise((resolve, reject) => {
     jwt.verify(token, environment.auth.jwtSecret, (err, decoded) => {
       if (err) return reject(err);
       resolve(decoded);
     });
   });
   
   // 3) Kiểm tra nếu người dùng vẫn tồn tại
   const User = require('../data/models/user.model');
   /** @type {UserDocument} */
   const currentUser = await User.findById(decoded.id);
   
   if (!currentUser) {
     return next(new ApiError(401, 'Người dùng với token này không còn tồn tại'));
   }

   // 4) Kiểm tra nếu người dùng đã thay đổi mật khẩu sau khi token được cấp
   if (currentUser.changedPasswordAfter(decoded.iat)) {
     return next(new ApiError(401, 'Mật khẩu đã được thay đổi. Vui lòng đăng nhập lại'));
   }

   // Lưu thông tin người dùng vào request
   req.user = currentUser;
   next();
 } catch (error) {
   // Xử lý lỗi xác thực
   if (error.name === 'JsonWebTokenError') {
     return next(new ApiError(401, 'Token không hợp lệ. Vui lòng đăng nhập lại'));
   }
   
   if (error.name === 'TokenExpiredError') {
     return next(new ApiError(401, 'Token đã hết hạn. Vui lòng đăng nhập lại'));
   }
   
   logger.error(`Lỗi xác thực: ${error.message}`);
   return next(new ApiError(401, 'Không thể xác thực. Vui lòng đăng nhập lại'));
 }
};

/**
* Middleware kiểm tra quyền truy cập
* @param  {...String} roles - Các roles được phép truy cập
* @returns {Function} Middleware function
*/
const authorize = (...roles) => {
 /**
  * @param {AuthRequest} req - Express request object
  * @param {Response} res - Express response object
  * @param {NextFunction} next - Express next function
  */
 return (req, res, next) => {
   // Kiểm tra nếu req.user không tồn tại (authenticate chưa được gọi)
   if (!req.user) {
     return next(new ApiError(500, 'Middleware authorize phải được gọi sau authenticate'));
   }
   
   // Kiểm tra nếu role của người dùng nằm trong danh sách roles cho phép
   if (!roles.includes(req.user.role)) {
     return next(new ApiError(403, 'Bạn không có quyền thực hiện hành động này'));
   }
   
   next();
 };
};

/**
* Middleware kiểm tra quyền sở hữu tài nguyên 
* (chỉ owner hoặc admin mới có quyền)
* @param {String} resourceModel - Tên model của tài nguyên
* @param {String} resourceIdParam - Tên parameter chứa ID tài nguyên
* @returns {Function} Middleware function
*/
const checkOwnership = (resourceModel, resourceIdParam = 'id') => {
 /**
  * @param {AuthRequest} req - Express request object
  * @param {Response} res - Express response object
  * @param {NextFunction} next - Express next function
  */
 return async (req, res, next) => {
   try {
     // Kiểm tra nếu req.user không tồn tại
     if (!req.user) {
       return next(new ApiError(500, 'Middleware checkOwnership phải được gọi sau authenticate'));
     }
     
     // Admin luôn có quyền
     if (req.user.role === 'admin') {
       return next();
     }
     
     // Lấy ID tài nguyên từ params
     const resourceId = req.params[resourceIdParam];
     if (!resourceId) {
       return next(new ApiError(400, `Không tìm thấy tham số ${resourceIdParam}`));
     }
     
     // Lấy model tương ứng
     const Model = require(`../data/models/${resourceModel}.model`);
     
     // Tìm tài nguyên
     const resource = await Model.findById(resourceId);
     if (!resource) {
       return next(new ApiError(404, 'Không tìm thấy tài nguyên'));
     }
     
     // Kiểm tra quyền sở hữu
     if (resource.user && resource.user.toString() !== req.user.id) {
       return next(new ApiError(403, 'Bạn không có quyền truy cập tài nguyên này'));
     }
     
     // Lưu tài nguyên vào request để sử dụng sau này nếu cần
     req.resource = resource;
     next();
   } catch (error) {
     logger.error(`Lỗi kiểm tra quyền sở hữu: ${error.message}`);
     next(new ApiError(500, 'Có lỗi xảy ra khi kiểm tra quyền sở hữu'));
   }
 };
};

module.exports = {
 authenticate,
 authorize,
 checkOwnership,
 ApiError
};

--- File: server/src/middleware/validate.js ---
/**
 * Middleware xác thực dữ liệu đầu vào
 * @author Steve
 * @project RunOut-Biliard
 */

const Joi = require('joi');
const { ApiError } = require('./errorHandler');

/**
 * Factory function tạo middleware xác thực dữ liệu
 * @param {Object} schema - Joi schema cho dữ liệu cần xác thực
 * @param {String} source - Nguồn dữ liệu ('body', 'query', 'params')
 * @returns {Function} Middleware function
 */
const validate = (schema, source = 'body') => {
  return (req, res, next) => {
    // Tạo schema lỏng lẻo (cho phép các trường không được khai báo)
    const validationSchema = source === 'body' 
      ? schema.options({ allowUnknown: true }) 
      : schema;
    
    // Lấy dữ liệu từ nguồn tương ứng
    const data = req[source];
    
    // Xác thực dữ liệu
    const { error, value } = validationSchema.validate(data, {
      abortEarly: false, // Trả về tất cả lỗi, không dừng lại ở lỗi đầu tiên
      stripUnknown: source === 'body', // Loại bỏ các trường không được khai báo trong schema
    });
    
    // Xử lý lỗi xác thực
    if (error) {
      // Chuyển đổi lỗi từ Joi sang format dễ đọc
      const errorDetails = error.details.map(detail => ({
        path: detail.path.join('.'),
        message: detail.message.replace(/['"]/g, ''),
      }));
      
      // Tạo thông báo lỗi
      const errorMessage = errorDetails
        .map(err => `${err.path}: ${err.message}`)
        .join('; ');
      
      // Trả về lỗi API
      return next(new ApiError(
        400, 
        `Dữ liệu không hợp lệ: ${errorMessage}`,
        true, 
        error.stack
      ));
    }
    
    // Gán lại giá trị đã được xác thực vào request
    req[source] = value;
    next();
  };
};

/**
 * Xác thực ID MongoDB
 * @returns {Function} Middleware function
 */
const validateMongoId = (paramName = 'id') => {
  const schema = Joi.object({
    [paramName]: Joi.string().pattern(/^[0-9a-fA-F]{24}$/).required()
  });
  
  return validate(schema, 'params');
};

/**
 * Schema xác thực phân trang
 */
const paginationSchema = Joi.object({
  page: Joi.number().integer().min(1).default(1),
  limit: Joi.number().integer().min(1).max(100).default(10),
  sort: Joi.string().default('-createdAt'),
});

/**
 * Xác thực thông số phân trang
 * @returns {Function} Middleware function
 */
const validatePagination = () => {
  return validate(paginationSchema, 'query');
};

module.exports = {
  validate,
  validateMongoId,
  validatePagination,
  paginationSchema
};

--- File: server/src/server.js ---
const app = require('./app');
const { config } = require('./config/environment');

const PORT = process.env.PORT || 5000;

app.listen(PORT, () => {
  console.log(`🚀 Server is running on port ${PORT}`);
});


--- File: server/src/services/auth/authService.js ---
/**
 * Auth Service - xử lý logic xác thực và phân quyền
 * @author Steve
 * @project RunOut-Biliard
 */

const jwt = require('jsonwebtoken');
const crypto = require('crypto');
const User = require('../../data/models/user.model');
const { ApiError } = require('../../middleware/errorHandler');
const logger = require('../../config/logger');
const environment = require('../../config/environment');
const { sendEmail } = require('../email/emailService');

/**
 * Class AuthService xử lý logic xác thực và phân quyền
 */
class AuthService {
  /**
   * Đăng ký tài khoản mới
   * @param {Object} userData - Thông tin đăng ký
   * @param {string} host - Host để tạo URL xác thực
   * @returns {Promise<Object>} - Thông tin người dùng đã tạo
   */
  async register(userData, host) {
    try {
      const { name, email, password, phone } = userData;
      
      // Kiểm tra email đã tồn tại chưa
      const existingUser = await User.findOne({ email });
      if (existingUser) {
        throw new ApiError(409, 'Email đã được sử dụng');
      }
      
      // Tạo verification token
      const verificationToken = crypto.randomBytes(32).toString('hex');
      const hashedToken = crypto
        .createHash('sha256')
        .update(verificationToken)
        .digest('hex');
      
      // Tạo user mới
      const newUser = await User.create({
        name,
        email,
        password,
        phone,
        emailVerificationToken: hashedToken,
        emailVerificationExpires: Date.now() + 24 * 60 * 60 * 1000, // 24 giờ
      });
      
      // Tạo URL xác thực
      const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';
      const verifyURL = `${protocol}://${host}/api/auth/verify-email/${verificationToken}`;
      
      // Gửi email xác thực
      await sendEmail({
        to: email,
        subject: 'Xác thực tài khoản RunOut-Biliard',
        template: 'verification',
        context: {
          name,
          verifyURL,
        },
      });
      
      // Không gửi mật khẩu và token trong response
      const userObj = newUser.toObject();
      delete userObj.password;
      delete userObj.emailVerificationToken;
      
      return userObj;
    } catch (error) {
      logger.error(`Lỗi đăng ký: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Đăng nhập
   * @param {string} email - Email người dùng
   * @param {string} password - Mật khẩu
   * @returns {Promise<Object>} - Thông tin người dùng và token
   */
  async login(email, password) {
    try {
      // Tìm user và lấy cả password (mặc định password bị loại trừ)
      const user = await User.findOne({ email }).select('+password');
      
      // Kiểm tra user tồn tại và password đúng
      if (!user || !(await user.correctPassword(password, user.password))) {
        throw new ApiError(401, 'Email hoặc mật khẩu không đúng');
      }
      
      // Kiểm tra email đã xác thực chưa
      if (!user.emailVerified) {
        throw new ApiError(401, 'Vui lòng xác thực email trước khi đăng nhập');
      }
      
      // Kiểm tra user có active không
      if (!user.isActive) {
        throw new ApiError(401, 'Tài khoản của bạn đã bị vô hiệu hóa');
      }
      
      // Tạo JWT token và refresh token
      const token = this.generateToken(user);
      const refreshToken = this.generateRefreshToken(user);
      
      // Cập nhật thông tin đăng nhập
      user.lastLogin = Date.now();
      user.loginCount += 1;
      await user.save({ validateBeforeSave: false });
      
      // Chuyển đổi user thành object và loại bỏ password
      const userObj = user.toObject();
      delete userObj.password;
      
      return {
        user: userObj,
        token,
        refreshToken,
      };
    } catch (error) {
      logger.error(`Lỗi đăng nhập: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Tạo JWT token
   * @param {Object} user - User object
   * @returns {string} - JWT token
   */
  generateToken(user) {
    return jwt.sign(
      { id: user._id, role: user.role },
      environment.auth.jwtSecret,
      { expiresIn: environment.auth.jwtExpiresIn }
    );
  }
  
  /**
   * Tạo refresh token
   * @param {Object} user - User object
   * @returns {string} - Refresh token
   */
  generateRefreshToken(user) {
    return jwt.sign(
      { id: user._id },
      environment.auth.jwtRefreshSecret,
      { expiresIn: environment.auth.jwtRefreshExpiresIn }
    );
  }
  
  /**
   * Làm mới token
   * @param {string} refreshToken - Refresh token
   * @returns {Promise<Object>} - Token mới
   */
  async refreshToken(refreshToken) {
    try {
      // Xác thực refresh token
      const decoded = jwt.verify(refreshToken, environment.auth.jwtRefreshSecret);
      
      // Tìm user
      const user = await User.findById(decoded.id);
      
      if (!user || !user.isActive) {
        throw new ApiError(401, 'Người dùng không tồn tại hoặc đã bị vô hiệu hóa');
      }
      
      // Tạo token mới
      const newToken = this.generateToken(user);
      
      return { token: newToken };
    } catch (error) {
      if (error instanceof jwt.JsonWebTokenError) {
        throw new ApiError(401, 'Refresh token không hợp lệ hoặc đã hết hạn');
      }
      
      logger.error(`Lỗi refresh token: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Quên mật khẩu
   * @param {string} email - Email người dùng
   * @param {string} host - Host để tạo URL reset
   * @returns {Promise<boolean>} - Thành công hay không
   */
  async forgotPassword(email, host) {
    try {
      // Tìm user theo email
      const user = await User.findOne({ email });
      
      if (!user) {
        throw new ApiError(404, 'Không tìm thấy người dùng với email này');
      }
      
      // Tạo reset token
      const resetToken = crypto.randomBytes(32).toString('hex');
      const hashedToken = crypto
        .createHash('sha256')
        .update(resetToken)
        .digest('hex');
      
      // Lưu token và thời hạn vào database
      user.resetPasswordToken = hashedToken;
      user.resetPasswordExpires = Date.now() + 10 * 60 * 1000; // 10 phút
      await user.save({ validateBeforeSave: false });
      
      // Tạo URL reset
      const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';
      const resetURL = `${protocol}://${host}/reset-password/${resetToken}`;
      
      // Gửi email
      await sendEmail({
        to: user.email,
        subject: 'Đặt lại mật khẩu RunOut-Biliard (có hiệu lực trong 10 phút)',
        template: 'resetPassword',
        context: {
          name: user.name,
          resetURL,
        },
      });
      
      return true;
    } catch (error) {
      logger.error(`Lỗi quên mật khẩu: ${error.message}`);
      
      // Nếu gửi email thất bại, xóa các fields reset
      if (error.message.includes('email')) {
        try {
          const user = await User.findOne({ email });
          if (user) {
            user.resetPasswordToken = undefined;
            user.resetPasswordExpires = undefined;
            await user.save({ validateBeforeSave: false });
          }
        } catch (innerError) {
          logger.error(`Lỗi khi xóa token reset: ${innerError.message}`);
        }
      }
      
      throw error;
    }
  }
  
  /**
   * Đặt lại mật khẩu
   * @param {string} token - Reset token
   * @param {string} password - Mật khẩu mới
   * @returns {Promise<Object>} - Thông tin người dùng và token
   */
  async resetPassword(token, password) {
    try {
      // Hash token
      const hashedToken = crypto
        .createHash('sha256')
        .update(token)
        .digest('hex');
      
      // Tìm user với token và kiểm tra thời hạn
      const user = await User.findOne({
        resetPasswordToken: hashedToken,
        resetPasswordExpires: { $gt: Date.now() },
      });
      
      // Kiểm tra nếu token hợp lệ
      if (!user) {
        throw new ApiError(400, 'Token không hợp lệ hoặc đã hết hạn');
      }
      
      // Cập nhật mật khẩu
      user.password = password;
      user.resetPasswordToken = undefined;
      user.resetPasswordExpires = undefined;
      await user.save();
      
      // Tạo token mới
      const jwtToken = this.generateToken(user);
      const refreshToken = this.generateRefreshToken(user);
      
      // Chuyển đổi user thành object và loại bỏ password
      const userObj = user.toObject();
      delete userObj.password;
      
      return {
        user: userObj,
        token: jwtToken,
        refreshToken,
      };
    } catch (error) {
      logger.error(`Lỗi đặt lại mật khẩu: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Xác thực email
   * @param {string} token - Verification token
   * @returns {Promise<boolean>} - Thành công hay không
   */
  async verifyEmail(token) {
    try {
      // Hash token
      const hashedToken = crypto
        .createHash('sha256')
        .update(token)
        .digest('hex');
      
      // Tìm user và kiểm tra thời hạn
      const user = await User.findOne({
        emailVerificationToken: hashedToken,
        emailVerificationExpires: { $gt: Date.now() },
      });
      
      // Kiểm tra nếu token hợp lệ
      if (!user) {
        throw new ApiError(400, 'Token không hợp lệ hoặc đã hết hạn');
      }
      
      // Cập nhật trạng thái xác thực
      user.emailVerified = true;
      user.emailVerificationToken = undefined;
      user.emailVerificationExpires = undefined;
      await user.save({ validateBeforeSave: false });
      
      return true;
    } catch (error) {
      logger.error(`Lỗi xác thực email: ${error.message}`);
      throw error;
    }
  }
}

// Export singleton instance
module.exports = new AuthService();

--- File: server/src/services/base/baseService.js ---
/**
 * Base Service - cung cấp các phương thức CRUD cơ bản
 * @author Steve
 * @project RunOut-Biliard
 */

const { ApiError } = require('../../middleware/errorHandler');
const logger = require('../../config/logger');

/**
 * Lớp BaseService cung cấp các phương thức CRUD cơ bản cho các service
 */
class BaseService {
  /**
   * Khởi tạo service với model tương ứng
   * @param {mongoose.Model} model - Mongoose model
   * @param {string} modelName - Tên của model (dùng cho log và thông báo lỗi)
   */
  constructor(model, modelName) {
    this.model = model;
    this.modelName = modelName || model.modelName;
  }

  /**
   * Lấy tất cả documents với filter, sort và pagination
   * @param {Object} filter - Điều kiện filter
   * @param {Object} options - Các options bổ sung (sort, pagination, select)
   * @returns {Promise<{data: Array, pagination: Object}>} - Dữ liệu và thông tin phân trang
   */
  async findAll(filter = {}, options = {}) {
    try {
      const { 
        sort = '-createdAt',
        page = 1,
        limit = 10,
        select = '',
        populate = ''
      } = options;
      
      const skip = (page - 1) * limit;
      
      // Build query
      let query = this.model.find(filter);
      
      // Apply select fields
      if (select) {
        query = query.select(select);
      }
      
      // Apply populate
      if (populate) {
        if (Array.isArray(populate)) {
          populate.forEach(field => {
            query = query.populate(field);
          });
        } else {
          query = query.populate(populate);
        }
      }
      
      // Execute query with sort, skip and limit
      const data = await query
        .sort(sort)
        .skip(skip)
        .limit(limit);
      
      // Count total documents matching filter
      const total = await this.model.countDocuments(filter);
      
      // Calculate pagination info
      const totalPages = Math.ceil(total / limit);
      const hasNext = page < totalPages;
      const hasPrev = page > 1;
      
      return {
        data,
        pagination: {
          total,
          page,
          limit,
          totalPages,
          hasNext,
          hasPrev
        }
      };
    } catch (error) {
      logger.error(`Error in ${this.modelName}.findAll: ${error.message}`);
      throw error;
    }
  }

  /**
   * Lấy document theo ID
   * @param {string} id - MongoDB ObjectId
   * @param {Object} options - Các options (select, populate)
   * @returns {Promise<Document>} - Document tìm thấy
   * @throws {ApiError} - 404 nếu không tìm thấy
   */
  async findById(id, options = {}) {
    try {
      const { select = '', populate = '' } = options;
      
      // Build query
      let query = this.model.findById(id);
      
      // Apply select fields
      if (select) {
        query = query.select(select);
      }
      
      // Apply populate
      if (populate) {
        if (Array.isArray(populate)) {
          populate.forEach(field => {
            query = query.populate(field);
          });
        } else {
          query = query.populate(populate);
        }
      }
      
      // Execute query
      const data = await query;
      
      // Throw error if not found
      if (!data) {
        throw new ApiError(404, `${this.modelName} không tìm thấy với ID: ${id}`);
      }
      
      return data;
    } catch (error) {
      // Rethrow ApiError
      if (error instanceof ApiError) {
        throw error;
      }
      
      logger.error(`Error in ${this.modelName}.findById: ${error.message}`);
      throw error;
    }
  }

  /**
   * Tạo document mới
   * @param {Object} data - Dữ liệu cho document mới
   * @returns {Promise<Document>} - Document đã tạo
   */
  async create(data) {
    try {
      const newDoc = await this.model.create(data);
      return newDoc;
    } catch (error) {
      logger.error(`Error in ${this.modelName}.create: ${error.message}`);
      throw error;
    }
  }

  /**
   * Cập nhật document theo ID
   * @param {string} id - MongoDB ObjectId
   * @param {Object} data - Dữ liệu cập nhật
   * @param {Object} options - Các options (new, runValidators)
   * @returns {Promise<Document>} - Document đã cập nhật
   * @throws {ApiError} - 404 nếu không tìm thấy
   */
  async update(id, data, options = {}) {
    try {
      const opts = { 
        new: true, 
        runValidators: true,
        ...options
      };
      
      const updated = await this.model.findByIdAndUpdate(id, data, opts);
      
      if (!updated) {
        throw new ApiError(404, `${this.modelName} không tìm thấy với ID: ${id}`);
      }
      
      return updated;
    } catch (error) {
      // Rethrow ApiError
      if (error instanceof ApiError) {
        throw error;
      }
      
      logger.error(`Error in ${this.modelName}.update: ${error.message}`);
      throw error;
    }
  }

  /**
   * Xóa document theo ID
   * @param {string} id - MongoDB ObjectId
   * @returns {Promise<Document>} - Document đã xóa
   * @throws {ApiError} - 404 nếu không tìm thấy
   */
  async delete(id) {
    try {
      const deleted = await this.model.findByIdAndDelete(id);
      
      if (!deleted) {
        throw new ApiError(404, `${this.modelName} không tìm thấy với ID: ${id}`);
      }
      
      return deleted;
    } catch (error) {
      // Rethrow ApiError
      if (error instanceof ApiError) {
        throw error;
      }
      
      logger.error(`Error in ${this.modelName}.delete: ${error.message}`);
      throw error;
    }
  }

  /**
   * Kiểm tra sự tồn tại của document theo ID
   * @param {string} id - MongoDB ObjectId
   * @returns {Promise<boolean>} - true nếu document tồn tại, false nếu không
   */
  async exists(id) {
    try {
      const count = await this.model.countDocuments({ _id: id });
      return count > 0;
    } catch (error) {
      logger.error(`Error in ${this.modelName}.exists: ${error.message}`);
      throw error;
    }
  }
}

module.exports = BaseService;

--- File: server/src/services/email/emailService.js ---
/**
 * Email Service - xử lý gửi email
 * @author Steve
 * @project RunOut-Biliard
 */

const nodemailer = require('nodemailer');
const path = require('path');
const fs = require('fs').promises;
const handlebars = require('handlebars');
const logger = require('../../config/logger');
const environment = require('../../config/environment');

/**
 * Class EmailService - xử lý gửi email
 */
class EmailService {
  constructor() {
    // Thiết lập transporter
    this.setupTransporter();
    
    // Đường dẫn đến thư mục chứa templates
    this.templatesDir = path.resolve(__dirname, 'templates');
    
    // Cache cho templates đã compile
    this.templateCache = {};
  }
  
  /**
   * Thiết lập transporter cho Nodemailer
   */
  setupTransporter() {
    // Sử dụng cấu hình khác nhau tùy thuộc vào môi trường
    if (environment.app.environment === 'development') {
      // Sử dụng Ethereal cho môi trường development
      this.createTestAccount();
    } else {
      // Sử dụng cấu hình SMTP thực cho production
      this.transporter = nodemailer.createTransport({
        host: process.env.EMAIL_HOST,
        port: process.env.EMAIL_PORT,
        secure: process.env.EMAIL_SECURE === 'true',
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASS
        }
      });
    }
  }
  
  /**
   * Tạo test account với Ethereal cho môi trường development
   */
  async createTestAccount() {
    try {
      const testAccount = await nodemailer.createTestAccount();
      
      this.transporter = nodemailer.createTransport({
        host: 'smtp.ethereal.email',
        port: 587,
        secure: false,
        auth: {
          user: testAccount.user,
          pass: testAccount.pass
        }
      });
      
      logger.info(`Đã tạo test account với Ethereal Email: ${testAccount.user}`);
    } catch (error) {
      logger.error(`Không thể tạo test account: ${error.message}`);
      
      // Fallback đến cấu hình giả lập
      this.transporter = {
        sendMail: async (mailOptions) => {
          logger.info('Gửi email giả lập:');
          logger.info(`Đến: ${mailOptions.to}`);
          logger.info(`Chủ đề: ${mailOptions.subject}`);
          logger.info(`Nội dung: ${mailOptions.text || mailOptions.html}`);
          
          return { messageId: `mock_${Date.now()}` };
        }
      };
    }
  }
  
  /**
   * Đọc và compile template email
   * @param {string} templateName - Tên template
   * @returns {Promise<Function>} - Template đã compile
   */
  async getTemplate(templateName) {
    // Kiểm tra cache
    if (this.templateCache[templateName]) {
      return this.templateCache[templateName];
    }
    
    try {
      // Đọc file template
      const templatePath = path.join(this.templatesDir, `${templateName}.hbs`);
      const templateSource = await fs.readFile(templatePath, 'utf8');
      
      // Compile template
      const template = handlebars.compile(templateSource);
      
      // Lưu vào cache
      this.templateCache[templateName] = template;
      
      return template;
    } catch (error) {
      logger.error(`Không thể đọc template email '${templateName}': ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Gửi email
   * @param {Object} options - Tùy chọn email
   * @param {string} options.to - Người nhận
   * @param {string} options.subject - Chủ đề
   * @param {string} options.template - Tên template (không có phần mở rộng)
   * @param {Object} options.context - Dữ liệu cho template
   * @returns {Promise<Object>} - Kết quả gửi email
   */
  async sendEmail(options) {
    try {
      const { to, subject, template, context } = options;
      
      // Lấy template
      const compiledTemplate = await this.getTemplate(template);
      
      // Thêm vào các biến toàn cục
      const enhancedContext = {
        ...context,
        appName: environment.app.name,
        signature: environment.app.signature,
        year: new Date().getFullYear(),
        logoUrl: process.env.APP_LOGO_URL || 'https://example.com/logo.png'
      };
      
      // Render HTML từ template
      const html = compiledTemplate(enhancedContext);
      
      // Thiết lập mail options
      const mailOptions = {
        from: process.env.EMAIL_FROM || `"${environment.app.name}" <no-reply@example.com>`,
        to,
        subject,
        html
      };
      
      // Gửi email
      const info = await this.transporter.sendMail(mailOptions);
      
      // Log URL để xem email (chỉ trong môi trường development với Ethereal)
      if (environment.app.environment === 'development' && info.messageId) {
        logger.info(`URL xem email: ${nodemailer.getTestMessageUrl(info)}`);
      }
      
      return info;
    } catch (error) {
      logger.error(`Lỗi gửi email: ${error.message}`);
      throw error;
    }
  }
}

// Export singleton instance
module.exports = new EmailService();

// Helper function để sử dụng service dễ dàng hơn
module.exports.sendEmail = (options) => module.exports.sendEmail(options);

--- File: server/src/services/email/templates/resetPassword.hbs ---
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Đặt Lại Mật Khẩu</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      line-height: 1.6;
      color: #333;
      background-color: #f9f9f9;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .header {
      text-align: center;
      padding: 20px 0;
      border-bottom: 2px solid #f0f0f0;
    }
    .logo {
      max-width: 180px;
      height: auto;
    }
    .content {
      padding: 20px 0;
    }
    .button {
      display: inline-block;
      padding: 12px 30px;
      background-color: #e74c3c;
      color: #ffffff !important;
      text-decoration: none;
      border-radius: 4px;
      font-weight: bold;
      margin: 20px 0;
      text-align: center;
    }
    .button:hover {
      background-color: #c0392b;
    }
    .footer {
      text-align: center;
      padding-top: 20px;
      border-top: 1px solid #f0f0f0;
      font-size: 12px;
      color: #777;
    }
    .warning {
      background-color: #fcf8e3;
      border-left: 4px solid #f0ad4e;
      padding: 10px;
      font-size: 14px;
      margin: 15px 0;
    }
    .note {
      font-size: 14px;
      color: #777;
      font-style: italic;
    }
    @media only screen and (max-width: 600px) {
      .container {
        width: 100%;
        padding: 10px;
      }
      .content {
        padding: 10px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <img src="{{logoUrl}}" alt="{{appName}}" class="logo">
      <h1>Đặt Lại Mật Khẩu</h1>
    </div>
    <div class="content">
      <p>Xin chào <strong>{{name}}</strong>,</p>
      
      <p>Chúng tôi đã nhận được yêu cầu đặt lại mật khẩu cho tài khoản của bạn tại <strong>{{appName}}</strong>. Vui lòng nhấp vào nút bên dưới để tiến hành đặt lại mật khẩu:</p>
      
      <div style="text-align: center;">
        <a href="{{resetURL}}" class="button">Đặt Lại Mật Khẩu</a>
      </div>
      
      <p>Hoặc, bạn có thể sao chép và dán đường dẫn dưới đây vào trình duyệt của mình:</p>
      
      <p style="word-break: break-all; background-color: #f5f5f5; padding: 10px; border-radius: 3px;">
        {{resetURL}}
      </p>
      
      <div class="warning">
        <strong>Lưu ý quan trọng:</strong> Đường dẫn này sẽ hết hạn sau 10 phút vì lý do bảo mật.
      </div>
      
      <p>Nếu bạn không yêu cầu đặt lại mật khẩu, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi ngay nếu bạn cho rằng có ai đó đang cố gắng truy cập trái phép vào tài khoản của bạn.</p>
      
      <p class="note">* Vì lý do bảo mật, chúng tôi khuyên bạn nên chọn một mật khẩu mạnh mà bạn chưa từng sử dụng cho các dịch vụ khác.</p>
      
      <p>Trân trọng,<br>Đội ngũ {{appName}}</p>
    </div>
    <div class="footer">
      <p>&copy; {{year}} {{appName}}. Tất cả các quyền thuộc về {{signature}}.</p>
      <p>
        <a href="#" style="color: #777; text-decoration: none; margin: 0 5px;">Chính sách bảo mật</a> |
        <a href="#" style="color: #777; text-decoration: none; margin: 0 5px;">Điều khoản sử dụng</a> |
        <a href="#" style="color: #777; text-decoration: none; margin: 0 5px;">Liên hệ</a>
      </p>
    </div>
  </div>
</body>
</html>
{{! This template is used for sending password reset emails. }}
{{! It includes a logo, a greeting, a button to reset the password, and a note about security. }}
{{! The email is styled with CSS for better readability and user experience. }}
{{! The template uses Handlebars syntax for dynamic content rendering. }}
{{! The email is designed to be responsive for mobile devices. }}

--- File: server/src/services/email/templates/verification.hbs ---
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Xác Thực Tài Khoản</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      line-height: 1.6;
      color: #333;
      background-color: #f9f9f9;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #ffffff;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    .header {
      text-align: center;
      padding: 20px 0;
      border-bottom: 2px solid #f0f0f0;
    }
    .logo {
      max-width: 180px;
      height: auto;
    }
    .content {
      padding: 20px 0;
    }
    .button {
      display: inline-block;
      padding: 12px 30px;
      background-color: #3498db;
      color: #ffffff !important;
      text-decoration: none;
      border-radius: 4px;
      font-weight: bold;
      margin: 20px 0;
      text-align: center;
    }
    .button:hover {
      background-color: #2980b9;
    }
    .footer {
      text-align: center;
      padding-top: 20px;
      border-top: 1px solid #f0f0f0;
      font-size: 12px;
      color: #777;
    }
    .note {
      font-size: 14px;
      color: #777;
      font-style: italic;
    }
    @media only screen and (max-width: 600px) {
      .container {
        width: 100%;
        padding: 10px;
      }
      .content {
        padding: 10px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <img src="{{logoUrl}}" alt="{{appName}}" class="logo">
      <h1>Xác Thực Tài Khoản</h1>
    </div>
    <div class="content">
      <p>Xin chào <strong>{{name}}</strong>,</p>
      
      <p>Cảm ơn bạn đã đăng ký tài khoản tại <strong>{{appName}}</strong>. Để hoàn tất quá trình đăng ký, vui lòng xác nhận địa chỉ email của bạn bằng cách nhấp vào nút bên dưới:</p>
      
      <div style="text-align: center;">
        <a href="{{verifyURL}}" class="button">Xác Nhận Email</a>
      </div>
      
      <p>Hoặc, bạn có thể sao chép và dán đường dẫn dưới đây vào trình duyệt của mình:</p>
      
      <p style="word-break: break-all; background-color: #f5f5f5; padding: 10px; border-radius: 3px;">
        {{verifyURL}}
      </p>
      
      <p class="note">* Đường dẫn này sẽ hết hạn sau 24 giờ.</p>
      
      <p>Nếu bạn không thực hiện yêu cầu này, vui lòng bỏ qua email này hoặc liên hệ với chúng tôi nếu bạn có thắc mắc.</p>
      
      <p>Trân trọng,<br>Đội ngũ {{appName}}</p>
    </div>
    <div class="footer">
      <p>&copy; {{year}} {{appName}}. Tất cả các quyền thuộc về {{signature}}.</p>
      <p>
        <a href="#" style="color: #777; text-decoration: none; margin: 0 5px;">Chính sách bảo mật</a> |
        <a href="#" style="color: #777; text-decoration: none; margin: 0 5px;">Điều khoản sử dụng</a> |
        <a href="#" style="color: #777; text-decoration: none; margin: 0 5px;">Liên hệ</a>
      </p>
    </div>
  </div>
</body>
</html>
{{! This template is used for sending account verification emails. }}
{{! It includes a logo, a greeting, a verification button, and a footer with links. }}
{{! The template is styled to be responsive and visually appealing. }}
{{! The placeholders will be replaced with actual values when the email is sent. }}
{{! The template uses Handlebars syntax for dynamic content rendering. }}
{{! Ensure to replace {{logoUrl}}, {{appName}}, {{name}}, {{verifyURL}}, {{year}}, and {{signature}} with actual values. }}
{{! The button color and hover effect can be customized as needed. }}
{{! The note about the expiration of the verification link is included for user awareness. }}
{{! The footer includes links to privacy policy, terms of use, and contact information. }}
{{! The email is designed to be user-friendly and easy to read on both desktop and mobile devices. }}
{{! Make sure to test the email template in different email clients for compatibility. }}
{{! This template is part of a larger email service system for user account management. }}
{{! The email service should handle sending the email with the appropriate SMTP settings. }}
{{! Ensure to validate the email addresses before sending to avoid bounces. }}
{{! Consider adding tracking parameters to the verification link for analytics purposes. }}
{{! The template can be further enhanced with additional styling or branding elements as needed. }}
{{! Always keep user experience in mind when designing email templates. }}
{{! Regularly review and update the template to ensure it meets current design standards. }}
{{! This template is a crucial part of the user onboarding process for the application. }}
{{! Properly test the email template with various email clients to ensure consistent rendering. }}
{{! Consider A/B testing different subject lines or content to improve engagement rates. }}
{{! Monitor the performance of the verification emails to optimize future campaigns. }}
{{! This template is a key component of the user verification process in the application. }}
{{! Ensure that all links are functional and lead to the correct destinations. }}
{{! The design should align with the overall branding of the application for consistency. }}

--- File: server/src/services/product/product.service.js ---
// Tạm thời dùng dữ liệu mock
let mockProducts = [];

const getAllProducts = () => {
  return mockProducts;
};

const getProductById = (id) => {
  return mockProducts.find((product) => product.id === id);
};

const createProduct = (data) => {
  const newProduct = {
    id: String(Date.now()),
    ...data,
  };
  mockProducts.push(newProduct);
  return newProduct;
};

module.exports = {
  getAllProducts,
  getProductById,
  createProduct,
};


--- File: server/src/services/user/userService.js ---
/**
 * User Service - xử lý logic quản lý người dùng
 * @author Steve
 * @project RunOut-Biliard
 */

const User = require('../../data/models/user.model');
const BaseService = require('../base/baseService');
const { ApiError } = require('../../middleware/errorHandler');
const logger = require('../../config/logger');

/**
 * Class UserService xử lý logic quản lý người dùng
 * Kế thừa từ BaseService để có các phương thức CRUD cơ bản
 */
class UserService extends BaseService {
  constructor() {
    super(User, 'User');
  }
  
  /**
   * Tạo người dùng mới
   * @override 
   * @param {Object} userData - Thông tin người dùng
   * @returns {Promise<Object>} - Người dùng đã tạo
   */
  async create(userData) {
    try {
      // Kiểm tra email đã tồn tại chưa
      const existingUser = await User.findOne({ email: userData.email });
      if (existingUser) {
        throw new ApiError(409, 'Email đã được sử dụng');
      }
      
      // Người dùng được tạo bởi admin mặc định đã xác thực email
      const newUserData = {
        ...userData,
        emailVerified: true
      };
      
      // Tạo người dùng mới
      const newUser = await super.create(newUserData);
      
      // Loại bỏ password khỏi response
      const userObj = newUser.toObject();
      delete userObj.password;
      
      return userObj;
    } catch (error) {
      logger.error(`Lỗi tạo người dùng: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Cập nhật thông tin người dùng
   * @override
   * @param {string} id - ID người dùng
   * @param {Object} updateData - Thông tin cập nhật
   * @param {Object} options - Tùy chọn
   * @returns {Promise<Object>} - Người dùng đã cập nhật
   */
  async update(id, updateData, options = {}) {
    try {
      // Loại bỏ các trường nhạy cảm không cho phép cập nhật trực tiếp
      const {
        password,
        emailVerified,
        role,
        loginCount,
        lastLogin,
        resetPasswordToken,
        resetPasswordExpires,
        emailVerificationToken,
        emailVerificationExpires,
        ...safeUpdateData
      } = updateData;
      
      // Admin có thể cập nhật role
      if (options.isAdmin && role) {
        safeUpdateData.role = role;
      }
      
      // Cập nhật thông tin người dùng
      const updatedUser = await super.update(id, safeUpdateData);
      
      return updatedUser;
    } catch (error) {
      logger.error(`Lỗi cập nhật người dùng: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Thay đổi mật khẩu
   * @param {string} userId - ID người dùng
   * @param {string} currentPassword - Mật khẩu hiện tại
   * @param {string} newPassword - Mật khẩu mới
   * @returns {Promise<Object>} - Người dùng đã cập nhật
   */
  async changePassword(userId, currentPassword, newPassword) {
    try {
      // Lấy user với password
      const user = await User.findById(userId).select('+password');
      
      if (!user) {
        throw new ApiError(404, 'Người dùng không tồn tại');
      }
      
      // Kiểm tra mật khẩu hiện tại
      if (!(await user.correctPassword(currentPassword, user.password))) {
        throw new ApiError(401, 'Mật khẩu hiện tại không đúng');
      }
      
      // Cập nhật mật khẩu
      user.password = newPassword;
      await user.save();
      
      // Loại bỏ password khỏi response
      const userObj = user.toObject();
      delete userObj.password;
      
      return userObj;
    } catch (error) {
      logger.error(`Lỗi thay đổi mật khẩu: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Vô hiệu hóa tài khoản
   * @param {string} userId - ID người dùng
   * @returns {Promise<Object>} - Người dùng đã cập nhật
   */
  async deactivateUser(userId) {
    try {
      const user = await this.findById(userId);
      
      // Cập nhật trạng thái active
      user.isActive = false;
      await user.save({ validateBeforeSave: false });
      
      return user;
    } catch (error) {
      logger.error(`Lỗi vô hiệu hóa tài khoản: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Kích hoạt lại tài khoản
   * @param {string} userId - ID người dùng
   * @returns {Promise<Object>} - Người dùng đã cập nhật
   */
  async activateUser(userId) {
    try {
      const user = await this.findById(userId);
      
      // Cập nhật trạng thái active
      user.isActive = true;
      await user.save({ validateBeforeSave: false });
      
      return user;
    } catch (error) {
      logger.error(`Lỗi kích hoạt tài khoản: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Tìm kiếm người dùng với các tiêu chí nâng cao
   * @param {Object} criteria - Tiêu chí tìm kiếm
   * @param {Object} options - Tùy chọn (pagination, sort)
   * @returns {Promise<Object>} - Kết quả tìm kiếm với phân trang
   */
  async search(criteria, options = {}) {
    try {
      const filter = {};
      
      // Xử lý các tiêu chí tìm kiếm
      if (criteria.name) {
        filter.name = { $regex: criteria.name, $options: 'i' };
      }
      
      if (criteria.email) {
        filter.email = { $regex: criteria.email, $options: 'i' };
      }
      
      if (criteria.phone) {
        filter.phone = { $regex: criteria.phone, $options: 'i' };
      }
      
      if (criteria.role) {
        filter.role = criteria.role;
      }
      
      if (criteria.isActive !== undefined) {
        filter.isActive = criteria.isActive;
      }
      
      if (criteria.emailVerified !== undefined) {
        filter.emailVerified = criteria.emailVerified;
      }
      
      // Tìm kiếm kết hợp theo text
      if (criteria.search) {
        filter.$or = [
          { name: { $regex: criteria.search, $options: 'i' } },
          { email: { $regex: criteria.search, $options: 'i' } },
          { phone: { $regex: criteria.search, $options: 'i' } }
        ];
      }
      
      // Tìm kiếm theo khoảng thời gian đăng ký
      if (criteria.createdFrom || criteria.createdTo) {
        filter.createdAt = {};
        
        if (criteria.createdFrom) {
          filter.createdAt.$gte = new Date(criteria.createdFrom);
        }
        
        if (criteria.createdTo) {
          filter.createdAt.$lte = new Date(criteria.createdTo);
        }
      }
      
      // Lấy kết quả với phân trang
      return await this.findAll(filter, {
        ...options,
        select: '-password',
      });
    } catch (error) {
      logger.error(`Lỗi tìm kiếm người dùng: ${error.message}`);
      throw error;
    }
  }
  
  /**
   * Xóa người dùng và dữ liệu liên quan
   * @override
   * @param {string} userId - ID người dùng
   * @returns {Promise<Object>} - Thông tin người dùng đã xóa
   */
  async delete(userId) {
    try {
      // Xóa dữ liệu liên quan đến người dùng trước (nếu cần)
      // TODO: Xóa dữ liệu liên quan như giỏ hàng, đơn hàng, đánh giá
      
      // Xóa người dùng
      const user = await super.delete(userId);
      
      return user;
    } catch (error) {
      logger.error(`Lỗi xóa người dùng: ${error.message}`);
      throw error;
    }
  }
}

// Export singleton instance
module.exports = new UserService();

--- File: server/src/types/express.d.ts ---
import { Document } from 'mongoose';

declare global {
  namespace Express {
    interface Request {
      user?: Document & {
        id: string;
        name: string;
        email: string;
        role: string;
        changedPasswordAfter?: (timestamp: number) => boolean;
        [key: string]: any;
      };
      resource?: Document & {
        user?: any;
        [key: string]: any;
      };
    }
  }
}

// Đảm bảo file này được coi là một module
export {};

--- File: server/src/utils/apiFeatures.js ---
/**
 * API Features Utility - xử lý các tính năng API phổ biến như filtering, sorting, pagination
 * @author Steve
 * @project RunOut-Biliard
 * 
 * @typedef {import('mongoose').Query<any, any>} MongooseQuery
 */

class APIFeatures {
    /**
     * Khởi tạo class với query và queryString
     * @param {MongooseQuery} query - Mongoose query ban đầu
     * @param {Object} queryString - Query parameters từ request
     */
    constructor(query, queryString) {
      this.query = query;
      this.queryString = queryString;
    }
  
    /**
     * Lọc dữ liệu theo các trường
     * @returns {APIFeatures} - Instance của class để chaining
     */
    filter() {
      // Tạo bản sao của query string
      const queryObj = { ...this.queryString };
      
      // Các trường loại trừ khỏi filtering
      const excludedFields = ['page', 'sort', 'limit', 'fields', 'search'];
      excludedFields.forEach(field => delete queryObj[field]);
      
      // Xử lý advanced filtering (gt, gte, lt, lte, in, nin)
      let queryStr = JSON.stringify(queryObj);
      queryStr = queryStr.replace(/\b(gt|gte|lt|lte|in|nin)\b/g, match => `$${match}`);
      
      // Áp dụng filter vào query
      this.query = this.query.find(JSON.parse(queryStr));
      
      return this;
    }
    
    /**
     * Thêm tìm kiếm text
     * @returns {APIFeatures} - Instance của class để chaining
     */
    search() {
      if (this.queryString.search) {
        // Tạo điều kiện tìm kiếm
        const searchQuery = {
          $or: [
            { name: { $regex: this.queryString.search, $options: 'i' } },
            { description: { $regex: this.queryString.search, $options: 'i' } }
          ]
        };
        
        // Áp dụng tìm kiếm vào query
        this.query = this.query.find(searchQuery);
      }
      
      return this;
    }
  
    /**
     * Sắp xếp kết quả
     * @returns {APIFeatures} - Instance của class để chaining
     */
    sort() {
      if (this.queryString.sort) {
        // Chuyển đổi chuỗi sort thành format cho MongoDB
        const sortBy = this.queryString.sort.split(',').join(' ');
        this.query = this.query.sort(sortBy);
      } else {
        // Mặc định sắp xếp theo thời gian tạo giảm dần
        this.query = this.query.sort('-createdAt');
      }
      
      return this;
    }
  
    /**
     * Giới hạn các trường được trả về
     * @returns {APIFeatures} - Instance của class để chaining
     */
    limitFields() {
      if (this.queryString.fields) {
        // Chuyển đổi chuỗi fields thành format cho MongoDB
        const fields = this.queryString.fields.split(',').join(' ');
        this.query = this.query.select(fields);
      } else {
        // Mặc định loại bỏ trường __v
        this.query = this.query.select('-__v');
      }
      
      return this;
    }
  
    /**
     * Phân trang kết quả
     * @returns {APIFeatures} - Instance của class để chaining
     */
    paginate() {
      // Chuyển đổi page và limit thành số
      const page = parseInt(this.queryString.page, 10) || 1;
      const limit = parseInt(this.queryString.limit, 10) || 10;
      const skip = (page - 1) * limit;
      
      // Áp dụng skip và limit vào query
      this.query = this.query.skip(skip).limit(limit);
      
      return this;
    }
    
    /**
     * Áp dụng tất cả các tính năng vào query
     * @returns {MongooseQuery} - Query đã được xử lý
     */
    build() {
      return this
        .filter()
        .search()
        .sort()
        .limitFields()
        .paginate()
        .query;
    }
  }
  
  module.exports = APIFeatures;

--- File: server/src/utils/catchAsync.js ---
/**
 * Utility wrapper để xử lý lỗi async cho controllers
 * @author Steve
 * @project RunOut-Biliard
 */

/**
 * Bọc hàm async để xử lý lỗi mà không cần try-catch trong mỗi controller
 * @param {Function} fn - Hàm async cần được bọc
 * @returns {Function} - Middleware function với xử lý lỗi
 */
const catchAsync = (fn) => {
    return (req, res, next) => {
      fn(req, res, next).catch(next);
    };
  };
  
  module.exports = catchAsync;

--- File: server/src/utils/responseHandler.js ---
/**
 * Response Handler Utility - định dạng chuẩn hóa cho responses
 * @author Steve
 * @project RunOut-Biliard
 */

/**
 * Gửi response thành công
 * @param {Object} res - Express response object
 * @param {number} statusCode - HTTP status code
 * @param {string} message - Thông báo thành công
 * @param {*} data - Dữ liệu trả về
 */
exports.sendSuccess = (res, statusCode = 200, message = 'Success', data = null) => {
    const response = {
      status: 'success',
      message,
    };
  
    if (data !== null) {
      response.data = data;
    }
  
    res.status(statusCode).json(response);
  };
  
  /**
   * Gửi response lỗi
   * @param {Object} res - Express response object
   * @param {number} statusCode - HTTP status code
   * @param {string} message - Thông báo lỗi
   * @param {Object} errors - Chi tiết lỗi (optional)
   */
  exports.sendError = (res, statusCode = 500, message = 'Error', errors = null) => {
    const response = {
      status: 'error',
      message,
    };
  
    if (errors !== null) {
      response.errors = errors;
    }
  
    res.status(statusCode).json(response);
  };
  
  /**
   * Gửi response với dữ liệu phân trang
   * @param {Object} res - Express response object
   * @param {number} statusCode - HTTP status code
   * @param {string} message - Thông báo
   * @param {Array} data - Dữ liệu trả về
   * @param {Object} pagination - Thông tin phân trang
   */
  exports.sendPaginated = (
    res,
    statusCode = 200,
    message = 'Success',
    data = [],
    pagination = {}
  ) => {
    const response = {
      status: 'success',
      message,
      data,
      pagination,
    };
  
    res.status(statusCode).json(response);
  };
  
  /**
   * Gửi response cho created
   * @param {Object} res - Express response object
   * @param {string} message - Thông báo
   * @param {*} data - Dữ liệu trả về
   */
  exports.sendCreated = (res, message = 'Created successfully', data = null) => {
    exports.sendSuccess(res, 201, message, data);
  };
  
  /**
   * Gửi response không có nội dung
   * @param {Object} res - Express response object
   */
  exports.sendNoContent = (res) => {
    res.status(204).end();
  };

--- File: server/src/utils/validatorUtils.js ---
/**
 * Validator Utilities - Các hàm hỗ trợ validate dữ liệu
 * @author Steve
 * @project RunOut-Biliard
 */

const mongoose = require('mongoose');

/**
 * Kiểm tra ID MongoDB hợp lệ
 * @param {string} id - ID cần kiểm tra
 * @returns {boolean} - true nếu hợp lệ, false nếu không
 */
exports.isValidMongoId = (id) => {
  return mongoose.Types.ObjectId.isValid(id);
};

/**
 * Kiểm tra số điện thoại Việt Nam hợp lệ
 * @param {string} phone - Số điện thoại cần kiểm tra
 * @returns {boolean} - true nếu hợp lệ, false nếu không
 */
exports.isValidVNPhone = (phone) => {
  return /^(0|\+84)[3|5|7|8|9][0-9]{8}$/.test(phone);
};

/**
 * Kiểm tra mật khẩu đủ mạnh
 * Yêu cầu:
 * - Ít nhất 8 ký tự
 * - Có ít nhất 1 chữ hoa
 * - Có ít nhất 1 chữ thường
 * - Có ít nhất 1 chữ số
 * @param {string} password - Mật khẩu cần kiểm tra
 * @returns {boolean} - true nếu hợp lệ, false nếu không
 */
exports.isStrongPassword = (password) => {
  const minLength = 8;
  const hasUpperCase = /[A-Z]/.test(password);
  const hasLowerCase = /[a-z]/.test(password);
  const hasNumbers = /[0-9]/.test(password);
  
  return (
    password.length >= minLength &&
    hasUpperCase &&
    hasLowerCase &&
    hasNumbers
  );
};

/**
 * Mã hóa một chuỗi thành slug
 * @param {string} text - Chuỗi cần mã hóa
 * @returns {string} - Slug đã tạo
 */
exports.slugify = (text) => {
  return text
    .toString()
    .normalize('NFD') // tách dấu thành các ký tự riêng biệt
    .replace(/[\u0300-\u036f]/g, '') // loại bỏ dấu
    .toLowerCase()
    .trim()
    .replace(/\s+/g, '-') // thay khoảng trắng bằng dấu gạch
    .replace(/[^\w-]+/g, '') // loại bỏ các ký tự đặc biệt
    .replace(/--+/g, '-'); // thay nhiều dấu gạch liên tiếp bằng một dấu
};

/**
 * Loại bỏ dấu tiếng Việt
 * @param {string} str - Chuỗi cần xử lý
 * @returns {string} - Chuỗi đã loại bỏ dấu
 */
exports.removeVietnameseAccents = (str) => {
  return str
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/đ/g, 'd')
    .replace(/Đ/g, 'D');
};

/**
 * Kiểm tra một giá trị có thuộc một enum không
 * @param {*} value - Giá trị cần kiểm tra
 * @param {Array} enumValues - Mảng các giá trị hợp lệ
 * @returns {boolean} - true nếu hợp lệ, false nếu không
 */
exports.isInEnum = (value, enumValues) => {
  return enumValues.includes(value);
};

/**
 * Tạo một mã ngẫu nhiên
 * @param {number} length - Độ dài mã
 * @returns {string} - Mã ngẫu nhiên
 */
exports.generateRandomCode = (length = 6) => {
  const characters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  let result = '';
  
  for (let i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  
  return result;
};

/**
 * Chuẩn hóa số điện thoại về định dạng 0xxxxxxxxx
 * @param {string} phone - Số điện thoại cần chuẩn hóa
 * @returns {string} - Số điện thoại đã chuẩn hóa
 */
exports.normalizePhone = (phone) => {
  if (!phone) return '';
  
  // Loại bỏ các ký tự không phải số
  let normalized = phone.replace(/\D/g, '');
  
  // Đổi +84 thành 0
  if (normalized.startsWith('84')) {
    normalized = '0' + normalized.substring(2);
  }
  
  return normalized;
};

--- File: server/tests/setup.js ---
// Load biến môi trường từ .env.test nếu tồn tại
require('dotenv').config({ path: '.env.test' });

// Thiết lập cho MongoDB Memory Server nếu sử dụng cho testing
// Uncomment nếu sử dụng mongodb-memory-server cho test
// const { MongoMemoryServer } = require('mongodb-memory-server');
// const mongoose = require('mongoose');

// let mongoServer;

// Hàm thiết lập trước khi chạy tất cả tests
beforeAll(async () => {
  // Thiết lập các biến môi trường cần thiết cho tests
  process.env.NODE_ENV = 'test';
  
  // Nếu sử dụng MongoDB Memory Server
  /*
  mongoServer = await MongoMemoryServer.create();
  const mongoUri = mongoServer.getUri();
  process.env.MONGODB_URI_TEST = mongoUri;
  
  await mongoose.connect(mongoUri, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  });
  */
  
  // Các thiết lập khác trước tests
  console.log('Test suite started');
});

// Hàm dọn dẹp sau mỗi test
afterEach(async () => {
  // Dọn dẹp mocks hoặc spy functions
  jest.clearAllMocks();
  
  // Xóa tất cả collections sau mỗi test
  /*
  if (mongoose.connection.readyState === 1) {
    const collections = mongoose.connection.collections;
    for (const key in collections) {
      await collections[key].deleteMany({});
    }
  }
  */
});

// Hàm dọn dẹp sau khi chạy tất cả tests
afterAll(async () => {
  // Đóng kết nối MongoDB nếu đang mở
  /*
  await mongoose.connection.close();
  if (mongoServer) {
    await mongoServer.stop();
  }
  */
  
  // Các dọn dẹp khác
  console.log('Test suite completed');
});

// Global matchers tùy chỉnh
expect.extend({
  // Ví dụ về custom matcher
  toBeWithinRange(received, floor, ceiling) {
    const pass = received >= floor && received <= ceiling;
    if (pass) {
      return {
        message: () => `expected ${received} not to be within range ${floor} - ${ceiling}`,
        pass: true,
      };
    } else {
      return {
        message: () => `expected ${received} to be within range ${floor} - ${ceiling}`,
        pass: false,
      };
    }
  },
});
